// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: def.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace waxnet.Internal.Proto {

    /// <summary>Holder for reflection information generated from def.proto</summary>
    internal static partial class DefReflection {

    #region Descriptor
    /// <summary>File descriptor for def.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DefReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglkZWYucHJvdG8SBXByb3RvIjsKGEh5ZHJhdGVkUXVpY2tSZXBseUJ1dHRv",
            "bhITCgtkaXNwbGF5VGV4dBgBIAEoCRIKCgJpZBgCIAEoCSI1ChFIeWRyYXRl",
            "ZFVSTEJ1dHRvbhITCgtkaXNwbGF5VGV4dBgBIAEoCRILCgN1cmwYAiABKAki",
            "PgoSSHlkcmF0ZWRDYWxsQnV0dG9uEhMKC2Rpc3BsYXlUZXh0GAEgASgJEhMK",
            "C3Bob25lTnVtYmVyGAIgASgJItYBChZIeWRyYXRlZFRlbXBsYXRlQnV0dG9u",
            "Eg0KBWluZGV4GAQgASgNEjsKEHF1aWNrUmVwbHlCdXR0b24YASABKAsyHy5w",
            "cm90by5IeWRyYXRlZFF1aWNrUmVwbHlCdXR0b25IABItCgl1cmxCdXR0b24Y",
            "AiABKAsyGC5wcm90by5IeWRyYXRlZFVSTEJ1dHRvbkgAEi8KCmNhbGxCdXR0",
            "b24YAyABKAsyGS5wcm90by5IeWRyYXRlZENhbGxCdXR0b25IAEIQCg5oeWRy",
            "YXRlZEJ1dHRvbiJTChBRdWlja1JlcGx5QnV0dG9uEjMKC2Rpc3BsYXlUZXh0",
            "GAEgASgLMh4ucHJvdG8uSGlnaGx5U3RydWN0dXJlZE1lc3NhZ2USCgoCaWQY",
            "AiABKAkibQoJVVJMQnV0dG9uEjMKC2Rpc3BsYXlUZXh0GAEgASgLMh4ucHJv",
            "dG8uSGlnaGx5U3RydWN0dXJlZE1lc3NhZ2USKwoDdXJsGAIgASgLMh4ucHJv",
            "dG8uSGlnaGx5U3RydWN0dXJlZE1lc3NhZ2UidgoKQ2FsbEJ1dHRvbhIzCgtk",
            "aXNwbGF5VGV4dBgBIAEoCzIeLnByb3RvLkhpZ2hseVN0cnVjdHVyZWRNZXNz",
            "YWdlEjMKC3Bob25lTnVtYmVyGAIgASgLMh4ucHJvdG8uSGlnaGx5U3RydWN0",
            "dXJlZE1lc3NhZ2UirgEKDlRlbXBsYXRlQnV0dG9uEg0KBWluZGV4GAQgASgN",
            "EjMKEHF1aWNrUmVwbHlCdXR0b24YASABKAsyFy5wcm90by5RdWlja1JlcGx5",
            "QnV0dG9uSAASJQoJdXJsQnV0dG9uGAIgASgLMhAucHJvdG8uVVJMQnV0dG9u",
            "SAASJwoKY2FsbEJ1dHRvbhgDIAEoCzIRLnByb3RvLkNhbGxCdXR0b25IAEII",
            "CgZidXR0b24iSwoITG9jYXRpb24SFwoPZGVncmVlc0xhdGl0dWRlGAEgASgB",
            "EhgKEGRlZ3JlZXNMb25naXR1ZGUYAiABKAESDAoEbmFtZRgDIAEoCSJHCgVQ",
            "b2ludBITCgt4RGVwcmVjYXRlZBgBIAEoBRITCgt5RGVwcmVjYXRlZBgCIAEo",
            "BRIJCgF4GAMgASgBEgkKAXkYBCABKAEibQoVSW50ZXJhY3RpdmVBbm5vdGF0",
            "aW9uEiUKD3BvbHlnb25WZXJ0aWNlcxgBIAMoCzIMLnByb3RvLlBvaW50EiMK",
            "CGxvY2F0aW9uGAIgASgLMg8ucHJvdG8uTG9jYXRpb25IAEIICgZhY3Rpb24i",
            "xwEKC0FkUmVwbHlJbmZvEhYKDmFkdmVydGlzZXJOYW1lGAEgASgJEj0KCW1l",
            "ZGlhVHlwZRgCIAEoDjIqLnByb3RvLkFkUmVwbHlJbmZvLkFEX1JFUExZX0lO",
            "Rk9fTUVESUFUWVBFEhUKDWpwZWdUaHVtYm5haWwYECABKAwSDwoHY2FwdGlv",
            "bhgRIAEoCSI5ChdBRF9SRVBMWV9JTkZPX01FRElBVFlQRRIICgROT05FEAAS",
            "CQoFSU1BR0UQARIJCgVWSURFTxACIowDCgtDb250ZXh0SW5mbxIQCghzdGFu",
            "emFJZBgBIAEoCRITCgtwYXJ0aWNpcGFudBgCIAEoCRIlCg1xdW90ZWRNZXNz",
            "YWdlGAMgASgLMg4ucHJvdG8uTWVzc2FnZRIRCglyZW1vdGVKaWQYBCABKAkS",
            "FAoMbWVudGlvbmVkSmlkGA8gAygJEhgKEGNvbnZlcnNpb25Tb3VyY2UYEiAB",
            "KAkSFgoOY29udmVyc2lvbkRhdGEYEyABKAwSHgoWY29udmVyc2lvbkRlbGF5",
            "U2Vjb25kcxgUIAEoDRIXCg9mb3J3YXJkaW5nU2NvcmUYFSABKA0SEwoLaXNG",
            "b3J3YXJkZWQYFiABKAgSJAoIcXVvdGVkQWQYFyABKAsyEi5wcm90by5BZFJl",
            "cGx5SW5mbxIpCg5wbGFjZWhvbGRlcktleRgYIAEoCzIRLnByb3RvLk1lc3Nh",
            "Z2VLZXkSEgoKZXhwaXJhdGlvbhgZIAEoDRIhChllcGhlbWVyYWxTZXR0aW5n",
            "VGltZXN0YW1wGBogASgDIlwKHFNlbmRlcktleURpc3RyaWJ1dGlvbk1lc3Nh",
            "Z2USDwoHZ3JvdXBJZBgBIAEoCRIrCiNheG9sb3RsU2VuZGVyS2V5RGlzdHJp",
            "YnV0aW9uTWVzc2FnZRgCIAEoDCKTBAoMSW1hZ2VNZXNzYWdlEgsKA3VybBgB",
            "IAEoCRIQCghtaW1ldHlwZRgCIAEoCRIPCgdjYXB0aW9uGAMgASgJEhIKCmZp",
            "bGVTaGEyNTYYBCABKAwSEgoKZmlsZUxlbmd0aBgFIAEoBBIOCgZoZWlnaHQY",
            "BiABKA0SDQoFd2lkdGgYByABKA0SEAoIbWVkaWFLZXkYCCABKAwSFQoNZmls",
            "ZUVuY1NoYTI1NhgJIAEoDBI8ChZpbnRlcmFjdGl2ZUFubm90YXRpb25zGAog",
            "AygLMhwucHJvdG8uSW50ZXJhY3RpdmVBbm5vdGF0aW9uEhIKCmRpcmVjdFBh",
            "dGgYCyABKAkSGQoRbWVkaWFLZXlUaW1lc3RhbXAYDCABKAMSFQoNanBlZ1Ro",
            "dW1ibmFpbBgQIAEoDBInCgtjb250ZXh0SW5mbxgRIAEoCzISLnByb3RvLkNv",
            "bnRleHRJbmZvEhgKEGZpcnN0U2NhblNpZGVjYXIYEiABKAwSFwoPZmlyc3RT",
            "Y2FuTGVuZ3RoGBMgASgNEhkKEWV4cGVyaW1lbnRHcm91cElkGBQgASgNEhQK",
            "DHNjYW5zU2lkZWNhchgVIAEoDBITCgtzY2FuTGVuZ3RocxgWIAMoDRIcChRt",
            "aWRRdWFsaXR5RmlsZVNoYTI1NhgXIAEoDBIfChdtaWRRdWFsaXR5RmlsZUVu",
            "Y1NoYTI1NhgYIAEoDCJdCg5Db250YWN0TWVzc2FnZRITCgtkaXNwbGF5TmFt",
            "ZRgBIAEoCRINCgV2Y2FyZBgQIAEoCRInCgtjb250ZXh0SW5mbxgRIAEoCzIS",
            "LnByb3RvLkNvbnRleHRJbmZvIqoCCg9Mb2NhdGlvbk1lc3NhZ2USFwoPZGVn",
            "cmVlc0xhdGl0dWRlGAEgASgBEhgKEGRlZ3JlZXNMb25naXR1ZGUYAiABKAES",
            "DAoEbmFtZRgDIAEoCRIPCgdhZGRyZXNzGAQgASgJEgsKA3VybBgFIAEoCRIO",
            "CgZpc0xpdmUYBiABKAgSGAoQYWNjdXJhY3lJbk1ldGVycxgHIAEoDRISCgpz",
            "cGVlZEluTXBzGAggASgCEikKIWRlZ3JlZXNDbG9ja3dpc2VGcm9tTWFnbmV0",
            "aWNOb3J0aBgJIAEoDRIPCgdjb21tZW50GAsgASgJEhUKDWpwZWdUaHVtYm5h",
            "aWwYECABKAwSJwoLY29udGV4dEluZm8YESABKAsyEi5wcm90by5Db250ZXh0",
            "SW5mbyLaBAoTRXh0ZW5kZWRUZXh0TWVzc2FnZRIMCgR0ZXh0GAEgASgJEhMK",
            "C21hdGNoZWRUZXh0GAIgASgJEhQKDGNhbm9uaWNhbFVybBgEIAEoCRITCgtk",
            "ZXNjcmlwdGlvbhgFIAEoCRINCgV0aXRsZRgGIAEoCRIQCgh0ZXh0QXJnYhgH",
            "IAEoBxIWCg5iYWNrZ3JvdW5kQXJnYhgIIAEoBxJHCgRmb250GAkgASgOMjku",
            "cHJvdG8uRXh0ZW5kZWRUZXh0TWVzc2FnZS5FWFRFTkRFRF9URVhUX01FU1NB",
            "R0VfRk9OVFRZUEUSUQoLcHJldmlld1R5cGUYCiABKA4yPC5wcm90by5FeHRl",
            "bmRlZFRleHRNZXNzYWdlLkVYVEVOREVEX1RFWFRfTUVTU0FHRV9QUkVWSUVX",
            "VFlQRRIVCg1qcGVnVGh1bWJuYWlsGBAgASgMEicKC2NvbnRleHRJbmZvGBEg",
            "ASgLMhIucHJvdG8uQ29udGV4dEluZm8SFwoPZG9Ob3RQbGF5SW5saW5lGBIg",
            "ASgIIowBCh5FWFRFTkRFRF9URVhUX01FU1NBR0VfRk9OVFRZUEUSDgoKU0FO",
            "U19TRVJJRhAAEgkKBVNFUklGEAESEwoPTk9SSUNBTl9SRUdVTEFSEAISEQoN",
            "QlJZTkRBTl9XUklURRADEhUKEUJFQkFTTkVVRV9SRUdVTEFSEAQSEAoMT1NX",
            "QUxEX0hFQVZZEAUiOAohRVhURU5ERURfVEVYVF9NRVNTQUdFX1BSRVZJRVdU",
            "WVBFEggKBE5PTkUQABIJCgVWSURFTxABIqQCCg9Eb2N1bWVudE1lc3NhZ2US",
            "CwoDdXJsGAEgASgJEhAKCG1pbWV0eXBlGAIgASgJEg0KBXRpdGxlGAMgASgJ",
            "EhIKCmZpbGVTaGEyNTYYBCABKAwSEgoKZmlsZUxlbmd0aBgFIAEoBBIRCglw",
            "YWdlQ291bnQYBiABKA0SEAoIbWVkaWFLZXkYByABKAwSEAoIZmlsZU5hbWUY",
            "CCABKAkSFQoNZmlsZUVuY1NoYTI1NhgJIAEoDBISCgpkaXJlY3RQYXRoGAog",
            "ASgJEhkKEW1lZGlhS2V5VGltZXN0YW1wGAsgASgDEhUKDWpwZWdUaHVtYm5h",
            "aWwYECABKAwSJwoLY29udGV4dEluZm8YESABKAsyEi5wcm90by5Db250ZXh0",
            "SW5mbyKOAgoMQXVkaW9NZXNzYWdlEgsKA3VybBgBIAEoCRIQCghtaW1ldHlw",
            "ZRgCIAEoCRISCgpmaWxlU2hhMjU2GAMgASgMEhIKCmZpbGVMZW5ndGgYBCAB",
            "KAQSDwoHc2Vjb25kcxgFIAEoDRILCgNwdHQYBiABKAgSEAoIbWVkaWFLZXkY",
            "ByABKAwSFQoNZmlsZUVuY1NoYTI1NhgIIAEoDBISCgpkaXJlY3RQYXRoGAkg",
            "ASgJEhkKEW1lZGlhS2V5VGltZXN0YW1wGAogASgDEicKC2NvbnRleHRJbmZv",
            "GBEgASgLMhIucHJvdG8uQ29udGV4dEluZm8SGAoQc3RyZWFtaW5nU2lkZWNh",
            "chgSIAEoDCKfBAoMVmlkZW9NZXNzYWdlEgsKA3VybBgBIAEoCRIQCghtaW1l",
            "dHlwZRgCIAEoCRISCgpmaWxlU2hhMjU2GAMgASgMEhIKCmZpbGVMZW5ndGgY",
            "BCABKAQSDwoHc2Vjb25kcxgFIAEoDRIQCghtZWRpYUtleRgGIAEoDBIPCgdj",
            "YXB0aW9uGAcgASgJEhMKC2dpZlBsYXliYWNrGAggASgIEg4KBmhlaWdodBgJ",
            "IAEoDRINCgV3aWR0aBgKIAEoDRIVCg1maWxlRW5jU2hhMjU2GAsgASgMEjwK",
            "FmludGVyYWN0aXZlQW5ub3RhdGlvbnMYDCADKAsyHC5wcm90by5JbnRlcmFj",
            "dGl2ZUFubm90YXRpb24SEgoKZGlyZWN0UGF0aBgNIAEoCRIZChFtZWRpYUtl",
            "eVRpbWVzdGFtcBgOIAEoAxIVCg1qcGVnVGh1bWJuYWlsGBAgASgMEicKC2Nv",
            "bnRleHRJbmZvGBEgASgLMhIucHJvdG8uQ29udGV4dEluZm8SGAoQc3RyZWFt",
            "aW5nU2lkZWNhchgSIAEoDBJFCg5naWZBdHRyaWJ1dGlvbhgTIAEoDjItLnBy",
            "b3RvLlZpZGVvTWVzc2FnZS5WSURFT19NRVNTQUdFX0FUVFJJQlVUSU9OIjsK",
            "GVZJREVPX01FU1NBR0VfQVRUUklCVVRJT04SCAoETk9ORRAAEgkKBUdJUEhZ",
            "EAESCQoFVEVOT1IQAiIXCgRDYWxsEg8KB2NhbGxLZXkYASABKAwiJwoEQ2hh",
            "dBITCgtkaXNwbGF5TmFtZRgBIAEoCRIKCgJpZBgCIAEoCSLmAgoPUHJvdG9j",
            "b2xNZXNzYWdlEh4KA2tleRgBIAEoCzIRLnByb3RvLk1lc3NhZ2VLZXkSOgoE",
            "dHlwZRgCIAEoDjIsLnByb3RvLlByb3RvY29sTWVzc2FnZS5QUk9UT0NPTF9N",
            "RVNTQUdFX1RZUEUSGwoTZXBoZW1lcmFsRXhwaXJhdGlvbhgEIAEoDRIhChll",
            "cGhlbWVyYWxTZXR0aW5nVGltZXN0YW1wGAUgASgDEj8KF2hpc3RvcnlTeW5j",
            "Tm90aWZpY2F0aW9uGAYgASgLMh4ucHJvdG8uSGlzdG9yeVN5bmNOb3RpZmlj",
            "YXRpb24idgoVUFJPVE9DT0xfTUVTU0FHRV9UWVBFEgoKBlJFVk9LRRAAEhUK",
            "EUVQSEVNRVJBTF9TRVRUSU5HEAMSGwoXRVBIRU1FUkFMX1NZTkNfUkVTUE9O",
            "U0UQBBIdChlISVNUT1JZX1NZTkNfTk9USUZJQ0FUSU9OEAUi3wIKF0hpc3Rv",
            "cnlTeW5jTm90aWZpY2F0aW9uEhIKCmZpbGVTaGEyNTYYASABKAwSEgoKZmls",
            "ZUxlbmd0aBgCIAEoBBIQCghtZWRpYUtleRgDIAEoDBIVCg1maWxlRW5jU2hh",
            "MjU2GAQgASgMEhIKCmRpcmVjdFBhdGgYBSABKAkSWgoIc3luY1R5cGUYBiAB",
            "KA4ySC5wcm90by5IaXN0b3J5U3luY05vdGlmaWNhdGlvbi5ISVNUT1JZX1NZ",
            "TkNfTk9USUZJQ0FUSU9OX0hJU1RPUllTWU5DVFlQRRISCgpjaHVua09yZGVy",
            "GAcgASgNIm8KKUhJU1RPUllfU1lOQ19OT1RJRklDQVRJT05fSElTVE9SWVNZ",
            "TkNUWVBFEhUKEUlOSVRJQUxfQk9PVFNUUkFQEAASFQoRSU5JVElBTF9TVEFU",
            "VVNfVjMQARIICgRGVUxMEAISCgoGUkVDRU5UEAMifQoUQ29udGFjdHNBcnJh",
            "eU1lc3NhZ2USEwoLZGlzcGxheU5hbWUYASABKAkSJwoIY29udGFjdHMYAiAD",
            "KAsyFS5wcm90by5Db250YWN0TWVzc2FnZRInCgtjb250ZXh0SW5mbxgRIAEo",
            "CzISLnByb3RvLkNvbnRleHRJbmZvIjcKC0hTTUN1cnJlbmN5EhQKDGN1cnJl",
            "bmN5Q29kZRgBIAEoCRISCgphbW91bnQxMDAwGAIgASgDIt0DChRIU01EYXRl",
            "VGltZUNvbXBvbmVudBJUCglkYXlPZldlZWsYASABKA4yQS5wcm90by5IU01E",
            "YXRlVGltZUNvbXBvbmVudC5IU01fREFURV9USU1FX0NPTVBPTkVOVF9EQVlP",
            "RldFRUtUWVBFEgwKBHllYXIYAiABKA0SDQoFbW9udGgYAyABKA0SEgoKZGF5",
            "T2ZNb250aBgEIAEoDRIMCgRob3VyGAUgASgNEg4KBm1pbnV0ZRgGIAEoDRJS",
            "CghjYWxlbmRhchgHIAEoDjJALnByb3RvLkhTTURhdGVUaW1lQ29tcG9uZW50",
            "LkhTTV9EQVRFX1RJTUVfQ09NUE9ORU5UX0NBTEVOREFSVFlQRSKDAQolSFNN",
            "X0RBVEVfVElNRV9DT01QT05FTlRfREFZT0ZXRUVLVFlQRRIKCgZNT05EQVkQ",
            "ARILCgdUVUVTREFZEAISDQoJV0VETkVTREFZEAMSDAoIVEhVUlNEQVkQBBIK",
            "CgZGUklEQVkQBRIMCghTQVRVUkRBWRAGEgoKBlNVTkRBWRAHIkYKJEhTTV9E",
            "QVRFX1RJTUVfQ09NUE9ORU5UX0NBTEVOREFSVFlQRRINCglHUkVHT1JJQU4Q",
            "ARIPCgtTT0xBUl9ISUpSSRACIikKFEhTTURhdGVUaW1lVW5peEVwb2NoEhEK",
            "CXRpbWVzdGFtcBgBIAEoAyKCAQoLSFNNRGF0ZVRpbWUSMAoJY29tcG9uZW50",
            "GAEgASgLMhsucHJvdG8uSFNNRGF0ZVRpbWVDb21wb25lbnRIABIwCgl1bml4",
            "RXBvY2gYAiABKAsyGy5wcm90by5IU01EYXRlVGltZVVuaXhFcG9jaEgAQg8K",
            "DWRhdGV0aW1lT25lb2YiiAEKF0hTTUxvY2FsaXphYmxlUGFyYW1ldGVyEg8K",
            "B2RlZmF1bHQYASABKAkSJgoIY3VycmVuY3kYAiABKAsyEi5wcm90by5IU01D",
            "dXJyZW5jeUgAEiYKCGRhdGVUaW1lGAMgASgLMhIucHJvdG8uSFNNRGF0ZVRp",
            "bWVIAEIMCgpwYXJhbU9uZW9mIpMCChdIaWdobHlTdHJ1Y3R1cmVkTWVzc2Fn",
            "ZRIRCgluYW1lc3BhY2UYASABKAkSEwoLZWxlbWVudE5hbWUYAiABKAkSDgoG",
            "cGFyYW1zGAMgAygJEhIKCmZhbGxiYWNrTGcYBCABKAkSEgoKZmFsbGJhY2tM",
            "YxgFIAEoCRI5ChFsb2NhbGl6YWJsZVBhcmFtcxgGIAMoCzIeLnByb3RvLkhT",
            "TUxvY2FsaXphYmxlUGFyYW1ldGVyEhcKD2RldGVybWluaXN0aWNMZxgHIAEo",
            "CRIXCg9kZXRlcm1pbmlzdGljTGMYCCABKAkSKwoLaHlkcmF0ZWRIc20YCSAB",
            "KAsyFi5wcm90by5UZW1wbGF0ZU1lc3NhZ2UiZwoSU2VuZFBheW1lbnRNZXNz",
            "YWdlEiMKC25vdGVNZXNzYWdlGAIgASgLMg4ucHJvdG8uTWVzc2FnZRIsChFy",
            "ZXF1ZXN0TWVzc2FnZUtleRgDIAEoCzIRLnByb3RvLk1lc3NhZ2VLZXkimwEK",
            "FVJlcXVlc3RQYXltZW50TWVzc2FnZRIjCgtub3RlTWVzc2FnZRgEIAEoCzIO",
            "LnByb3RvLk1lc3NhZ2USGwoTY3VycmVuY3lDb2RlSXNvNDIxNxgBIAEoCRIS",
            "CgphbW91bnQxMDAwGAIgASgEEhMKC3JlcXVlc3RGcm9tGAMgASgJEhcKD2V4",
            "cGlyeVRpbWVzdGFtcBgFIAEoAyI+ChxEZWNsaW5lUGF5bWVudFJlcXVlc3RN",
            "ZXNzYWdlEh4KA2tleRgBIAEoCzIRLnByb3RvLk1lc3NhZ2VLZXkiPQobQ2Fu",
            "Y2VsUGF5bWVudFJlcXVlc3RNZXNzYWdlEh4KA2tleRgBIAEoCzIRLnByb3Rv",
            "Lk1lc3NhZ2VLZXkingIKE0xpdmVMb2NhdGlvbk1lc3NhZ2USFwoPZGVncmVl",
            "c0xhdGl0dWRlGAEgASgBEhgKEGRlZ3JlZXNMb25naXR1ZGUYAiABKAESGAoQ",
            "YWNjdXJhY3lJbk1ldGVycxgDIAEoDRISCgpzcGVlZEluTXBzGAQgASgCEikK",
            "IWRlZ3JlZXNDbG9ja3dpc2VGcm9tTWFnbmV0aWNOb3J0aBgFIAEoDRIPCgdj",
            "YXB0aW9uGAYgASgJEhYKDnNlcXVlbmNlTnVtYmVyGAcgASgDEhIKCnRpbWVP",
            "ZmZzZXQYCCABKA0SFQoNanBlZ1RodW1ibmFpbBgQIAEoDBInCgtjb250ZXh0",
            "SW5mbxgRIAEoCzISLnByb3RvLkNvbnRleHRJbmZvItYCCg5TdGlja2VyTWVz",
            "c2FnZRILCgN1cmwYASABKAkSEgoKZmlsZVNoYTI1NhgCIAEoDBIVCg1maWxl",
            "RW5jU2hhMjU2GAMgASgMEhAKCG1lZGlhS2V5GAQgASgMEhAKCG1pbWV0eXBl",
            "GAUgASgJEg4KBmhlaWdodBgGIAEoDRINCgV3aWR0aBgHIAEoDRISCgpkaXJl",
            "Y3RQYXRoGAggASgJEhIKCmZpbGVMZW5ndGgYCSABKAQSGQoRbWVkaWFLZXlU",
            "aW1lc3RhbXAYCiABKAMSGAoQZmlyc3RGcmFtZUxlbmd0aBgLIAEoDRIZChFm",
            "aXJzdEZyYW1lU2lkZWNhchgMIAEoDBISCgppc0FuaW1hdGVkGA0gASgIEhQK",
            "DHBuZ1RodW1ibmFpbBgQIAEoDBInCgtjb250ZXh0SW5mbxgRIAEoCzISLnBy",
            "b3RvLkNvbnRleHRJbmZvIqYDCg9Gb3VyUm93VGVtcGxhdGUSLwoHY29udGVu",
            "dBgGIAEoCzIeLnByb3RvLkhpZ2hseVN0cnVjdHVyZWRNZXNzYWdlEi4KBmZv",
            "b3RlchgHIAEoCzIeLnByb3RvLkhpZ2hseVN0cnVjdHVyZWRNZXNzYWdlEiYK",
            "B2J1dHRvbnMYCCADKAsyFS5wcm90by5UZW1wbGF0ZUJ1dHRvbhIxCg9kb2N1",
            "bWVudE1lc3NhZ2UYASABKAsyFi5wcm90by5Eb2N1bWVudE1lc3NhZ2VIABJB",
            "ChdoaWdobHlTdHJ1Y3R1cmVkTWVzc2FnZRgCIAEoCzIeLnByb3RvLkhpZ2hs",
            "eVN0cnVjdHVyZWRNZXNzYWdlSAASKwoMaW1hZ2VNZXNzYWdlGAMgASgLMhMu",
            "cHJvdG8uSW1hZ2VNZXNzYWdlSAASKwoMdmlkZW9NZXNzYWdlGAQgASgLMhMu",
            "cHJvdG8uVmlkZW9NZXNzYWdlSAASMQoPbG9jYXRpb25NZXNzYWdlGAUgASgL",
            "MhYucHJvdG8uTG9jYXRpb25NZXNzYWdlSABCBwoFdGl0bGUihAMKF0h5ZHJh",
            "dGVkRm91clJvd1RlbXBsYXRlEhsKE2h5ZHJhdGVkQ29udGVudFRleHQYBiAB",
            "KAkSGgoSaHlkcmF0ZWRGb290ZXJUZXh0GAcgASgJEjYKD2h5ZHJhdGVkQnV0",
            "dG9ucxgIIAMoCzIdLnByb3RvLkh5ZHJhdGVkVGVtcGxhdGVCdXR0b24SEgoK",
            "dGVtcGxhdGVJZBgJIAEoCRIxCg9kb2N1bWVudE1lc3NhZ2UYASABKAsyFi5w",
            "cm90by5Eb2N1bWVudE1lc3NhZ2VIABIbChFoeWRyYXRlZFRpdGxlVGV4dBgC",
            "IAEoCUgAEisKDGltYWdlTWVzc2FnZRgDIAEoCzITLnByb3RvLkltYWdlTWVz",
            "c2FnZUgAEisKDHZpZGVvTWVzc2FnZRgEIAEoCzITLnByb3RvLlZpZGVvTWVz",
            "c2FnZUgAEjEKD2xvY2F0aW9uTWVzc2FnZRgFIAEoCzIWLnByb3RvLkxvY2F0",
            "aW9uTWVzc2FnZUgAQgcKBXRpdGxlIvQBCg9UZW1wbGF0ZU1lc3NhZ2USJwoL",
            "Y29udGV4dEluZm8YAyABKAsyEi5wcm90by5Db250ZXh0SW5mbxI4ChBoeWRy",
            "YXRlZFRlbXBsYXRlGAQgASgLMh4ucHJvdG8uSHlkcmF0ZWRGb3VyUm93VGVt",
            "cGxhdGUSMQoPZm91clJvd1RlbXBsYXRlGAEgASgLMhYucHJvdG8uRm91clJv",
            "d1RlbXBsYXRlSAASQQoXaHlkcmF0ZWRGb3VyUm93VGVtcGxhdGUYAiABKAsy",
            "Hi5wcm90by5IeWRyYXRlZEZvdXJSb3dUZW1wbGF0ZUgAQggKBmZvcm1hdCKN",
            "AQoaVGVtcGxhdGVCdXR0b25SZXBseU1lc3NhZ2USEgoKc2VsZWN0ZWRJZBgB",
            "IAEoCRIbChNzZWxlY3RlZERpc3BsYXlUZXh0GAIgASgJEicKC2NvbnRleHRJ",
            "bmZvGAMgASgLMhIucHJvdG8uQ29udGV4dEluZm8SFQoNc2VsZWN0ZWRJbmRl",
            "eBgEIAEoDSJgCg9DYXRhbG9nU25hcHNob3QSKQoMY2F0YWxvZ0ltYWdlGAEg",
            "ASgLMhMucHJvdG8uSW1hZ2VNZXNzYWdlEg0KBXRpdGxlGAIgASgJEhMKC2Rl",
            "c2NyaXB0aW9uGAMgASgJIvQBCg9Qcm9kdWN0U25hcHNob3QSKQoMcHJvZHVj",
            "dEltYWdlGAEgASgLMhMucHJvdG8uSW1hZ2VNZXNzYWdlEhEKCXByb2R1Y3RJ",
            "ZBgCIAEoCRINCgV0aXRsZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIU",
            "CgxjdXJyZW5jeUNvZGUYBSABKAkSFwoPcHJpY2VBbW91bnQxMDAwGAYgASgD",
            "EhIKCnJldGFpbGVySWQYByABKAkSCwoDdXJsGAggASgJEhkKEXByb2R1Y3RJ",
            "bWFnZUNvdW50GAkgASgNEhQKDGZpcnN0SW1hZ2VJZBgLIAEoCSKlAQoOUHJv",
            "ZHVjdE1lc3NhZ2USJwoHcHJvZHVjdBgBIAEoCzIWLnByb3RvLlByb2R1Y3RT",
            "bmFwc2hvdBIYChBidXNpbmVzc093bmVySmlkGAIgASgJEicKB2NhdGFsb2cY",
            "BCABKAsyFi5wcm90by5DYXRhbG9nU25hcHNob3QSJwoLY29udGV4dEluZm8Y",
            "ESABKAsyEi5wcm90by5Db250ZXh0SW5mbyK4AQoSR3JvdXBJbnZpdGVNZXNz",
            "YWdlEhAKCGdyb3VwSmlkGAEgASgJEhIKCmludml0ZUNvZGUYAiABKAkSGAoQ",
            "aW52aXRlRXhwaXJhdGlvbhgDIAEoAxIRCglncm91cE5hbWUYBCABKAkSFQoN",
            "anBlZ1RodW1ibmFpbBgFIAEoDBIPCgdjYXB0aW9uGAYgASgJEicKC2NvbnRl",
            "eHRJbmZvGAcgASgLMhIucHJvdG8uQ29udGV4dEluZm8iTAoRRGV2aWNlU2Vu",
            "dE1lc3NhZ2USFgoOZGVzdGluYXRpb25KaWQYASABKAkSHwoHbWVzc2FnZRgC",
            "IAEoCzIOLnByb3RvLk1lc3NhZ2UiLwoRRGV2aWNlU3luY01lc3NhZ2USGgoS",
            "c2VyaWFsaXplZFhtbEJ5dGVzGAEgASgMIqkLCgdNZXNzYWdlEhQKDGNvbnZl",
            "cnNhdGlvbhgBIAEoCRJJChxzZW5kZXJLZXlEaXN0cmlidXRpb25NZXNzYWdl",
            "GAIgASgLMiMucHJvdG8uU2VuZGVyS2V5RGlzdHJpYnV0aW9uTWVzc2FnZRIp",
            "CgxpbWFnZU1lc3NhZ2UYAyABKAsyEy5wcm90by5JbWFnZU1lc3NhZ2USLQoO",
            "Y29udGFjdE1lc3NhZ2UYBCABKAsyFS5wcm90by5Db250YWN0TWVzc2FnZRIv",
            "Cg9sb2NhdGlvbk1lc3NhZ2UYBSABKAsyFi5wcm90by5Mb2NhdGlvbk1lc3Nh",
            "Z2USNwoTZXh0ZW5kZWRUZXh0TWVzc2FnZRgGIAEoCzIaLnByb3RvLkV4dGVu",
            "ZGVkVGV4dE1lc3NhZ2USLwoPZG9jdW1lbnRNZXNzYWdlGAcgASgLMhYucHJv",
            "dG8uRG9jdW1lbnRNZXNzYWdlEikKDGF1ZGlvTWVzc2FnZRgIIAEoCzITLnBy",
            "b3RvLkF1ZGlvTWVzc2FnZRIpCgx2aWRlb01lc3NhZ2UYCSABKAsyEy5wcm90",
            "by5WaWRlb01lc3NhZ2USGQoEY2FsbBgKIAEoCzILLnByb3RvLkNhbGwSGQoE",
            "Y2hhdBgLIAEoCzILLnByb3RvLkNoYXQSLwoPcHJvdG9jb2xNZXNzYWdlGAwg",
            "ASgLMhYucHJvdG8uUHJvdG9jb2xNZXNzYWdlEjkKFGNvbnRhY3RzQXJyYXlN",
            "ZXNzYWdlGA0gASgLMhsucHJvdG8uQ29udGFjdHNBcnJheU1lc3NhZ2USPwoX",
            "aGlnaGx5U3RydWN0dXJlZE1lc3NhZ2UYDiABKAsyHi5wcm90by5IaWdobHlT",
            "dHJ1Y3R1cmVkTWVzc2FnZRJXCipmYXN0UmF0Y2hldEtleVNlbmRlcktleURp",
            "c3RyaWJ1dGlvbk1lc3NhZ2UYDyABKAsyIy5wcm90by5TZW5kZXJLZXlEaXN0",
            "cmlidXRpb25NZXNzYWdlEjUKEnNlbmRQYXltZW50TWVzc2FnZRgQIAEoCzIZ",
            "LnByb3RvLlNlbmRQYXltZW50TWVzc2FnZRI3ChNsaXZlTG9jYXRpb25NZXNz",
            "YWdlGBIgASgLMhoucHJvdG8uTGl2ZUxvY2F0aW9uTWVzc2FnZRI7ChVyZXF1",
            "ZXN0UGF5bWVudE1lc3NhZ2UYFiABKAsyHC5wcm90by5SZXF1ZXN0UGF5bWVu",
            "dE1lc3NhZ2USSQocZGVjbGluZVBheW1lbnRSZXF1ZXN0TWVzc2FnZRgXIAEo",
            "CzIjLnByb3RvLkRlY2xpbmVQYXltZW50UmVxdWVzdE1lc3NhZ2USRwobY2Fu",
            "Y2VsUGF5bWVudFJlcXVlc3RNZXNzYWdlGBggASgLMiIucHJvdG8uQ2FuY2Vs",
            "UGF5bWVudFJlcXVlc3RNZXNzYWdlEi8KD3RlbXBsYXRlTWVzc2FnZRgZIAEo",
            "CzIWLnByb3RvLlRlbXBsYXRlTWVzc2FnZRItCg5zdGlja2VyTWVzc2FnZRga",
            "IAEoCzIVLnByb3RvLlN0aWNrZXJNZXNzYWdlEjUKEmdyb3VwSW52aXRlTWVz",
            "c2FnZRgcIAEoCzIZLnByb3RvLkdyb3VwSW52aXRlTWVzc2FnZRJFChp0ZW1w",
            "bGF0ZUJ1dHRvblJlcGx5TWVzc2FnZRgdIAEoCzIhLnByb3RvLlRlbXBsYXRl",
            "QnV0dG9uUmVwbHlNZXNzYWdlEi0KDnByb2R1Y3RNZXNzYWdlGB4gASgLMhUu",
            "cHJvdG8uUHJvZHVjdE1lc3NhZ2USMwoRZGV2aWNlU2VudE1lc3NhZ2UYHyAB",
            "KAsyGC5wcm90by5EZXZpY2VTZW50TWVzc2FnZRIzChFkZXZpY2VTeW5jTWVz",
            "c2FnZRggIAEoCzIYLnByb3RvLkRldmljZVN5bmNNZXNzYWdlIlAKCk1lc3Nh",
            "Z2VLZXkSEQoJcmVtb3RlSmlkGAEgASgJEg4KBmZyb21NZRgCIAEoCBIKCgJp",
            "ZBgDIAEoCRITCgtwYXJ0aWNpcGFudBgEIAEoCSLlEAoLV2ViRmVhdHVyZXMS",
            "OwoNbGFiZWxzRGlzcGxheRgBIAEoDjIkLnByb3RvLldlYkZlYXR1cmVzLldF",
            "Ql9GRUFUVVJFU19GTEFHEkQKFnZvaXBJbmRpdmlkdWFsT3V0Z29pbmcYAiAB",
            "KA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNfRkxBRxI2Cghn",
            "cm91cHNWMxgDIAEoDjIkLnByb3RvLldlYkZlYXR1cmVzLldFQl9GRUFUVVJF",
            "U19GTEFHEjwKDmdyb3Vwc1YzQ3JlYXRlGAQgASgOMiQucHJvdG8uV2ViRmVh",
            "dHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSPAoOY2hhbmdlTnVtYmVyVjIYBSAB",
            "KA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNfRkxBRxJEChZx",
            "dWVyeVN0YXR1c1YzVGh1bWJuYWlsGAYgASgOMiQucHJvdG8uV2ViRmVhdHVy",
            "ZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSOwoNbGl2ZUxvY2F0aW9ucxgHIAEoDjIk",
            "LnByb3RvLldlYkZlYXR1cmVzLldFQl9GRUFUVVJFU19GTEFHEjgKCnF1ZXJ5",
            "Vm5hbWUYCCABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNf",
            "RkxBRxJEChZ2b2lwSW5kaXZpZHVhbEluY29taW5nGAkgASgOMiQucHJvdG8u",
            "V2ViRmVhdHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSPwoRcXVpY2tSZXBsaWVz",
            "UXVlcnkYCiABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNf",
            "RkxBRxI2CghwYXltZW50cxgLIAEoDjIkLnByb3RvLldlYkZlYXR1cmVzLldF",
            "Ql9GRUFUVVJFU19GTEFHEj4KEHN0aWNrZXJQYWNrUXVlcnkYDCABKA4yJC5w",
            "cm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNfRkxBRxJAChJsaXZlTG9j",
            "YXRpb25zRmluYWwYDSABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVB",
            "VFVSRVNfRkxBRxI4CgpsYWJlbHNFZGl0GA4gASgOMiQucHJvdG8uV2ViRmVh",
            "dHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSOQoLbWVkaWFVcGxvYWQYDyABKA4y",
            "JC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNfRkxBRxJJChttZWRp",
            "YVVwbG9hZFJpY2hRdWlja1JlcGxpZXMYEiABKA4yJC5wcm90by5XZWJGZWF0",
            "dXJlcy5XRUJfRkVBVFVSRVNfRkxBRxI1Cgd2bmFtZVYyGBMgASgOMiQucHJv",
            "dG8uV2ViRmVhdHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSPgoQdmlkZW9QbGF5",
            "YmFja1VybBgUIAEoDjIkLnByb3RvLldlYkZlYXR1cmVzLldFQl9GRUFUVVJF",
            "U19GTEFHEjsKDXN0YXR1c1JhbmtpbmcYFSABKA4yJC5wcm90by5XZWJGZWF0",
            "dXJlcy5XRUJfRkVBVFVSRVNfRkxBRxJBChN2b2lwSW5kaXZpZHVhbFZpZGVv",
            "GBYgASgOMiQucHJvdG8uV2ViRmVhdHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcS",
            "QAoSdGhpcmRQYXJ0eVN0aWNrZXJzGBcgASgOMiQucHJvdG8uV2ViRmVhdHVy",
            "ZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSSAoaZnJlcXVlbnRseUZvcndhcmRlZFNl",
            "dHRpbmcYGCABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNf",
            "RkxBRxJEChZncm91cHNWNEpvaW5QZXJtaXNzaW9uGBkgASgOMiQucHJvdG8u",
            "V2ViRmVhdHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSPAoOcmVjZW50U3RpY2tl",
            "cnMYGiABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNfRkxB",
            "RxI1CgdjYXRhbG9nGBsgASgOMiQucHJvdG8uV2ViRmVhdHVyZXMuV0VCX0ZF",
            "QVRVUkVTX0ZMQUcSPQoPc3RhcnJlZFN0aWNrZXJzGBwgASgOMiQucHJvdG8u",
            "V2ViRmVhdHVyZXMuV0VCX0ZFQVRVUkVTX0ZMQUcSOwoNdm9pcEdyb3VwQ2Fs",
            "bBgdIAEoDjIkLnByb3RvLldlYkZlYXR1cmVzLldFQl9GRUFUVVJFU19GTEFH",
            "Ej0KD3RlbXBsYXRlTWVzc2FnZRgeIAEoDjIkLnByb3RvLldlYkZlYXR1cmVz",
            "LldFQl9GRUFUVVJFU19GTEFHEkoKHHRlbXBsYXRlTWVzc2FnZUludGVyYWN0",
            "aXZpdHkYHyABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNf",
            "RkxBRxI/ChFlcGhlbWVyYWxNZXNzYWdlcxggIAEoDjIkLnByb3RvLldlYkZl",
            "YXR1cmVzLldFQl9GRUFUVVJFU19GTEFHEkEKE2UyRU5vdGlmaWNhdGlvblN5",
            "bmMYISABKA4yJC5wcm90by5XZWJGZWF0dXJlcy5XRUJfRkVBVFVSRVNfRkxB",
            "RxI+ChByZWNlbnRTdGlja2Vyc1YyGCIgASgOMiQucHJvdG8uV2ViRmVhdHVy",
            "ZXMuV0VCX0ZFQVRVUkVTX0ZMQUciWAoRV0VCX0ZFQVRVUkVTX0ZMQUcSDwoL",
            "Tk9UX1NUQVJURUQQABIRCg1GT1JDRV9VUEdSQURFEAESDwoLREVWRUxPUE1F",
            "TlQQAhIOCgpQUk9EVUNUSU9OEAMilAEKF1RhYmxldE5vdGlmaWNhdGlvbnNJ",
            "bmZvEhEKCXRpbWVzdGFtcBgCIAEoBBITCgt1bnJlYWRDaGF0cxgDIAEoDRIa",
            "ChJub3RpZnlNZXNzYWdlQ291bnQYBCABKA0SNQoNbm90aWZ5TWVzc2FnZRgF",
            "IAMoCzIeLnByb3RvLk5vdGlmaWNhdGlvbk1lc3NhZ2VJbmZvIokBChdOb3Rp",
            "ZmljYXRpb25NZXNzYWdlSW5mbxIeCgNrZXkYASABKAsyES5wcm90by5NZXNz",
            "YWdlS2V5Eh8KB21lc3NhZ2UYAiABKAsyDi5wcm90by5NZXNzYWdlEhgKEG1l",
            "c3NhZ2VUaW1lc3RhbXAYAyABKAQSEwoLcGFydGljaXBhbnQYBCABKAkiiQEK",
            "FFdlYk5vdGlmaWNhdGlvbnNJbmZvEhEKCXRpbWVzdGFtcBgCIAEoBBITCgt1",
            "bnJlYWRDaGF0cxgDIAEoDRIaChJub3RpZnlNZXNzYWdlQ291bnQYBCABKA0S",
            "LQoObm90aWZ5TWVzc2FnZXMYBSADKAsyFS5wcm90by5XZWJNZXNzYWdlSW5m",
            "byLuCQoLUGF5bWVudEluZm8SRAoSY3VycmVuY3lEZXByZWNhdGVkGAEgASgO",
            "MigucHJvdG8uUGF5bWVudEluZm8uUEFZTUVOVF9JTkZPX0NVUlJFTkNZEhIK",
            "CmFtb3VudDEwMDAYAiABKAQSEwoLcmVjZWl2ZXJKaWQYAyABKAkSNgoGc3Rh",
            "dHVzGAQgASgOMiYucHJvdG8uUGF5bWVudEluZm8uUEFZTUVOVF9JTkZPX1NU",
            "QVRVUxIcChR0cmFuc2FjdGlvblRpbWVzdGFtcBgFIAEoBBIsChFyZXF1ZXN0",
            "TWVzc2FnZUtleRgGIAEoCzIRLnByb3RvLk1lc3NhZ2VLZXkSFwoPZXhwaXJ5",
            "VGltZXN0YW1wGAcgASgEEhUKDWZ1dHVyZXByb29mZWQYCCABKAgSEAoIY3Vy",
            "cmVuY3kYCSABKAkSPAoJdHhuU3RhdHVzGAogASgOMikucHJvdG8uUGF5bWVu",
            "dEluZm8uUEFZTUVOVF9JTkZPX1RYTlNUQVRVUyI2ChVQQVlNRU5UX0lORk9f",
            "Q1VSUkVOQ1kSFAoQVU5LTk9XTl9DVVJSRU5DWRAAEgcKA0lOUhABItkBChNQ",
            "QVlNRU5UX0lORk9fU1RBVFVTEhIKDlVOS05PV05fU1RBVFVTEAASDgoKUFJP",
            "Q0VTU0lORxABEggKBFNFTlQQAhISCg5ORUVEX1RPX0FDQ0VQVBADEgwKCENP",
            "TVBMRVRFEAQSFgoSQ09VTERfTk9UX0NPTVBMRVRFEAUSDAoIUkVGVU5ERUQQ",
            "BhILCgdFWFBJUkVEEAcSDAoIUkVKRUNURUQQCBINCglDQU5DRUxMRUQQCRIV",
            "ChFXQUlUSU5HX0ZPUl9QQVlFUhAKEgsKB1dBSVRJTkcQCyLXBAoWUEFZTUVO",
            "VF9JTkZPX1RYTlNUQVRVUxILCgdVTktOT1dOEAASEQoNUEVORElOR19TRVRV",
            "UBABEhoKFlBFTkRJTkdfUkVDRUlWRVJfU0VUVVAQAhIICgRJTklUEAMSCwoH",
            "U1VDQ0VTUxAEEg0KCUNPTVBMRVRFRBAFEgoKBkZBSUxFRBAGEg8KC0ZBSUxF",
            "RF9SSVNLEAcSFQoRRkFJTEVEX1BST0NFU1NJTkcQCBIeChpGQUlMRURfUkVD",
            "RUlWRVJfUFJPQ0VTU0lORxAJEg0KCUZBSUxFRF9EQRAKEhMKD0ZBSUxFRF9E",
            "QV9GSU5BTBALEhAKDFJFRlVOREVEX1RYThAMEhEKDVJFRlVORF9GQUlMRUQQ",
            "DRIcChhSRUZVTkRfRkFJTEVEX1BST0NFU1NJTkcQDhIUChBSRUZVTkRfRkFJ",
            "TEVEX0RBEA8SDwoLRVhQSVJFRF9UWE4QEBIRCg1BVVRIX0NBTkNFTEVEEBES",
            "IQodQVVUSF9DQU5DRUxfRkFJTEVEX1BST0NFU1NJTkcQEhIWChJBVVRIX0NB",
            "TkNFTF9GQUlMRUQQExIQCgxDT0xMRUNUX0lOSVQQFBITCg9DT0xMRUNUX1NV",
            "Q0NFU1MQFRISCg5DT0xMRUNUX0ZBSUxFRBAWEhcKE0NPTExFQ1RfRkFJTEVE",
            "X1JJU0sQFxIUChBDT0xMRUNUX1JFSkVDVEVEEBgSEwoPQ09MTEVDVF9FWFBJ",
            "UkVEEBkSFAoQQ09MTEVDVF9DQU5DRUxFRBAaEhYKEkNPTExFQ1RfQ0FOQ0VM",
            "TElORxAbIpsYCg5XZWJNZXNzYWdlSW5mbxIeCgNrZXkYASACKAsyES5wcm90",
            "by5NZXNzYWdlS2V5Eh8KB21lc3NhZ2UYAiABKAsyDi5wcm90by5NZXNzYWdl",
            "EhgKEG1lc3NhZ2VUaW1lc3RhbXAYAyABKAQSPQoGc3RhdHVzGAQgASgOMi0u",
            "cHJvdG8uV2ViTWVzc2FnZUluZm8uV0VCX01FU1NBR0VfSU5GT19TVEFUVVMS",
            "EwoLcGFydGljaXBhbnQYBSABKAkSDgoGaWdub3JlGBAgASgIEg8KB3N0YXJy",
            "ZWQYESABKAgSEQoJYnJvYWRjYXN0GBIgASgIEhAKCHB1c2hOYW1lGBMgASgJ",
            "Eh0KFW1lZGlhQ2lwaGVydGV4dFNoYTI1NhgUIAEoDBIRCgltdWx0aWNhc3QY",
            "FSABKAgSDwoHdXJsVGV4dBgWIAEoCBIRCgl1cmxOdW1iZXIYFyABKAgSSAoP",
            "bWVzc2FnZVN0dWJUeXBlGBggASgOMi8ucHJvdG8uV2ViTWVzc2FnZUluZm8u",
            "V0VCX01FU1NBR0VfSU5GT19TVFVCVFlQRRISCgpjbGVhck1lZGlhGBkgASgI",
            "Eh0KFW1lc3NhZ2VTdHViUGFyYW1ldGVycxgaIAMoCRIQCghkdXJhdGlvbhgb",
            "IAEoDRIOCgZsYWJlbHMYHCADKAkSJwoLcGF5bWVudEluZm8YHSABKAsyEi5w",
            "cm90by5QYXltZW50SW5mbxI1ChFmaW5hbExpdmVMb2NhdGlvbhgeIAEoCzIa",
            "LnByb3RvLkxpdmVMb2NhdGlvbk1lc3NhZ2USLQoRcXVvdGVkUGF5bWVudElu",
            "Zm8YHyABKAsyEi5wcm90by5QYXltZW50SW5mbxIfChdlcGhlbWVyYWxTdGFy",
            "dFRpbWVzdGFtcBggIAEoBBIZChFlcGhlbWVyYWxEdXJhdGlvbhghIAEoDSJp",
            "ChdXRUJfTUVTU0FHRV9JTkZPX1NUQVRVUxIJCgVFUlJPUhAAEgsKB1BFTkRJ",
            "TkcQARIOCgpTRVJWRVJfQUNLEAISEAoMREVMSVZFUllfQUNLEAMSCAoEUkVB",
            "RBAEEgoKBlBMQVlFRBAFIugRChlXRUJfTUVTU0FHRV9JTkZPX1NUVUJUWVBF",
            "EgsKB1VOS05PV04QABIKCgZSRVZPS0UQARIOCgpDSVBIRVJURVhUEAISDwoL",
            "RlVUVVJFUFJPT0YQAxIbChdOT05fVkVSSUZJRURfVFJBTlNJVElPThAEEhkK",
            "FVVOVkVSSUZJRURfVFJBTlNJVElPThAFEhcKE1ZFUklGSUVEX1RSQU5TSVRJ",
            "T04QBhIYChRWRVJJRklFRF9MT1dfVU5LTk9XThAHEhEKDVZFUklGSUVEX0hJ",
            "R0gQCBIcChhWRVJJRklFRF9JTklUSUFMX1VOS05PV04QCRIYChRWRVJJRklF",
            "RF9JTklUSUFMX0xPVxAKEhkKFVZFUklGSUVEX0lOSVRJQUxfSElHSBALEiMK",
            "H1ZFUklGSUVEX1RSQU5TSVRJT05fQU5ZX1RPX05PTkUQDBIjCh9WRVJJRklF",
            "RF9UUkFOU0lUSU9OX0FOWV9UT19ISUdIEA0SIwofVkVSSUZJRURfVFJBTlNJ",
            "VElPTl9ISUdIX1RPX0xPVxAOEicKI1ZFUklGSUVEX1RSQU5TSVRJT05fSElH",
            "SF9UT19VTktOT1dOEA8SJgoiVkVSSUZJRURfVFJBTlNJVElPTl9VTktOT1dO",
            "X1RPX0xPVxAQEiYKIlZFUklGSUVEX1RSQU5TSVRJT05fTE9XX1RPX1VOS05P",
            "V04QERIjCh9WRVJJRklFRF9UUkFOU0lUSU9OX05PTkVfVE9fTE9XEBISJwoj",
            "VkVSSUZJRURfVFJBTlNJVElPTl9OT05FX1RPX1VOS05PV04QExIQCgxHUk9V",
            "UF9DUkVBVEUQFBIYChRHUk9VUF9DSEFOR0VfU1VCSkVDVBAVEhUKEUdST1VQ",
            "X0NIQU5HRV9JQ09OEBYSHAoYR1JPVVBfQ0hBTkdFX0lOVklURV9MSU5LEBcS",
            "HAoYR1JPVVBfQ0hBTkdFX0RFU0NSSVBUSU9OEBgSGQoVR1JPVVBfQ0hBTkdF",
            "X1JFU1RSSUNUEBkSGQoVR1JPVVBfQ0hBTkdFX0FOTk9VTkNFEBoSGQoVR1JP",
            "VVBfUEFSVElDSVBBTlRfQUREEBsSHAoYR1JPVVBfUEFSVElDSVBBTlRfUkVN",
            "T1ZFEBwSHQoZR1JPVVBfUEFSVElDSVBBTlRfUFJPTU9URRAdEhwKGEdST1VQ",
            "X1BBUlRJQ0lQQU5UX0RFTU9URRAeEhwKGEdST1VQX1BBUlRJQ0lQQU5UX0lO",
            "VklURRAfEhsKF0dST1VQX1BBUlRJQ0lQQU5UX0xFQVZFECASIwofR1JPVVBf",
            "UEFSVElDSVBBTlRfQ0hBTkdFX05VTUJFUhAhEhQKEEJST0FEQ0FTVF9DUkVB",
            "VEUQIhIRCg1CUk9BRENBU1RfQUREECMSFAoQQlJPQURDQVNUX1JFTU9WRRAk",
            "EhgKFEdFTkVSSUNfTk9USUZJQ0FUSU9OECUSGAoURTJFX0lERU5USVRZX0NI",
            "QU5HRUQQJhIRCg1FMkVfRU5DUllQVEVEECcSFQoRQ0FMTF9NSVNTRURfVk9J",
            "Q0UQKBIVChFDQUxMX01JU1NFRF9WSURFTxApEhwKGElORElWSURVQUxfQ0hB",
            "TkdFX05VTUJFUhAqEhAKDEdST1VQX0RFTEVURRArEiYKIkdST1VQX0FOTk9V",
            "TkNFX01PREVfTUVTU0FHRV9CT1VOQ0UQLBIbChdDQUxMX01JU1NFRF9HUk9V",
            "UF9WT0lDRRAtEhsKF0NBTExfTUlTU0VEX0dST1VQX1ZJREVPEC4SFgoSUEFZ",
            "TUVOVF9DSVBIRVJURVhUEC8SFwoTUEFZTUVOVF9GVVRVUkVQUk9PRhAwEiwK",
            "KFBBWU1FTlRfVFJBTlNBQ1RJT05fU1RBVFVTX1VQREFURV9GQUlMRUQQMRIu",
            "CipQQVlNRU5UX1RSQU5TQUNUSU9OX1NUQVRVU19VUERBVEVfUkVGVU5ERUQQ",
            "MhIzCi9QQVlNRU5UX1RSQU5TQUNUSU9OX1NUQVRVU19VUERBVEVfUkVGVU5E",
            "X0ZBSUxFRBAzEjUKMVBBWU1FTlRfVFJBTlNBQ1RJT05fU1RBVFVTX1JFQ0VJ",
            "VkVSX1BFTkRJTkdfU0VUVVAQNBI8CjhQQVlNRU5UX1RSQU5TQUNUSU9OX1NU",
            "QVRVU19SRUNFSVZFUl9TVUNDRVNTX0FGVEVSX0hJQ0NVUBA1EikKJVBBWU1F",
            "TlRfQUNUSU9OX0FDQ09VTlRfU0VUVVBfUkVNSU5ERVIQNhIoCiRQQVlNRU5U",
            "X0FDVElPTl9TRU5EX1BBWU1FTlRfUkVNSU5ERVIQNxIqCiZQQVlNRU5UX0FD",
            "VElPTl9TRU5EX1BBWU1FTlRfSU5WSVRBVElPThA4EiMKH1BBWU1FTlRfQUNU",
            "SU9OX1JFUVVFU1RfREVDTElORUQQORIiCh5QQVlNRU5UX0FDVElPTl9SRVFV",
            "RVNUX0VYUElSRUQQOhIkCiBQQVlNRU5UX0FDVElPTl9SRVFVRVNUX0NBTkNF",
            "TExFRBA7EikKJUJJWl9WRVJJRklFRF9UUkFOU0lUSU9OX1RPUF9UT19CT1RU",
            "T00QPBIpCiVCSVpfVkVSSUZJRURfVFJBTlNJVElPTl9CT1RUT01fVE9fVE9Q",
            "ED0SEQoNQklaX0lOVFJPX1RPUBA+EhQKEEJJWl9JTlRST19CT1RUT00QPxIT",
            "Cg9CSVpfTkFNRV9DSEFOR0UQQBIcChhCSVpfTU9WRV9UT19DT05TVU1FUl9B",
            "UFAQQRIeChpCSVpfVFdPX1RJRVJfTUlHUkFUSU9OX1RPUBBCEiEKHUJJWl9U",
            "V09fVElFUl9NSUdSQVRJT05fQk9UVE9NEEMSDQoJT1ZFUlNJWkVEEEQSKAok",
            "R1JPVVBfQ0hBTkdFX05PX0ZSRVFVRU5UTFlfRk9SV0FSREVEEEUSHAoYR1JP",
            "VVBfVjRfQUREX0lOVklURV9TRU5UEEYSJgoiR1JPVVBfUEFSVElDSVBBTlRf",
            "QUREX1JFUVVFU1RfSk9JThBHEhwKGENIQU5HRV9FUEhFTUVSQUxfU0VUVElO",
            "RxBI"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HydratedQuickReplyButton), global::waxnet.Internal.Proto.HydratedQuickReplyButton.Parser, new[]{ "DisplayText", "ChatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HydratedURLButton), global::waxnet.Internal.Proto.HydratedURLButton.Parser, new[]{ "DisplayText", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HydratedCallButton), global::waxnet.Internal.Proto.HydratedCallButton.Parser, new[]{ "DisplayText", "PhoneNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HydratedTemplateButton), global::waxnet.Internal.Proto.HydratedTemplateButton.Parser, new[]{ "Index", "QuickReplyButton", "UrlButton", "CallButton" }, new[]{ "HydratedButton" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.QuickReplyButton), global::waxnet.Internal.Proto.QuickReplyButton.Parser, new[]{ "DisplayText", "ChatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.URLButton), global::waxnet.Internal.Proto.URLButton.Parser, new[]{ "DisplayText", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.CallButton), global::waxnet.Internal.Proto.CallButton.Parser, new[]{ "DisplayText", "PhoneNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.TemplateButton), global::waxnet.Internal.Proto.TemplateButton.Parser, new[]{ "Index", "QuickReplyButton", "UrlButton", "CallButton" }, new[]{ "Button" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.Location), global::waxnet.Internal.Proto.Location.Parser, new[]{ "DegreesLatitude", "DegreesLongitude", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.Point), global::waxnet.Internal.Proto.Point.Parser, new[]{ "XDeprecated", "YDeprecated", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.InteractiveAnnotation), global::waxnet.Internal.Proto.InteractiveAnnotation.Parser, new[]{ "PolygonVertices", "Location" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.AdReplyInfo), global::waxnet.Internal.Proto.AdReplyInfo.Parser, new[]{ "AdvertiserName", "MediaType", "JpegThumbnail", "Caption" }, null, new[]{ typeof(global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ContextInfo), global::waxnet.Internal.Proto.ContextInfo.Parser, new[]{ "StanzaId", "Participant", "QuotedMessage", "RemoteJid", "MentionedJid", "ConversionSource", "ConversionData", "ConversionDelaySeconds", "ForwardingScore", "IsForwarded", "QuotedAd", "PlaceholderKey", "Expiration", "EphemeralSettingTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.SenderKeyDistributionMessage), global::waxnet.Internal.Proto.SenderKeyDistributionMessage.Parser, new[]{ "GroupId", "AxolotlSenderKeyDistributionMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ImageMessage), global::waxnet.Internal.Proto.ImageMessage.Parser, new[]{ "Url", "Mimetype", "Caption", "FileSha256", "FileLength", "Height", "Width", "MediaKey", "FileEncSha256", "InteractiveAnnotations", "DirectPath", "MediaKeyTimestamp", "JpegThumbnail", "ContextInfo", "FirstScanSidecar", "FirstScanLength", "ExperimentGroupId", "ScansSidecar", "ScanLengths", "MidQualityFileSha256", "MidQualityFileEncSha256" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ContactMessage), global::waxnet.Internal.Proto.ContactMessage.Parser, new[]{ "DisplayName", "Vcard", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.LocationMessage), global::waxnet.Internal.Proto.LocationMessage.Parser, new[]{ "DegreesLatitude", "DegreesLongitude", "Name", "Address", "Url", "IsLive", "AccuracyInMeters", "SpeedInMps", "DegreesClockwiseFromMagneticNorth", "Comment", "JpegThumbnail", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ExtendedTextMessage), global::waxnet.Internal.Proto.ExtendedTextMessage.Parser, new[]{ "Text", "MatchedText", "CanonicalUrl", "Description", "Title", "TextArgb", "BackgroundArgb", "Font", "PreviewType", "JpegThumbnail", "ContextInfo", "DoNotPlayInline" }, null, new[]{ typeof(global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE), typeof(global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.DocumentMessage), global::waxnet.Internal.Proto.DocumentMessage.Parser, new[]{ "Url", "Mimetype", "Title", "FileSha256", "FileLength", "PageCount", "MediaKey", "FileName", "FileEncSha256", "DirectPath", "MediaKeyTimestamp", "JpegThumbnail", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.AudioMessage), global::waxnet.Internal.Proto.AudioMessage.Parser, new[]{ "Url", "Mimetype", "FileSha256", "FileLength", "Seconds", "Ptt", "MediaKey", "FileEncSha256", "DirectPath", "MediaKeyTimestamp", "ContextInfo", "StreamingSidecar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.VideoMessage), global::waxnet.Internal.Proto.VideoMessage.Parser, new[]{ "Url", "Mimetype", "FileSha256", "FileLength", "Seconds", "MediaKey", "Caption", "GifPlayback", "Height", "Width", "FileEncSha256", "InteractiveAnnotations", "DirectPath", "MediaKeyTimestamp", "JpegThumbnail", "ContextInfo", "StreamingSidecar", "GifAttribution" }, null, new[]{ typeof(global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.Call), global::waxnet.Internal.Proto.Call.Parser, new[]{ "CallKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.Chat), global::waxnet.Internal.Proto.Chat.Parser, new[]{ "DisplayName", "ChatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ProtocolMessage), global::waxnet.Internal.Proto.ProtocolMessage.Parser, new[]{ "Key", "Type", "EphemeralExpiration", "EphemeralSettingTimestamp", "HistorySyncNotification" }, null, new[]{ typeof(global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HistorySyncNotification), global::waxnet.Internal.Proto.HistorySyncNotification.Parser, new[]{ "FileSha256", "FileLength", "MediaKey", "FileEncSha256", "DirectPath", "SyncType", "ChunkOrder" }, null, new[]{ typeof(global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ContactsArrayMessage), global::waxnet.Internal.Proto.ContactsArrayMessage.Parser, new[]{ "DisplayName", "Contacts", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HSMCurrency), global::waxnet.Internal.Proto.HSMCurrency.Parser, new[]{ "CurrencyCode", "Amount1000" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HSMDateTimeComponent), global::waxnet.Internal.Proto.HSMDateTimeComponent.Parser, new[]{ "DayOfWeek", "Year", "Month", "DayOfMonth", "Hour", "Minute", "Calendar" }, null, new[]{ typeof(global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE), typeof(global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch), global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch.Parser, new[]{ "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HSMDateTime), global::waxnet.Internal.Proto.HSMDateTime.Parser, new[]{ "Component", "UnixEpoch" }, new[]{ "DatetimeOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HSMLocalizableParameter), global::waxnet.Internal.Proto.HSMLocalizableParameter.Parser, new[]{ "Default", "Currency", "DateTime" }, new[]{ "ParamOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HighlyStructuredMessage), global::waxnet.Internal.Proto.HighlyStructuredMessage.Parser, new[]{ "Namespace", "ElementName", "Params", "FallbackLg", "FallbackLc", "LocalizableParams", "DeterministicLg", "DeterministicLc", "HydratedHsm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.SendPaymentMessage), global::waxnet.Internal.Proto.SendPaymentMessage.Parser, new[]{ "NoteMessage", "RequestMessageKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.RequestPaymentMessage), global::waxnet.Internal.Proto.RequestPaymentMessage.Parser, new[]{ "NoteMessage", "CurrencyCodeIso4217", "Amount1000", "RequestFrom", "ExpiryTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.DeclinePaymentRequestMessage), global::waxnet.Internal.Proto.DeclinePaymentRequestMessage.Parser, new[]{ "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.CancelPaymentRequestMessage), global::waxnet.Internal.Proto.CancelPaymentRequestMessage.Parser, new[]{ "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.LiveLocationMessage), global::waxnet.Internal.Proto.LiveLocationMessage.Parser, new[]{ "DegreesLatitude", "DegreesLongitude", "AccuracyInMeters", "SpeedInMps", "DegreesClockwiseFromMagneticNorth", "Caption", "SequenceNumber", "TimeOffset", "JpegThumbnail", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.StickerMessage), global::waxnet.Internal.Proto.StickerMessage.Parser, new[]{ "Url", "FileSha256", "FileEncSha256", "MediaKey", "Mimetype", "Height", "Width", "DirectPath", "FileLength", "MediaKeyTimestamp", "FirstFrameLength", "FirstFrameSidecar", "IsAnimated", "PngThumbnail", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.FourRowTemplate), global::waxnet.Internal.Proto.FourRowTemplate.Parser, new[]{ "Content", "Footer", "Buttons", "DocumentMessage", "HighlyStructuredMessage", "ImageMessage", "VideoMessage", "LocationMessage" }, new[]{ "Title" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.HydratedFourRowTemplate), global::waxnet.Internal.Proto.HydratedFourRowTemplate.Parser, new[]{ "HydratedContentText", "HydratedFooterText", "HydratedButtons", "TemplateId", "DocumentMessage", "HydratedTitleText", "ImageMessage", "VideoMessage", "LocationMessage" }, new[]{ "Title" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.TemplateMessage), global::waxnet.Internal.Proto.TemplateMessage.Parser, new[]{ "ContextInfo", "HydratedTemplate", "FourRowTemplate", "HydratedFourRowTemplate" }, new[]{ "Format" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.TemplateButtonReplyMessage), global::waxnet.Internal.Proto.TemplateButtonReplyMessage.Parser, new[]{ "SelectedId", "SelectedDisplayText", "ContextInfo", "SelectedIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.CatalogSnapshot), global::waxnet.Internal.Proto.CatalogSnapshot.Parser, new[]{ "CatalogImage", "Title", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ProductSnapshot), global::waxnet.Internal.Proto.ProductSnapshot.Parser, new[]{ "ProductImage", "ProductId", "Title", "Description", "CurrencyCode", "PriceAmount1000", "RetailerId", "Url", "ProductImageCount", "FirstImageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.ProductMessage), global::waxnet.Internal.Proto.ProductMessage.Parser, new[]{ "Product", "BusinessOwnerJid", "Catalog", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.GroupInviteMessage), global::waxnet.Internal.Proto.GroupInviteMessage.Parser, new[]{ "GroupJid", "InviteCode", "InviteExpiration", "GroupName", "JpegThumbnail", "Caption", "ContextInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.DeviceSentMessage), global::waxnet.Internal.Proto.DeviceSentMessage.Parser, new[]{ "DestinationJid", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.DeviceSyncMessage), global::waxnet.Internal.Proto.DeviceSyncMessage.Parser, new[]{ "SerializedXmlBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.Message), global::waxnet.Internal.Proto.Message.Parser, new[]{ "Conversation", "SenderKeyDistributionMessage", "ImageMessage", "ContactMessage", "LocationMessage", "ExtendedTextMessage", "DocumentMessage", "AudioMessage", "VideoMessage", "Call", "Chat", "ProtocolMessage", "ContactsArrayMessage", "HighlyStructuredMessage", "FastRatchetKeySenderKeyDistributionMessage", "SendPaymentMessage", "LiveLocationMessage", "RequestPaymentMessage", "DeclinePaymentRequestMessage", "CancelPaymentRequestMessage", "TemplateMessage", "StickerMessage", "GroupInviteMessage", "TemplateButtonReplyMessage", "ProductMessage", "DeviceSentMessage", "DeviceSyncMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.MessageKey), global::waxnet.Internal.Proto.MessageKey.Parser, new[]{ "RemoteJid", "FromMe", "ChatId", "Participant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.WebFeatures), global::waxnet.Internal.Proto.WebFeatures.Parser, new[]{ "LabelsDisplay", "VoipIndividualOutgoing", "GroupsV3", "GroupsV3Create", "ChangeNumberV2", "QueryStatusV3Thumbnail", "LiveLocations", "QueryVname", "VoipIndividualIncoming", "QuickRepliesQuery", "Payments", "StickerPackQuery", "LiveLocationsFinal", "LabelsEdit", "MediaUpload", "MediaUploadRichQuickReplies", "VnameV2", "VideoPlaybackUrl", "StatusRanking", "VoipIndividualVideo", "ThirdPartyStickers", "FrequentlyForwardedSetting", "GroupsV4JoinPermission", "RecentStickers", "Catalog", "StarredStickers", "VoipGroupCall", "TemplateMessage", "TemplateMessageInteractivity", "EphemeralMessages", "E2ENotificationSync", "RecentStickersV2" }, null, new[]{ typeof(global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.TabletNotificationsInfo), global::waxnet.Internal.Proto.TabletNotificationsInfo.Parser, new[]{ "Timestamp", "UnreadChats", "NotifyMessageCount", "NotifyMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.NotificationMessageInfo), global::waxnet.Internal.Proto.NotificationMessageInfo.Parser, new[]{ "Key", "Message", "MessageTimestamp", "Participant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.WebNotificationsInfo), global::waxnet.Internal.Proto.WebNotificationsInfo.Parser, new[]{ "Timestamp", "UnreadChats", "NotifyMessageCount", "NotifyMessages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.PaymentInfo), global::waxnet.Internal.Proto.PaymentInfo.Parser, new[]{ "CurrencyDeprecated", "Amount1000", "ReceiverJid", "Status", "TransactionTimestamp", "RequestMessageKey", "ExpiryTimestamp", "Futureproofed", "Currency", "TxnStatus" }, null, new[]{ typeof(global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY), typeof(global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS), typeof(global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::waxnet.Internal.Proto.WebMessageInfo), global::waxnet.Internal.Proto.WebMessageInfo.Parser, new[]{ "Key", "Message", "MessageTimestamp", "Status", "Participant", "Ignore", "Starred", "Broadcast", "PushName", "MediaCiphertextSha256", "Multicast", "UrlText", "UrlNumber", "MessageStubType", "ClearMedia", "MessageStubParameters", "Duration", "Labels", "PaymentInfo", "FinalLiveLocation", "QuotedPaymentInfo", "EphemeralStartTimestamp", "EphemeralDuration" }, null, new[]{ typeof(global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS), typeof(global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE) }, null, null)
          }));
    }
    #endregion

  }
    #region Messages
    internal sealed partial class HydratedQuickReplyButton : pb::IMessage<HydratedQuickReplyButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HydratedQuickReplyButton> _parser = new pb::MessageParser<HydratedQuickReplyButton>(() => new HydratedQuickReplyButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HydratedQuickReplyButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedQuickReplyButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedQuickReplyButton(HydratedQuickReplyButton other) : this() {
      displayText_ = other.displayText_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedQuickReplyButton Clone() {
      return new HydratedQuickReplyButton(this);
    }

    /// <summary>Field number for the "displayText" field.</summary>
    public const int DisplayTextFieldNumber = 1;
    private readonly static string DisplayTextDefaultValue = "";

    private string displayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayText {
      get { return displayText_ ?? DisplayTextDefaultValue; }
      set {
        displayText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayText {
      get { return displayText_ != null; }
    }
    /// <summary>Clears the value of the "displayText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayText() {
      displayText_ = null;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HydratedQuickReplyButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HydratedQuickReplyButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayText != other.DisplayText) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayText) hash ^= DisplayText.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayText) {
        output.WriteRawTag(10);
        output.WriteString(DisplayText);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayText) {
        output.WriteRawTag(10);
        output.WriteString(DisplayText);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayText);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HydratedQuickReplyButton other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayText) {
        DisplayText = other.DisplayText;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayText = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayText = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

    internal sealed partial class HydratedURLButton : pb::IMessage<HydratedURLButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HydratedURLButton> _parser = new pb::MessageParser<HydratedURLButton>(() => new HydratedURLButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HydratedURLButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedURLButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedURLButton(HydratedURLButton other) : this() {
      displayText_ = other.displayText_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedURLButton Clone() {
      return new HydratedURLButton(this);
    }

    /// <summary>Field number for the "displayText" field.</summary>
    public const int DisplayTextFieldNumber = 1;
    private readonly static string DisplayTextDefaultValue = "";

    private string displayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayText {
      get { return displayText_ ?? DisplayTextDefaultValue; }
      set {
        displayText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayText {
      get { return displayText_ != null; }
    }
    /// <summary>Clears the value of the "displayText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayText() {
      displayText_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HydratedURLButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HydratedURLButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayText != other.DisplayText) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayText) hash ^= DisplayText.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayText) {
        output.WriteRawTag(10);
        output.WriteString(DisplayText);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayText) {
        output.WriteRawTag(10);
        output.WriteString(DisplayText);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayText);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HydratedURLButton other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayText) {
        DisplayText = other.DisplayText;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayText = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayText = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

    internal sealed partial class HydratedCallButton : pb::IMessage<HydratedCallButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HydratedCallButton> _parser = new pb::MessageParser<HydratedCallButton>(() => new HydratedCallButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HydratedCallButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedCallButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedCallButton(HydratedCallButton other) : this() {
      displayText_ = other.displayText_;
      phoneNumber_ = other.phoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedCallButton Clone() {
      return new HydratedCallButton(this);
    }

    /// <summary>Field number for the "displayText" field.</summary>
    public const int DisplayTextFieldNumber = 1;
    private readonly static string DisplayTextDefaultValue = "";

    private string displayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayText {
      get { return displayText_ ?? DisplayTextDefaultValue; }
      set {
        displayText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayText {
      get { return displayText_ != null; }
    }
    /// <summary>Clears the value of the "displayText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayText() {
      displayText_ = null;
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 2;
    private readonly static string PhoneNumberDefaultValue = "";

    private string phoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_ ?? PhoneNumberDefaultValue; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phoneNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhoneNumber {
      get { return phoneNumber_ != null; }
    }
    /// <summary>Clears the value of the "phoneNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhoneNumber() {
      phoneNumber_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HydratedCallButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HydratedCallButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayText != other.DisplayText) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayText) hash ^= DisplayText.GetHashCode();
      if (HasPhoneNumber) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayText) {
        output.WriteRawTag(10);
        output.WriteString(DisplayText);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(18);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayText) {
        output.WriteRawTag(10);
        output.WriteString(DisplayText);
      }
      if (HasPhoneNumber) {
        output.WriteRawTag(18);
        output.WriteString(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayText);
      }
      if (HasPhoneNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HydratedCallButton other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayText) {
        DisplayText = other.DisplayText;
      }
      if (other.HasPhoneNumber) {
        PhoneNumber = other.PhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayText = input.ReadString();
            break;
          }
          case 18: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayText = input.ReadString();
            break;
          }
          case 18: {
            PhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

    internal sealed partial class HydratedTemplateButton : pb::IMessage<HydratedTemplateButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HydratedTemplateButton> _parser = new pb::MessageParser<HydratedTemplateButton>(() => new HydratedTemplateButton());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HydratedTemplateButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedTemplateButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedTemplateButton(HydratedTemplateButton other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      switch (other.HydratedButtonCase) {
        case HydratedButtonOneofCase.QuickReplyButton:
          QuickReplyButton = other.QuickReplyButton.Clone();
          break;
        case HydratedButtonOneofCase.UrlButton:
          UrlButton = other.UrlButton.Clone();
          break;
        case HydratedButtonOneofCase.CallButton:
          CallButton = other.CallButton.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedTemplateButton Clone() {
      return new HydratedTemplateButton(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private readonly static uint IndexDefaultValue = 0;

    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quickReplyButton" field.</summary>
    public const int QuickReplyButtonFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HydratedQuickReplyButton QuickReplyButton {
      get { return hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton ? (global::waxnet.Internal.Proto.HydratedQuickReplyButton) hydratedButton_ : null; }
      set {
        hydratedButton_ = value;
        hydratedButtonCase_ = value == null ? HydratedButtonOneofCase.None : HydratedButtonOneofCase.QuickReplyButton;
      }
    }

    /// <summary>Field number for the "urlButton" field.</summary>
    public const int UrlButtonFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HydratedURLButton UrlButton {
      get { return hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton ? (global::waxnet.Internal.Proto.HydratedURLButton) hydratedButton_ : null; }
      set {
        hydratedButton_ = value;
        hydratedButtonCase_ = value == null ? HydratedButtonOneofCase.None : HydratedButtonOneofCase.UrlButton;
      }
    }

    /// <summary>Field number for the "callButton" field.</summary>
    public const int CallButtonFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HydratedCallButton CallButton {
      get { return hydratedButtonCase_ == HydratedButtonOneofCase.CallButton ? (global::waxnet.Internal.Proto.HydratedCallButton) hydratedButton_ : null; }
      set {
        hydratedButton_ = value;
        hydratedButtonCase_ = value == null ? HydratedButtonOneofCase.None : HydratedButtonOneofCase.CallButton;
      }
    }

    private object hydratedButton_;
    /// <summary>Enum of possible cases for the "hydratedButton" oneof.</summary>
    public enum HydratedButtonOneofCase {
      None = 0,
      QuickReplyButton = 1,
      UrlButton = 2,
      CallButton = 3,
    }
    private HydratedButtonOneofCase hydratedButtonCase_ = HydratedButtonOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedButtonOneofCase HydratedButtonCase {
      get { return hydratedButtonCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHydratedButton() {
      hydratedButtonCase_ = HydratedButtonOneofCase.None;
      hydratedButton_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HydratedTemplateButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HydratedTemplateButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (!object.Equals(QuickReplyButton, other.QuickReplyButton)) return false;
      if (!object.Equals(UrlButton, other.UrlButton)) return false;
      if (!object.Equals(CallButton, other.CallButton)) return false;
      if (HydratedButtonCase != other.HydratedButtonCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton) hash ^= QuickReplyButton.GetHashCode();
      if (hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton) hash ^= UrlButton.GetHashCode();
      if (hydratedButtonCase_ == HydratedButtonOneofCase.CallButton) hash ^= CallButton.GetHashCode();
      hash ^= (int) hydratedButtonCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton) {
        output.WriteRawTag(10);
        output.WriteMessage(QuickReplyButton);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton) {
        output.WriteRawTag(18);
        output.WriteMessage(UrlButton);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.CallButton) {
        output.WriteRawTag(26);
        output.WriteMessage(CallButton);
      }
      if (HasIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton) {
        output.WriteRawTag(10);
        output.WriteMessage(QuickReplyButton);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton) {
        output.WriteRawTag(18);
        output.WriteMessage(UrlButton);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.CallButton) {
        output.WriteRawTag(26);
        output.WriteMessage(CallButton);
      }
      if (HasIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuickReplyButton);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UrlButton);
      }
      if (hydratedButtonCase_ == HydratedButtonOneofCase.CallButton) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallButton);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HydratedTemplateButton other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      switch (other.HydratedButtonCase) {
        case HydratedButtonOneofCase.QuickReplyButton:
          if (QuickReplyButton == null) {
            QuickReplyButton = new global::waxnet.Internal.Proto.HydratedQuickReplyButton();
          }
          QuickReplyButton.MergeFrom(other.QuickReplyButton);
          break;
        case HydratedButtonOneofCase.UrlButton:
          if (UrlButton == null) {
            UrlButton = new global::waxnet.Internal.Proto.HydratedURLButton();
          }
          UrlButton.MergeFrom(other.UrlButton);
          break;
        case HydratedButtonOneofCase.CallButton:
          if (CallButton == null) {
            CallButton = new global::waxnet.Internal.Proto.HydratedCallButton();
          }
          CallButton.MergeFrom(other.CallButton);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.HydratedQuickReplyButton subBuilder = new global::waxnet.Internal.Proto.HydratedQuickReplyButton();
            if (hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton) {
              subBuilder.MergeFrom(QuickReplyButton);
            }
            input.ReadMessage(subBuilder);
            QuickReplyButton = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HydratedURLButton subBuilder = new global::waxnet.Internal.Proto.HydratedURLButton();
            if (hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton) {
              subBuilder.MergeFrom(UrlButton);
            }
            input.ReadMessage(subBuilder);
            UrlButton = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.HydratedCallButton subBuilder = new global::waxnet.Internal.Proto.HydratedCallButton();
            if (hydratedButtonCase_ == HydratedButtonOneofCase.CallButton) {
              subBuilder.MergeFrom(CallButton);
            }
            input.ReadMessage(subBuilder);
            CallButton = subBuilder;
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.HydratedQuickReplyButton subBuilder = new global::waxnet.Internal.Proto.HydratedQuickReplyButton();
            if (hydratedButtonCase_ == HydratedButtonOneofCase.QuickReplyButton) {
              subBuilder.MergeFrom(QuickReplyButton);
            }
            input.ReadMessage(subBuilder);
            QuickReplyButton = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HydratedURLButton subBuilder = new global::waxnet.Internal.Proto.HydratedURLButton();
            if (hydratedButtonCase_ == HydratedButtonOneofCase.UrlButton) {
              subBuilder.MergeFrom(UrlButton);
            }
            input.ReadMessage(subBuilder);
            UrlButton = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.HydratedCallButton subBuilder = new global::waxnet.Internal.Proto.HydratedCallButton();
            if (hydratedButtonCase_ == HydratedButtonOneofCase.CallButton) {
              subBuilder.MergeFrom(CallButton);
            }
            input.ReadMessage(subBuilder);
            CallButton = subBuilder;
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class QuickReplyButton : pb::IMessage<QuickReplyButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuickReplyButton> _parser = new pb::MessageParser<QuickReplyButton>(() => new QuickReplyButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuickReplyButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickReplyButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickReplyButton(QuickReplyButton other) : this() {
      displayText_ = other.displayText_ != null ? other.displayText_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuickReplyButton Clone() {
      return new QuickReplyButton(this);
    }

    /// <summary>Field number for the "displayText" field.</summary>
    public const int DisplayTextFieldNumber = 1;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage displayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage DisplayText {
      get { return displayText_; }
      set {
        displayText_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuickReplyButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuickReplyButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DisplayText, other.DisplayText)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (displayText_ != null) hash ^= DisplayText.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (displayText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DisplayText);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (displayText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DisplayText);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (displayText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayText);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuickReplyButton other) {
      if (other == null) {
        return;
      }
      if (other.displayText_ != null) {
        if (displayText_ == null) {
          DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        DisplayText.MergeFrom(other.DisplayText);
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (displayText_ == null) {
              DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(DisplayText);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (displayText_ == null) {
              DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(DisplayText);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class URLButton : pb::IMessage<URLButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<URLButton> _parser = new pb::MessageParser<URLButton>(() => new URLButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<URLButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public URLButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public URLButton(URLButton other) : this() {
      displayText_ = other.displayText_ != null ? other.displayText_.Clone() : null;
      url_ = other.url_ != null ? other.url_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public URLButton Clone() {
      return new URLButton(this);
    }

    /// <summary>Field number for the "displayText" field.</summary>
    public const int DisplayTextFieldNumber = 1;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage displayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage DisplayText {
      get { return displayText_; }
      set {
        displayText_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage Url {
      get { return url_; }
      set {
        url_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as URLButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(URLButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DisplayText, other.DisplayText)) return false;
      if (!object.Equals(Url, other.Url)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (displayText_ != null) hash ^= DisplayText.GetHashCode();
      if (url_ != null) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (displayText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DisplayText);
      }
      if (url_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (displayText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DisplayText);
      }
      if (url_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (displayText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayText);
      }
      if (url_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(URLButton other) {
      if (other == null) {
        return;
      }
      if (other.displayText_ != null) {
        if (displayText_ == null) {
          DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        DisplayText.MergeFrom(other.DisplayText);
      }
      if (other.url_ != null) {
        if (url_ == null) {
          Url = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        Url.MergeFrom(other.Url);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (displayText_ == null) {
              DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(DisplayText);
            break;
          }
          case 18: {
            if (url_ == null) {
              Url = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(Url);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (displayText_ == null) {
              DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(DisplayText);
            break;
          }
          case 18: {
            if (url_ == null) {
              Url = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(Url);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class CallButton : pb::IMessage<CallButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallButton> _parser = new pb::MessageParser<CallButton>(() => new CallButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallButton(CallButton other) : this() {
      displayText_ = other.displayText_ != null ? other.displayText_.Clone() : null;
      phoneNumber_ = other.phoneNumber_ != null ? other.phoneNumber_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallButton Clone() {
      return new CallButton(this);
    }

    /// <summary>Field number for the "displayText" field.</summary>
    public const int DisplayTextFieldNumber = 1;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage displayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage DisplayText {
      get { return displayText_; }
      set {
        displayText_ = value;
      }
    }

    /// <summary>Field number for the "phoneNumber" field.</summary>
    public const int PhoneNumberFieldNumber = 2;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage phoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DisplayText, other.DisplayText)) return false;
      if (!object.Equals(PhoneNumber, other.PhoneNumber)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (displayText_ != null) hash ^= DisplayText.GetHashCode();
      if (phoneNumber_ != null) hash ^= PhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (displayText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DisplayText);
      }
      if (phoneNumber_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (displayText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DisplayText);
      }
      if (phoneNumber_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (displayText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayText);
      }
      if (phoneNumber_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallButton other) {
      if (other == null) {
        return;
      }
      if (other.displayText_ != null) {
        if (displayText_ == null) {
          DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        DisplayText.MergeFrom(other.DisplayText);
      }
      if (other.phoneNumber_ != null) {
        if (phoneNumber_ == null) {
          PhoneNumber = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        PhoneNumber.MergeFrom(other.PhoneNumber);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (displayText_ == null) {
              DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(DisplayText);
            break;
          }
          case 18: {
            if (phoneNumber_ == null) {
              PhoneNumber = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(PhoneNumber);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (displayText_ == null) {
              DisplayText = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(DisplayText);
            break;
          }
          case 18: {
            if (phoneNumber_ == null) {
              PhoneNumber = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(PhoneNumber);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TemplateButton : pb::IMessage<TemplateButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TemplateButton> _parser = new pb::MessageParser<TemplateButton>(() => new TemplateButton());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateButton(TemplateButton other) : this() {
      _hasBits0 = other._hasBits0;
      index_ = other.index_;
      switch (other.ButtonCase) {
        case ButtonOneofCase.QuickReplyButton:
          QuickReplyButton = other.QuickReplyButton.Clone();
          break;
        case ButtonOneofCase.UrlButton:
          UrlButton = other.UrlButton.Clone();
          break;
        case ButtonOneofCase.CallButton:
          CallButton = other.CallButton.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateButton Clone() {
      return new TemplateButton(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private readonly static uint IndexDefaultValue = 0;

    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        index_ = value;
      }
    }
    /// <summary>Gets whether the "index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quickReplyButton" field.</summary>
    public const int QuickReplyButtonFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.QuickReplyButton QuickReplyButton {
      get { return buttonCase_ == ButtonOneofCase.QuickReplyButton ? (global::waxnet.Internal.Proto.QuickReplyButton) button_ : null; }
      set {
        button_ = value;
        buttonCase_ = value == null ? ButtonOneofCase.None : ButtonOneofCase.QuickReplyButton;
      }
    }

    /// <summary>Field number for the "urlButton" field.</summary>
    public const int UrlButtonFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.URLButton UrlButton {
      get { return buttonCase_ == ButtonOneofCase.UrlButton ? (global::waxnet.Internal.Proto.URLButton) button_ : null; }
      set {
        button_ = value;
        buttonCase_ = value == null ? ButtonOneofCase.None : ButtonOneofCase.UrlButton;
      }
    }

    /// <summary>Field number for the "callButton" field.</summary>
    public const int CallButtonFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.CallButton CallButton {
      get { return buttonCase_ == ButtonOneofCase.CallButton ? (global::waxnet.Internal.Proto.CallButton) button_ : null; }
      set {
        button_ = value;
        buttonCase_ = value == null ? ButtonOneofCase.None : ButtonOneofCase.CallButton;
      }
    }

    private object button_;
    /// <summary>Enum of possible cases for the "button" oneof.</summary>
    public enum ButtonOneofCase {
      None = 0,
      QuickReplyButton = 1,
      UrlButton = 2,
      CallButton = 3,
    }
    private ButtonOneofCase buttonCase_ = ButtonOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ButtonOneofCase ButtonCase {
      get { return buttonCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearButton() {
      buttonCase_ = ButtonOneofCase.None;
      button_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (!object.Equals(QuickReplyButton, other.QuickReplyButton)) return false;
      if (!object.Equals(UrlButton, other.UrlButton)) return false;
      if (!object.Equals(CallButton, other.CallButton)) return false;
      if (ButtonCase != other.ButtonCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIndex) hash ^= Index.GetHashCode();
      if (buttonCase_ == ButtonOneofCase.QuickReplyButton) hash ^= QuickReplyButton.GetHashCode();
      if (buttonCase_ == ButtonOneofCase.UrlButton) hash ^= UrlButton.GetHashCode();
      if (buttonCase_ == ButtonOneofCase.CallButton) hash ^= CallButton.GetHashCode();
      hash ^= (int) buttonCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (buttonCase_ == ButtonOneofCase.QuickReplyButton) {
        output.WriteRawTag(10);
        output.WriteMessage(QuickReplyButton);
      }
      if (buttonCase_ == ButtonOneofCase.UrlButton) {
        output.WriteRawTag(18);
        output.WriteMessage(UrlButton);
      }
      if (buttonCase_ == ButtonOneofCase.CallButton) {
        output.WriteRawTag(26);
        output.WriteMessage(CallButton);
      }
      if (HasIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (buttonCase_ == ButtonOneofCase.QuickReplyButton) {
        output.WriteRawTag(10);
        output.WriteMessage(QuickReplyButton);
      }
      if (buttonCase_ == ButtonOneofCase.UrlButton) {
        output.WriteRawTag(18);
        output.WriteMessage(UrlButton);
      }
      if (buttonCase_ == ButtonOneofCase.CallButton) {
        output.WriteRawTag(26);
        output.WriteMessage(CallButton);
      }
      if (HasIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (buttonCase_ == ButtonOneofCase.QuickReplyButton) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuickReplyButton);
      }
      if (buttonCase_ == ButtonOneofCase.UrlButton) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UrlButton);
      }
      if (buttonCase_ == ButtonOneofCase.CallButton) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallButton);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateButton other) {
      if (other == null) {
        return;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      switch (other.ButtonCase) {
        case ButtonOneofCase.QuickReplyButton:
          if (QuickReplyButton == null) {
            QuickReplyButton = new global::waxnet.Internal.Proto.QuickReplyButton();
          }
          QuickReplyButton.MergeFrom(other.QuickReplyButton);
          break;
        case ButtonOneofCase.UrlButton:
          if (UrlButton == null) {
            UrlButton = new global::waxnet.Internal.Proto.URLButton();
          }
          UrlButton.MergeFrom(other.UrlButton);
          break;
        case ButtonOneofCase.CallButton:
          if (CallButton == null) {
            CallButton = new global::waxnet.Internal.Proto.CallButton();
          }
          CallButton.MergeFrom(other.CallButton);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.QuickReplyButton subBuilder = new global::waxnet.Internal.Proto.QuickReplyButton();
            if (buttonCase_ == ButtonOneofCase.QuickReplyButton) {
              subBuilder.MergeFrom(QuickReplyButton);
            }
            input.ReadMessage(subBuilder);
            QuickReplyButton = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.URLButton subBuilder = new global::waxnet.Internal.Proto.URLButton();
            if (buttonCase_ == ButtonOneofCase.UrlButton) {
              subBuilder.MergeFrom(UrlButton);
            }
            input.ReadMessage(subBuilder);
            UrlButton = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.CallButton subBuilder = new global::waxnet.Internal.Proto.CallButton();
            if (buttonCase_ == ButtonOneofCase.CallButton) {
              subBuilder.MergeFrom(CallButton);
            }
            input.ReadMessage(subBuilder);
            CallButton = subBuilder;
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.QuickReplyButton subBuilder = new global::waxnet.Internal.Proto.QuickReplyButton();
            if (buttonCase_ == ButtonOneofCase.QuickReplyButton) {
              subBuilder.MergeFrom(QuickReplyButton);
            }
            input.ReadMessage(subBuilder);
            QuickReplyButton = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.URLButton subBuilder = new global::waxnet.Internal.Proto.URLButton();
            if (buttonCase_ == ButtonOneofCase.UrlButton) {
              subBuilder.MergeFrom(UrlButton);
            }
            input.ReadMessage(subBuilder);
            UrlButton = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.CallButton subBuilder = new global::waxnet.Internal.Proto.CallButton();
            if (buttonCase_ == ButtonOneofCase.CallButton) {
              subBuilder.MergeFrom(CallButton);
            }
            input.ReadMessage(subBuilder);
            CallButton = subBuilder;
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      _hasBits0 = other._hasBits0;
      degreesLatitude_ = other.degreesLatitude_;
      degreesLongitude_ = other.degreesLongitude_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "degreesLatitude" field.</summary>
    public const int DegreesLatitudeFieldNumber = 1;
    private readonly static double DegreesLatitudeDefaultValue = 0D;

    private double degreesLatitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DegreesLatitude {
      get { if ((_hasBits0 & 1) != 0) { return degreesLatitude_; } else { return DegreesLatitudeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        degreesLatitude_ = value;
      }
    }
    /// <summary>Gets whether the "degreesLatitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesLatitude {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "degreesLatitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesLatitude() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "degreesLongitude" field.</summary>
    public const int DegreesLongitudeFieldNumber = 2;
    private readonly static double DegreesLongitudeDefaultValue = 0D;

    private double degreesLongitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DegreesLongitude {
      get { if ((_hasBits0 & 2) != 0) { return degreesLongitude_; } else { return DegreesLongitudeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        degreesLongitude_ = value;
      }
    }
    /// <summary>Gets whether the "degreesLongitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesLongitude {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "degreesLongitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesLongitude() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DegreesLatitude, other.DegreesLatitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DegreesLongitude, other.DegreesLongitude)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDegreesLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DegreesLatitude);
      if (HasDegreesLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DegreesLongitude);
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDegreesLatitude) {
        output.WriteRawTag(9);
        output.WriteDouble(DegreesLatitude);
      }
      if (HasDegreesLongitude) {
        output.WriteRawTag(17);
        output.WriteDouble(DegreesLongitude);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDegreesLatitude) {
        output.WriteRawTag(9);
        output.WriteDouble(DegreesLatitude);
      }
      if (HasDegreesLongitude) {
        output.WriteRawTag(17);
        output.WriteDouble(DegreesLongitude);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDegreesLatitude) {
        size += 1 + 8;
      }
      if (HasDegreesLongitude) {
        size += 1 + 8;
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.HasDegreesLatitude) {
        DegreesLatitude = other.DegreesLatitude;
      }
      if (other.HasDegreesLongitude) {
        DegreesLongitude = other.DegreesLongitude;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DegreesLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            DegreesLongitude = input.ReadDouble();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            DegreesLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            DegreesLongitude = input.ReadDouble();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class Point : pb::IMessage<Point>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Point> _parser = new pb::MessageParser<Point>(() => new Point());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Point> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Point() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Point(Point other) : this() {
      _hasBits0 = other._hasBits0;
      xDeprecated_ = other.xDeprecated_;
      yDeprecated_ = other.yDeprecated_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Point Clone() {
      return new Point(this);
    }

    /// <summary>Field number for the "xDeprecated" field.</summary>
    public const int XDeprecatedFieldNumber = 1;
    private readonly static int XDeprecatedDefaultValue = 0;

    private int xDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int XDeprecated {
      get { if ((_hasBits0 & 1) != 0) { return xDeprecated_; } else { return XDeprecatedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        xDeprecated_ = value;
      }
    }
    /// <summary>Gets whether the "xDeprecated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasXDeprecated {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "xDeprecated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearXDeprecated() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "yDeprecated" field.</summary>
    public const int YDeprecatedFieldNumber = 2;
    private readonly static int YDeprecatedDefaultValue = 0;

    private int yDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int YDeprecated {
      get { if ((_hasBits0 & 2) != 0) { return yDeprecated_; } else { return YDeprecatedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        yDeprecated_ = value;
      }
    }
    /// <summary>Gets whether the "yDeprecated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasYDeprecated {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "yDeprecated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearYDeprecated() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private readonly static double XDefaultValue = 0D;

    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { if ((_hasBits0 & 4) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 4;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private readonly static double YDefaultValue = 0D;

    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { if ((_hasBits0 & 8) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 8;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearY() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Point);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Point other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (XDeprecated != other.XDeprecated) return false;
      if (YDeprecated != other.YDeprecated) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasXDeprecated) hash ^= XDeprecated.GetHashCode();
      if (HasYDeprecated) hash ^= YDeprecated.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasXDeprecated) {
        output.WriteRawTag(8);
        output.WriteInt32(XDeprecated);
      }
      if (HasYDeprecated) {
        output.WriteRawTag(16);
        output.WriteInt32(YDeprecated);
      }
      if (HasX) {
        output.WriteRawTag(25);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(33);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasXDeprecated) {
        output.WriteRawTag(8);
        output.WriteInt32(XDeprecated);
      }
      if (HasYDeprecated) {
        output.WriteRawTag(16);
        output.WriteInt32(YDeprecated);
      }
      if (HasX) {
        output.WriteRawTag(25);
        output.WriteDouble(X);
      }
      if (HasY) {
        output.WriteRawTag(33);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasXDeprecated) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(XDeprecated);
      }
      if (HasYDeprecated) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(YDeprecated);
      }
      if (HasX) {
        size += 1 + 8;
      }
      if (HasY) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Point other) {
      if (other == null) {
        return;
      }
      if (other.HasXDeprecated) {
        XDeprecated = other.XDeprecated;
      }
      if (other.HasYDeprecated) {
        YDeprecated = other.YDeprecated;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            XDeprecated = input.ReadInt32();
            break;
          }
          case 16: {
            YDeprecated = input.ReadInt32();
            break;
          }
          case 25: {
            X = input.ReadDouble();
            break;
          }
          case 33: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            XDeprecated = input.ReadInt32();
            break;
          }
          case 16: {
            YDeprecated = input.ReadInt32();
            break;
          }
          case 25: {
            X = input.ReadDouble();
            break;
          }
          case 33: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class InteractiveAnnotation : pb::IMessage<InteractiveAnnotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InteractiveAnnotation> _parser = new pb::MessageParser<InteractiveAnnotation>(() => new InteractiveAnnotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InteractiveAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractiveAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractiveAnnotation(InteractiveAnnotation other) : this() {
      polygonVertices_ = other.polygonVertices_.Clone();
      switch (other.ActionCase) {
        case ActionOneofCase.Location:
          Location = other.Location.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InteractiveAnnotation Clone() {
      return new InteractiveAnnotation(this);
    }

    /// <summary>Field number for the "polygonVertices" field.</summary>
    public const int PolygonVerticesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.Point> _repeated_polygonVertices_codec
        = pb::FieldCodec.ForMessage(10, global::waxnet.Internal.Proto.Point.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.Point> polygonVertices_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.Point>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.Point> PolygonVertices {
      get { return polygonVertices_; }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Location Location {
      get { return actionCase_ == ActionOneofCase.Location ? (global::waxnet.Internal.Proto.Location) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Location;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      Location = 2,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InteractiveAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InteractiveAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!polygonVertices_.Equals(other.polygonVertices_)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= polygonVertices_.GetHashCode();
      if (actionCase_ == ActionOneofCase.Location) hash ^= Location.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      polygonVertices_.WriteTo(output, _repeated_polygonVertices_codec);
      if (actionCase_ == ActionOneofCase.Location) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      polygonVertices_.WriteTo(ref output, _repeated_polygonVertices_codec);
      if (actionCase_ == ActionOneofCase.Location) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += polygonVertices_.CalculateSize(_repeated_polygonVertices_codec);
      if (actionCase_ == ActionOneofCase.Location) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InteractiveAnnotation other) {
      if (other == null) {
        return;
      }
      polygonVertices_.Add(other.polygonVertices_);
      switch (other.ActionCase) {
        case ActionOneofCase.Location:
          if (Location == null) {
            Location = new global::waxnet.Internal.Proto.Location();
          }
          Location.MergeFrom(other.Location);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            polygonVertices_.AddEntriesFrom(input, _repeated_polygonVertices_codec);
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.Location subBuilder = new global::waxnet.Internal.Proto.Location();
            if (actionCase_ == ActionOneofCase.Location) {
              subBuilder.MergeFrom(Location);
            }
            input.ReadMessage(subBuilder);
            Location = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            polygonVertices_.AddEntriesFrom(ref input, _repeated_polygonVertices_codec);
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.Location subBuilder = new global::waxnet.Internal.Proto.Location();
            if (actionCase_ == ActionOneofCase.Location) {
              subBuilder.MergeFrom(Location);
            }
            input.ReadMessage(subBuilder);
            Location = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class AdReplyInfo : pb::IMessage<AdReplyInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdReplyInfo> _parser = new pb::MessageParser<AdReplyInfo>(() => new AdReplyInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdReplyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdReplyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdReplyInfo(AdReplyInfo other) : this() {
      _hasBits0 = other._hasBits0;
      advertiserName_ = other.advertiserName_;
      mediaType_ = other.mediaType_;
      jpegThumbnail_ = other.jpegThumbnail_;
      caption_ = other.caption_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdReplyInfo Clone() {
      return new AdReplyInfo(this);
    }

    /// <summary>Field number for the "advertiserName" field.</summary>
    public const int AdvertiserNameFieldNumber = 1;
    private readonly static string AdvertiserNameDefaultValue = "";

    private string advertiserName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdvertiserName {
      get { return advertiserName_ ?? AdvertiserNameDefaultValue; }
      set {
        advertiserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "advertiserName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdvertiserName {
      get { return advertiserName_ != null; }
    }
    /// <summary>Clears the value of the "advertiserName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdvertiserName() {
      advertiserName_ = null;
    }

    /// <summary>Field number for the "mediaType" field.</summary>
    public const int MediaTypeFieldNumber = 2;
    private readonly static global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE MediaTypeDefaultValue = global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE.None;

    private global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE mediaType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE MediaType {
      get { if ((_hasBits0 & 1) != 0) { return mediaType_; } else { return MediaTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mediaType_ = value;
      }
    }
    /// <summary>Gets whether the "mediaType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mediaType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 17;
    private readonly static string CaptionDefaultValue = "";

    private string caption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_ ?? CaptionDefaultValue; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCaption {
      get { return caption_ != null; }
    }
    /// <summary>Clears the value of the "caption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCaption() {
      caption_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdReplyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdReplyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdvertiserName != other.AdvertiserName) return false;
      if (MediaType != other.MediaType) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (Caption != other.Caption) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAdvertiserName) hash ^= AdvertiserName.GetHashCode();
      if (HasMediaType) hash ^= MediaType.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (HasCaption) hash ^= Caption.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAdvertiserName) {
        output.WriteRawTag(10);
        output.WriteString(AdvertiserName);
      }
      if (HasMediaType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MediaType);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (HasCaption) {
        output.WriteRawTag(138, 1);
        output.WriteString(Caption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAdvertiserName) {
        output.WriteRawTag(10);
        output.WriteString(AdvertiserName);
      }
      if (HasMediaType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MediaType);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (HasCaption) {
        output.WriteRawTag(138, 1);
        output.WriteString(Caption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAdvertiserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdvertiserName);
      }
      if (HasMediaType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MediaType);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (HasCaption) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdReplyInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasAdvertiserName) {
        AdvertiserName = other.AdvertiserName;
      }
      if (other.HasMediaType) {
        MediaType = other.MediaType;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.HasCaption) {
        Caption = other.Caption;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AdvertiserName = input.ReadString();
            break;
          }
          case 16: {
            MediaType = (global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE) input.ReadEnum();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            Caption = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AdvertiserName = input.ReadString();
            break;
          }
          case 16: {
            MediaType = (global::waxnet.Internal.Proto.AdReplyInfo.Types.AD_REPLY_INFO_MEDIATYPE) input.ReadEnum();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            Caption = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AdReplyInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AD_REPLY_INFO_MEDIATYPE {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("IMAGE")] Image = 1,
        [pbr::OriginalName("VIDEO")] Video = 2,
      }

    }
    #endregion

  }

  internal sealed partial class ContextInfo : pb::IMessage<ContextInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextInfo> _parser = new pb::MessageParser<ContextInfo>(() => new ContextInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContextInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextInfo(ContextInfo other) : this() {
      _hasBits0 = other._hasBits0;
      stanzaId_ = other.stanzaId_;
      participant_ = other.participant_;
      quotedMessage_ = other.quotedMessage_ != null ? other.quotedMessage_.Clone() : null;
      remoteJid_ = other.remoteJid_;
      mentionedJid_ = other.mentionedJid_.Clone();
      conversionSource_ = other.conversionSource_;
      conversionData_ = other.conversionData_;
      conversionDelaySeconds_ = other.conversionDelaySeconds_;
      forwardingScore_ = other.forwardingScore_;
      isForwarded_ = other.isForwarded_;
      quotedAd_ = other.quotedAd_ != null ? other.quotedAd_.Clone() : null;
      placeholderKey_ = other.placeholderKey_ != null ? other.placeholderKey_.Clone() : null;
      expiration_ = other.expiration_;
      ephemeralSettingTimestamp_ = other.ephemeralSettingTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContextInfo Clone() {
      return new ContextInfo(this);
    }

    /// <summary>Field number for the "stanzaId" field.</summary>
    public const int StanzaIdFieldNumber = 1;
    private readonly static string StanzaIdDefaultValue = "";

    private string stanzaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StanzaId {
      get { return stanzaId_ ?? StanzaIdDefaultValue; }
      set {
        stanzaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stanzaId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStanzaId {
      get { return stanzaId_ != null; }
    }
    /// <summary>Clears the value of the "stanzaId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStanzaId() {
      stanzaId_ = null;
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 2;
    private readonly static string ParticipantDefaultValue = "";

    private string participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Participant {
      get { return participant_ ?? ParticipantDefaultValue; }
      set {
        participant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "participant" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParticipant {
      get { return participant_ != null; }
    }
    /// <summary>Clears the value of the "participant" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParticipant() {
      participant_ = null;
    }

    /// <summary>Field number for the "quotedMessage" field.</summary>
    public const int QuotedMessageFieldNumber = 3;
    private global::waxnet.Internal.Proto.Message quotedMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Message QuotedMessage {
      get { return quotedMessage_; }
      set {
        quotedMessage_ = value;
      }
    }

    /// <summary>Field number for the "remoteJid" field.</summary>
    public const int RemoteJidFieldNumber = 4;
    private readonly static string RemoteJidDefaultValue = "";

    private string remoteJid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemoteJid {
      get { return remoteJid_ ?? RemoteJidDefaultValue; }
      set {
        remoteJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "remoteJid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRemoteJid {
      get { return remoteJid_ != null; }
    }
    /// <summary>Clears the value of the "remoteJid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRemoteJid() {
      remoteJid_ = null;
    }

    /// <summary>Field number for the "mentionedJid" field.</summary>
    public const int MentionedJidFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_mentionedJid_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> mentionedJid_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MentionedJid {
      get { return mentionedJid_; }
    }

    /// <summary>Field number for the "conversionSource" field.</summary>
    public const int ConversionSourceFieldNumber = 18;
    private readonly static string ConversionSourceDefaultValue = "";

    private string conversionSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionSource {
      get { return conversionSource_ ?? ConversionSourceDefaultValue; }
      set {
        conversionSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversionSource" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionSource {
      get { return conversionSource_ != null; }
    }
    /// <summary>Clears the value of the "conversionSource" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionSource() {
      conversionSource_ = null;
    }

    /// <summary>Field number for the "conversionData" field.</summary>
    public const int ConversionDataFieldNumber = 19;
    private readonly static pb::ByteString ConversionDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString conversionData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ConversionData {
      get { return conversionData_ ?? ConversionDataDefaultValue; }
      set {
        conversionData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversionData" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionData {
      get { return conversionData_ != null; }
    }
    /// <summary>Clears the value of the "conversionData" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionData() {
      conversionData_ = null;
    }

    /// <summary>Field number for the "conversionDelaySeconds" field.</summary>
    public const int ConversionDelaySecondsFieldNumber = 20;
    private readonly static uint ConversionDelaySecondsDefaultValue = 0;

    private uint conversionDelaySeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ConversionDelaySeconds {
      get { if ((_hasBits0 & 1) != 0) { return conversionDelaySeconds_; } else { return ConversionDelaySecondsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        conversionDelaySeconds_ = value;
      }
    }
    /// <summary>Gets whether the "conversionDelaySeconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionDelaySeconds {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "conversionDelaySeconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionDelaySeconds() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "forwardingScore" field.</summary>
    public const int ForwardingScoreFieldNumber = 21;
    private readonly static uint ForwardingScoreDefaultValue = 0;

    private uint forwardingScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ForwardingScore {
      get { if ((_hasBits0 & 2) != 0) { return forwardingScore_; } else { return ForwardingScoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        forwardingScore_ = value;
      }
    }
    /// <summary>Gets whether the "forwardingScore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasForwardingScore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "forwardingScore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearForwardingScore() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "isForwarded" field.</summary>
    public const int IsForwardedFieldNumber = 22;
    private readonly static bool IsForwardedDefaultValue = false;

    private bool isForwarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsForwarded {
      get { if ((_hasBits0 & 4) != 0) { return isForwarded_; } else { return IsForwardedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isForwarded_ = value;
      }
    }
    /// <summary>Gets whether the "isForwarded" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsForwarded {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "isForwarded" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsForwarded() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "quotedAd" field.</summary>
    public const int QuotedAdFieldNumber = 23;
    private global::waxnet.Internal.Proto.AdReplyInfo quotedAd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.AdReplyInfo QuotedAd {
      get { return quotedAd_; }
      set {
        quotedAd_ = value;
      }
    }

    /// <summary>Field number for the "placeholderKey" field.</summary>
    public const int PlaceholderKeyFieldNumber = 24;
    private global::waxnet.Internal.Proto.MessageKey placeholderKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey PlaceholderKey {
      get { return placeholderKey_; }
      set {
        placeholderKey_ = value;
      }
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 25;
    private readonly static uint ExpirationDefaultValue = 0;

    private uint expiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Expiration {
      get { if ((_hasBits0 & 8) != 0) { return expiration_; } else { return ExpirationDefaultValue; } }
      set {
        _hasBits0 |= 8;
        expiration_ = value;
      }
    }
    /// <summary>Gets whether the "expiration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpiration {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "expiration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpiration() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "ephemeralSettingTimestamp" field.</summary>
    public const int EphemeralSettingTimestampFieldNumber = 26;
    private readonly static long EphemeralSettingTimestampDefaultValue = 0L;

    private long ephemeralSettingTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EphemeralSettingTimestamp {
      get { if ((_hasBits0 & 16) != 0) { return ephemeralSettingTimestamp_; } else { return EphemeralSettingTimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ephemeralSettingTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "ephemeralSettingTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEphemeralSettingTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ephemeralSettingTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEphemeralSettingTimestamp() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContextInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContextInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StanzaId != other.StanzaId) return false;
      if (Participant != other.Participant) return false;
      if (!object.Equals(QuotedMessage, other.QuotedMessage)) return false;
      if (RemoteJid != other.RemoteJid) return false;
      if(!mentionedJid_.Equals(other.mentionedJid_)) return false;
      if (ConversionSource != other.ConversionSource) return false;
      if (ConversionData != other.ConversionData) return false;
      if (ConversionDelaySeconds != other.ConversionDelaySeconds) return false;
      if (ForwardingScore != other.ForwardingScore) return false;
      if (IsForwarded != other.IsForwarded) return false;
      if (!object.Equals(QuotedAd, other.QuotedAd)) return false;
      if (!object.Equals(PlaceholderKey, other.PlaceholderKey)) return false;
      if (Expiration != other.Expiration) return false;
      if (EphemeralSettingTimestamp != other.EphemeralSettingTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStanzaId) hash ^= StanzaId.GetHashCode();
      if (HasParticipant) hash ^= Participant.GetHashCode();
      if (quotedMessage_ != null) hash ^= QuotedMessage.GetHashCode();
      if (HasRemoteJid) hash ^= RemoteJid.GetHashCode();
      hash ^= mentionedJid_.GetHashCode();
      if (HasConversionSource) hash ^= ConversionSource.GetHashCode();
      if (HasConversionData) hash ^= ConversionData.GetHashCode();
      if (HasConversionDelaySeconds) hash ^= ConversionDelaySeconds.GetHashCode();
      if (HasForwardingScore) hash ^= ForwardingScore.GetHashCode();
      if (HasIsForwarded) hash ^= IsForwarded.GetHashCode();
      if (quotedAd_ != null) hash ^= QuotedAd.GetHashCode();
      if (placeholderKey_ != null) hash ^= PlaceholderKey.GetHashCode();
      if (HasExpiration) hash ^= Expiration.GetHashCode();
      if (HasEphemeralSettingTimestamp) hash ^= EphemeralSettingTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStanzaId) {
        output.WriteRawTag(10);
        output.WriteString(StanzaId);
      }
      if (HasParticipant) {
        output.WriteRawTag(18);
        output.WriteString(Participant);
      }
      if (quotedMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotedMessage);
      }
      if (HasRemoteJid) {
        output.WriteRawTag(34);
        output.WriteString(RemoteJid);
      }
      mentionedJid_.WriteTo(output, _repeated_mentionedJid_codec);
      if (HasConversionSource) {
        output.WriteRawTag(146, 1);
        output.WriteString(ConversionSource);
      }
      if (HasConversionData) {
        output.WriteRawTag(154, 1);
        output.WriteBytes(ConversionData);
      }
      if (HasConversionDelaySeconds) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConversionDelaySeconds);
      }
      if (HasForwardingScore) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(ForwardingScore);
      }
      if (HasIsForwarded) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsForwarded);
      }
      if (quotedAd_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(QuotedAd);
      }
      if (placeholderKey_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(PlaceholderKey);
      }
      if (HasExpiration) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(Expiration);
      }
      if (HasEphemeralSettingTimestamp) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(EphemeralSettingTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStanzaId) {
        output.WriteRawTag(10);
        output.WriteString(StanzaId);
      }
      if (HasParticipant) {
        output.WriteRawTag(18);
        output.WriteString(Participant);
      }
      if (quotedMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(QuotedMessage);
      }
      if (HasRemoteJid) {
        output.WriteRawTag(34);
        output.WriteString(RemoteJid);
      }
      mentionedJid_.WriteTo(ref output, _repeated_mentionedJid_codec);
      if (HasConversionSource) {
        output.WriteRawTag(146, 1);
        output.WriteString(ConversionSource);
      }
      if (HasConversionData) {
        output.WriteRawTag(154, 1);
        output.WriteBytes(ConversionData);
      }
      if (HasConversionDelaySeconds) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ConversionDelaySeconds);
      }
      if (HasForwardingScore) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(ForwardingScore);
      }
      if (HasIsForwarded) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsForwarded);
      }
      if (quotedAd_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(QuotedAd);
      }
      if (placeholderKey_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(PlaceholderKey);
      }
      if (HasExpiration) {
        output.WriteRawTag(200, 1);
        output.WriteUInt32(Expiration);
      }
      if (HasEphemeralSettingTimestamp) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(EphemeralSettingTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStanzaId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StanzaId);
      }
      if (HasParticipant) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Participant);
      }
      if (quotedMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuotedMessage);
      }
      if (HasRemoteJid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteJid);
      }
      size += mentionedJid_.CalculateSize(_repeated_mentionedJid_codec);
      if (HasConversionSource) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConversionSource);
      }
      if (HasConversionData) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ConversionData);
      }
      if (HasConversionDelaySeconds) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ConversionDelaySeconds);
      }
      if (HasForwardingScore) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ForwardingScore);
      }
      if (HasIsForwarded) {
        size += 2 + 1;
      }
      if (quotedAd_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuotedAd);
      }
      if (placeholderKey_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlaceholderKey);
      }
      if (HasExpiration) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Expiration);
      }
      if (HasEphemeralSettingTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EphemeralSettingTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContextInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasStanzaId) {
        StanzaId = other.StanzaId;
      }
      if (other.HasParticipant) {
        Participant = other.Participant;
      }
      if (other.quotedMessage_ != null) {
        if (quotedMessage_ == null) {
          QuotedMessage = new global::waxnet.Internal.Proto.Message();
        }
        QuotedMessage.MergeFrom(other.QuotedMessage);
      }
      if (other.HasRemoteJid) {
        RemoteJid = other.RemoteJid;
      }
      mentionedJid_.Add(other.mentionedJid_);
      if (other.HasConversionSource) {
        ConversionSource = other.ConversionSource;
      }
      if (other.HasConversionData) {
        ConversionData = other.ConversionData;
      }
      if (other.HasConversionDelaySeconds) {
        ConversionDelaySeconds = other.ConversionDelaySeconds;
      }
      if (other.HasForwardingScore) {
        ForwardingScore = other.ForwardingScore;
      }
      if (other.HasIsForwarded) {
        IsForwarded = other.IsForwarded;
      }
      if (other.quotedAd_ != null) {
        if (quotedAd_ == null) {
          QuotedAd = new global::waxnet.Internal.Proto.AdReplyInfo();
        }
        QuotedAd.MergeFrom(other.QuotedAd);
      }
      if (other.placeholderKey_ != null) {
        if (placeholderKey_ == null) {
          PlaceholderKey = new global::waxnet.Internal.Proto.MessageKey();
        }
        PlaceholderKey.MergeFrom(other.PlaceholderKey);
      }
      if (other.HasExpiration) {
        Expiration = other.Expiration;
      }
      if (other.HasEphemeralSettingTimestamp) {
        EphemeralSettingTimestamp = other.EphemeralSettingTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StanzaId = input.ReadString();
            break;
          }
          case 18: {
            Participant = input.ReadString();
            break;
          }
          case 26: {
            if (quotedMessage_ == null) {
              QuotedMessage = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(QuotedMessage);
            break;
          }
          case 34: {
            RemoteJid = input.ReadString();
            break;
          }
          case 122: {
            mentionedJid_.AddEntriesFrom(input, _repeated_mentionedJid_codec);
            break;
          }
          case 146: {
            ConversionSource = input.ReadString();
            break;
          }
          case 154: {
            ConversionData = input.ReadBytes();
            break;
          }
          case 160: {
            ConversionDelaySeconds = input.ReadUInt32();
            break;
          }
          case 168: {
            ForwardingScore = input.ReadUInt32();
            break;
          }
          case 176: {
            IsForwarded = input.ReadBool();
            break;
          }
          case 186: {
            if (quotedAd_ == null) {
              QuotedAd = new global::waxnet.Internal.Proto.AdReplyInfo();
            }
            input.ReadMessage(QuotedAd);
            break;
          }
          case 194: {
            if (placeholderKey_ == null) {
              PlaceholderKey = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(PlaceholderKey);
            break;
          }
          case 200: {
            Expiration = input.ReadUInt32();
            break;
          }
          case 208: {
            EphemeralSettingTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StanzaId = input.ReadString();
            break;
          }
          case 18: {
            Participant = input.ReadString();
            break;
          }
          case 26: {
            if (quotedMessage_ == null) {
              QuotedMessage = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(QuotedMessage);
            break;
          }
          case 34: {
            RemoteJid = input.ReadString();
            break;
          }
          case 122: {
            mentionedJid_.AddEntriesFrom(ref input, _repeated_mentionedJid_codec);
            break;
          }
          case 146: {
            ConversionSource = input.ReadString();
            break;
          }
          case 154: {
            ConversionData = input.ReadBytes();
            break;
          }
          case 160: {
            ConversionDelaySeconds = input.ReadUInt32();
            break;
          }
          case 168: {
            ForwardingScore = input.ReadUInt32();
            break;
          }
          case 176: {
            IsForwarded = input.ReadBool();
            break;
          }
          case 186: {
            if (quotedAd_ == null) {
              QuotedAd = new global::waxnet.Internal.Proto.AdReplyInfo();
            }
            input.ReadMessage(QuotedAd);
            break;
          }
          case 194: {
            if (placeholderKey_ == null) {
              PlaceholderKey = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(PlaceholderKey);
            break;
          }
          case 200: {
            Expiration = input.ReadUInt32();
            break;
          }
          case 208: {
            EphemeralSettingTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class SenderKeyDistributionMessage : pb::IMessage<SenderKeyDistributionMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SenderKeyDistributionMessage> _parser = new pb::MessageParser<SenderKeyDistributionMessage>(() => new SenderKeyDistributionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SenderKeyDistributionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SenderKeyDistributionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SenderKeyDistributionMessage(SenderKeyDistributionMessage other) : this() {
      groupId_ = other.groupId_;
      axolotlSenderKeyDistributionMessage_ = other.axolotlSenderKeyDistributionMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SenderKeyDistributionMessage Clone() {
      return new SenderKeyDistributionMessage(this);
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private readonly static string GroupIdDefaultValue = "";

    private string groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_ ?? GroupIdDefaultValue; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupId {
      get { return groupId_ != null; }
    }
    /// <summary>Clears the value of the "groupId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupId() {
      groupId_ = null;
    }

    /// <summary>Field number for the "axolotlSenderKeyDistributionMessage" field.</summary>
    public const int AxolotlSenderKeyDistributionMessageFieldNumber = 2;
    private readonly static pb::ByteString AxolotlSenderKeyDistributionMessageDefaultValue = pb::ByteString.Empty;

    private pb::ByteString axolotlSenderKeyDistributionMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AxolotlSenderKeyDistributionMessage {
      get { return axolotlSenderKeyDistributionMessage_ ?? AxolotlSenderKeyDistributionMessageDefaultValue; }
      set {
        axolotlSenderKeyDistributionMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "axolotlSenderKeyDistributionMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAxolotlSenderKeyDistributionMessage {
      get { return axolotlSenderKeyDistributionMessage_ != null; }
    }
    /// <summary>Clears the value of the "axolotlSenderKeyDistributionMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAxolotlSenderKeyDistributionMessage() {
      axolotlSenderKeyDistributionMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SenderKeyDistributionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SenderKeyDistributionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if (AxolotlSenderKeyDistributionMessage != other.AxolotlSenderKeyDistributionMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGroupId) hash ^= GroupId.GetHashCode();
      if (HasAxolotlSenderKeyDistributionMessage) hash ^= AxolotlSenderKeyDistributionMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGroupId) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (HasAxolotlSenderKeyDistributionMessage) {
        output.WriteRawTag(18);
        output.WriteBytes(AxolotlSenderKeyDistributionMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGroupId) {
        output.WriteRawTag(10);
        output.WriteString(GroupId);
      }
      if (HasAxolotlSenderKeyDistributionMessage) {
        output.WriteRawTag(18);
        output.WriteBytes(AxolotlSenderKeyDistributionMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGroupId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (HasAxolotlSenderKeyDistributionMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AxolotlSenderKeyDistributionMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SenderKeyDistributionMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasGroupId) {
        GroupId = other.GroupId;
      }
      if (other.HasAxolotlSenderKeyDistributionMessage) {
        AxolotlSenderKeyDistributionMessage = other.AxolotlSenderKeyDistributionMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            AxolotlSenderKeyDistributionMessage = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupId = input.ReadString();
            break;
          }
          case 18: {
            AxolotlSenderKeyDistributionMessage = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ImageMessage : pb::IMessage<ImageMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageMessage> _parser = new pb::MessageParser<ImageMessage>(() => new ImageMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMessage(ImageMessage other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      mimetype_ = other.mimetype_;
      caption_ = other.caption_;
      fileSha256_ = other.fileSha256_;
      fileLength_ = other.fileLength_;
      height_ = other.height_;
      width_ = other.width_;
      mediaKey_ = other.mediaKey_;
      fileEncSha256_ = other.fileEncSha256_;
      interactiveAnnotations_ = other.interactiveAnnotations_.Clone();
      directPath_ = other.directPath_;
      mediaKeyTimestamp_ = other.mediaKeyTimestamp_;
      jpegThumbnail_ = other.jpegThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      firstScanSidecar_ = other.firstScanSidecar_;
      firstScanLength_ = other.firstScanLength_;
      experimentGroupId_ = other.experimentGroupId_;
      scansSidecar_ = other.scansSidecar_;
      scanLengths_ = other.scanLengths_.Clone();
      midQualityFileSha256_ = other.midQualityFileSha256_;
      midQualityFileEncSha256_ = other.midQualityFileEncSha256_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageMessage Clone() {
      return new ImageMessage(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 2;
    private readonly static string MimetypeDefaultValue = "";

    private string mimetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_ ?? MimetypeDefaultValue; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mimetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMimetype {
      get { return mimetype_ != null; }
    }
    /// <summary>Clears the value of the "mimetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMimetype() {
      mimetype_ = null;
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 3;
    private readonly static string CaptionDefaultValue = "";

    private string caption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_ ?? CaptionDefaultValue; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCaption {
      get { return caption_ != null; }
    }
    /// <summary>Clears the value of the "caption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCaption() {
      caption_ = null;
    }

    /// <summary>Field number for the "fileSha256" field.</summary>
    public const int FileSha256FieldNumber = 4;
    private readonly static pb::ByteString FileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileSha256 {
      get { return fileSha256_ ?? FileSha256DefaultValue; }
      set {
        fileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSha256 {
      get { return fileSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSha256() {
      fileSha256_ = null;
    }

    /// <summary>Field number for the "fileLength" field.</summary>
    public const int FileLengthFieldNumber = 5;
    private readonly static ulong FileLengthDefaultValue = 0UL;

    private ulong fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FileLength {
      get { if ((_hasBits0 & 1) != 0) { return fileLength_; } else { return FileLengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileLength_ = value;
      }
    }
    /// <summary>Gets whether the "fileLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 6;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 7;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mediaKey" field.</summary>
    public const int MediaKeyFieldNumber = 8;
    private readonly static pb::ByteString MediaKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaKey {
      get { return mediaKey_ ?? MediaKeyDefaultValue; }
      set {
        mediaKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKey {
      get { return mediaKey_ != null; }
    }
    /// <summary>Clears the value of the "mediaKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKey() {
      mediaKey_ = null;
    }

    /// <summary>Field number for the "fileEncSha256" field.</summary>
    public const int FileEncSha256FieldNumber = 9;
    private readonly static pb::ByteString FileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileEncSha256 {
      get { return fileEncSha256_ ?? FileEncSha256DefaultValue; }
      set {
        fileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileEncSha256 {
      get { return fileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileEncSha256() {
      fileEncSha256_ = null;
    }

    /// <summary>Field number for the "interactiveAnnotations" field.</summary>
    public const int InteractiveAnnotationsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.InteractiveAnnotation> _repeated_interactiveAnnotations_codec
        = pb::FieldCodec.ForMessage(82, global::waxnet.Internal.Proto.InteractiveAnnotation.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.InteractiveAnnotation> interactiveAnnotations_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.InteractiveAnnotation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.InteractiveAnnotation> InteractiveAnnotations {
      get { return interactiveAnnotations_; }
    }

    /// <summary>Field number for the "directPath" field.</summary>
    public const int DirectPathFieldNumber = 11;
    private readonly static string DirectPathDefaultValue = "";

    private string directPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DirectPath {
      get { return directPath_ ?? DirectPathDefaultValue; }
      set {
        directPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "directPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirectPath {
      get { return directPath_ != null; }
    }
    /// <summary>Clears the value of the "directPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirectPath() {
      directPath_ = null;
    }

    /// <summary>Field number for the "mediaKeyTimestamp" field.</summary>
    public const int MediaKeyTimestampFieldNumber = 12;
    private readonly static long MediaKeyTimestampDefaultValue = 0L;

    private long mediaKeyTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MediaKeyTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return mediaKeyTimestamp_; } else { return MediaKeyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mediaKeyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "mediaKeyTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKeyTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mediaKeyTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKeyTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    /// <summary>Field number for the "firstScanSidecar" field.</summary>
    public const int FirstScanSidecarFieldNumber = 18;
    private readonly static pb::ByteString FirstScanSidecarDefaultValue = pb::ByteString.Empty;

    private pb::ByteString firstScanSidecar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FirstScanSidecar {
      get { return firstScanSidecar_ ?? FirstScanSidecarDefaultValue; }
      set {
        firstScanSidecar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "firstScanSidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstScanSidecar {
      get { return firstScanSidecar_ != null; }
    }
    /// <summary>Clears the value of the "firstScanSidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstScanSidecar() {
      firstScanSidecar_ = null;
    }

    /// <summary>Field number for the "firstScanLength" field.</summary>
    public const int FirstScanLengthFieldNumber = 19;
    private readonly static uint FirstScanLengthDefaultValue = 0;

    private uint firstScanLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FirstScanLength {
      get { if ((_hasBits0 & 16) != 0) { return firstScanLength_; } else { return FirstScanLengthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        firstScanLength_ = value;
      }
    }
    /// <summary>Gets whether the "firstScanLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstScanLength {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "firstScanLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstScanLength() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "experimentGroupId" field.</summary>
    public const int ExperimentGroupIdFieldNumber = 20;
    private readonly static uint ExperimentGroupIdDefaultValue = 0;

    private uint experimentGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExperimentGroupId {
      get { if ((_hasBits0 & 32) != 0) { return experimentGroupId_; } else { return ExperimentGroupIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        experimentGroupId_ = value;
      }
    }
    /// <summary>Gets whether the "experimentGroupId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExperimentGroupId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "experimentGroupId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExperimentGroupId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "scansSidecar" field.</summary>
    public const int ScansSidecarFieldNumber = 21;
    private readonly static pb::ByteString ScansSidecarDefaultValue = pb::ByteString.Empty;

    private pb::ByteString scansSidecar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ScansSidecar {
      get { return scansSidecar_ ?? ScansSidecarDefaultValue; }
      set {
        scansSidecar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "scansSidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScansSidecar {
      get { return scansSidecar_ != null; }
    }
    /// <summary>Clears the value of the "scansSidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScansSidecar() {
      scansSidecar_ = null;
    }

    /// <summary>Field number for the "scanLengths" field.</summary>
    public const int ScanLengthsFieldNumber = 22;
    private static readonly pb::FieldCodec<uint> _repeated_scanLengths_codec
        = pb::FieldCodec.ForUInt32(176);
    private readonly pbc::RepeatedField<uint> scanLengths_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ScanLengths {
      get { return scanLengths_; }
    }

    /// <summary>Field number for the "midQualityFileSha256" field.</summary>
    public const int MidQualityFileSha256FieldNumber = 23;
    private readonly static pb::ByteString MidQualityFileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString midQualityFileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MidQualityFileSha256 {
      get { return midQualityFileSha256_ ?? MidQualityFileSha256DefaultValue; }
      set {
        midQualityFileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "midQualityFileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMidQualityFileSha256 {
      get { return midQualityFileSha256_ != null; }
    }
    /// <summary>Clears the value of the "midQualityFileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMidQualityFileSha256() {
      midQualityFileSha256_ = null;
    }

    /// <summary>Field number for the "midQualityFileEncSha256" field.</summary>
    public const int MidQualityFileEncSha256FieldNumber = 24;
    private readonly static pb::ByteString MidQualityFileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString midQualityFileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MidQualityFileEncSha256 {
      get { return midQualityFileEncSha256_ ?? MidQualityFileEncSha256DefaultValue; }
      set {
        midQualityFileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "midQualityFileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMidQualityFileEncSha256 {
      get { return midQualityFileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "midQualityFileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMidQualityFileEncSha256() {
      midQualityFileEncSha256_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Mimetype != other.Mimetype) return false;
      if (Caption != other.Caption) return false;
      if (FileSha256 != other.FileSha256) return false;
      if (FileLength != other.FileLength) return false;
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if (MediaKey != other.MediaKey) return false;
      if (FileEncSha256 != other.FileEncSha256) return false;
      if(!interactiveAnnotations_.Equals(other.interactiveAnnotations_)) return false;
      if (DirectPath != other.DirectPath) return false;
      if (MediaKeyTimestamp != other.MediaKeyTimestamp) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      if (FirstScanSidecar != other.FirstScanSidecar) return false;
      if (FirstScanLength != other.FirstScanLength) return false;
      if (ExperimentGroupId != other.ExperimentGroupId) return false;
      if (ScansSidecar != other.ScansSidecar) return false;
      if(!scanLengths_.Equals(other.scanLengths_)) return false;
      if (MidQualityFileSha256 != other.MidQualityFileSha256) return false;
      if (MidQualityFileEncSha256 != other.MidQualityFileEncSha256) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasMimetype) hash ^= Mimetype.GetHashCode();
      if (HasCaption) hash ^= Caption.GetHashCode();
      if (HasFileSha256) hash ^= FileSha256.GetHashCode();
      if (HasFileLength) hash ^= FileLength.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasMediaKey) hash ^= MediaKey.GetHashCode();
      if (HasFileEncSha256) hash ^= FileEncSha256.GetHashCode();
      hash ^= interactiveAnnotations_.GetHashCode();
      if (HasDirectPath) hash ^= DirectPath.GetHashCode();
      if (HasMediaKeyTimestamp) hash ^= MediaKeyTimestamp.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (HasFirstScanSidecar) hash ^= FirstScanSidecar.GetHashCode();
      if (HasFirstScanLength) hash ^= FirstScanLength.GetHashCode();
      if (HasExperimentGroupId) hash ^= ExperimentGroupId.GetHashCode();
      if (HasScansSidecar) hash ^= ScansSidecar.GetHashCode();
      hash ^= scanLengths_.GetHashCode();
      if (HasMidQualityFileSha256) hash ^= MidQualityFileSha256.GetHashCode();
      if (HasMidQualityFileEncSha256) hash ^= MidQualityFileEncSha256.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasCaption) {
        output.WriteRawTag(26);
        output.WriteString(Caption);
      }
      if (HasFileSha256) {
        output.WriteRawTag(34);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(40);
        output.WriteUInt64(FileLength);
      }
      if (HasHeight) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height);
      }
      if (HasWidth) {
        output.WriteRawTag(56);
        output.WriteUInt32(Width);
      }
      if (HasMediaKey) {
        output.WriteRawTag(66);
        output.WriteBytes(MediaKey);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(74);
        output.WriteBytes(FileEncSha256);
      }
      interactiveAnnotations_.WriteTo(output, _repeated_interactiveAnnotations_codec);
      if (HasDirectPath) {
        output.WriteRawTag(90);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(96);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasFirstScanSidecar) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(FirstScanSidecar);
      }
      if (HasFirstScanLength) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(FirstScanLength);
      }
      if (HasExperimentGroupId) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ExperimentGroupId);
      }
      if (HasScansSidecar) {
        output.WriteRawTag(170, 1);
        output.WriteBytes(ScansSidecar);
      }
      scanLengths_.WriteTo(output, _repeated_scanLengths_codec);
      if (HasMidQualityFileSha256) {
        output.WriteRawTag(186, 1);
        output.WriteBytes(MidQualityFileSha256);
      }
      if (HasMidQualityFileEncSha256) {
        output.WriteRawTag(194, 1);
        output.WriteBytes(MidQualityFileEncSha256);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasCaption) {
        output.WriteRawTag(26);
        output.WriteString(Caption);
      }
      if (HasFileSha256) {
        output.WriteRawTag(34);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(40);
        output.WriteUInt64(FileLength);
      }
      if (HasHeight) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height);
      }
      if (HasWidth) {
        output.WriteRawTag(56);
        output.WriteUInt32(Width);
      }
      if (HasMediaKey) {
        output.WriteRawTag(66);
        output.WriteBytes(MediaKey);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(74);
        output.WriteBytes(FileEncSha256);
      }
      interactiveAnnotations_.WriteTo(ref output, _repeated_interactiveAnnotations_codec);
      if (HasDirectPath) {
        output.WriteRawTag(90);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(96);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasFirstScanSidecar) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(FirstScanSidecar);
      }
      if (HasFirstScanLength) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(FirstScanLength);
      }
      if (HasExperimentGroupId) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(ExperimentGroupId);
      }
      if (HasScansSidecar) {
        output.WriteRawTag(170, 1);
        output.WriteBytes(ScansSidecar);
      }
      scanLengths_.WriteTo(ref output, _repeated_scanLengths_codec);
      if (HasMidQualityFileSha256) {
        output.WriteRawTag(186, 1);
        output.WriteBytes(MidQualityFileSha256);
      }
      if (HasMidQualityFileEncSha256) {
        output.WriteRawTag(194, 1);
        output.WriteBytes(MidQualityFileEncSha256);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasMimetype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (HasCaption) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (HasFileSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileSha256);
      }
      if (HasFileLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileLength);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasMediaKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MediaKey);
      }
      if (HasFileEncSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileEncSha256);
      }
      size += interactiveAnnotations_.CalculateSize(_repeated_interactiveAnnotations_codec);
      if (HasDirectPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (HasFirstScanSidecar) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(FirstScanSidecar);
      }
      if (HasFirstScanLength) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FirstScanLength);
      }
      if (HasExperimentGroupId) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ExperimentGroupId);
      }
      if (HasScansSidecar) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(ScansSidecar);
      }
      size += scanLengths_.CalculateSize(_repeated_scanLengths_codec);
      if (HasMidQualityFileSha256) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(MidQualityFileSha256);
      }
      if (HasMidQualityFileEncSha256) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(MidQualityFileEncSha256);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasMimetype) {
        Mimetype = other.Mimetype;
      }
      if (other.HasCaption) {
        Caption = other.Caption;
      }
      if (other.HasFileSha256) {
        FileSha256 = other.FileSha256;
      }
      if (other.HasFileLength) {
        FileLength = other.FileLength;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasMediaKey) {
        MediaKey = other.MediaKey;
      }
      if (other.HasFileEncSha256) {
        FileEncSha256 = other.FileEncSha256;
      }
      interactiveAnnotations_.Add(other.interactiveAnnotations_);
      if (other.HasDirectPath) {
        DirectPath = other.DirectPath;
      }
      if (other.HasMediaKeyTimestamp) {
        MediaKeyTimestamp = other.MediaKeyTimestamp;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      if (other.HasFirstScanSidecar) {
        FirstScanSidecar = other.FirstScanSidecar;
      }
      if (other.HasFirstScanLength) {
        FirstScanLength = other.FirstScanLength;
      }
      if (other.HasExperimentGroupId) {
        ExperimentGroupId = other.ExperimentGroupId;
      }
      if (other.HasScansSidecar) {
        ScansSidecar = other.ScansSidecar;
      }
      scanLengths_.Add(other.scanLengths_);
      if (other.HasMidQualityFileSha256) {
        MidQualityFileSha256 = other.MidQualityFileSha256;
      }
      if (other.HasMidQualityFileEncSha256) {
        MidQualityFileEncSha256 = other.MidQualityFileEncSha256;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            Caption = input.ReadString();
            break;
          }
          case 34: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 40: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 48: {
            Height = input.ReadUInt32();
            break;
          }
          case 56: {
            Width = input.ReadUInt32();
            break;
          }
          case 66: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 74: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 82: {
            interactiveAnnotations_.AddEntriesFrom(input, _repeated_interactiveAnnotations_codec);
            break;
          }
          case 90: {
            DirectPath = input.ReadString();
            break;
          }
          case 96: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 146: {
            FirstScanSidecar = input.ReadBytes();
            break;
          }
          case 152: {
            FirstScanLength = input.ReadUInt32();
            break;
          }
          case 160: {
            ExperimentGroupId = input.ReadUInt32();
            break;
          }
          case 170: {
            ScansSidecar = input.ReadBytes();
            break;
          }
          case 178:
          case 176: {
            scanLengths_.AddEntriesFrom(input, _repeated_scanLengths_codec);
            break;
          }
          case 186: {
            MidQualityFileSha256 = input.ReadBytes();
            break;
          }
          case 194: {
            MidQualityFileEncSha256 = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            Caption = input.ReadString();
            break;
          }
          case 34: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 40: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 48: {
            Height = input.ReadUInt32();
            break;
          }
          case 56: {
            Width = input.ReadUInt32();
            break;
          }
          case 66: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 74: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 82: {
            interactiveAnnotations_.AddEntriesFrom(ref input, _repeated_interactiveAnnotations_codec);
            break;
          }
          case 90: {
            DirectPath = input.ReadString();
            break;
          }
          case 96: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 146: {
            FirstScanSidecar = input.ReadBytes();
            break;
          }
          case 152: {
            FirstScanLength = input.ReadUInt32();
            break;
          }
          case 160: {
            ExperimentGroupId = input.ReadUInt32();
            break;
          }
          case 170: {
            ScansSidecar = input.ReadBytes();
            break;
          }
          case 178:
          case 176: {
            scanLengths_.AddEntriesFrom(ref input, _repeated_scanLengths_codec);
            break;
          }
          case 186: {
            MidQualityFileSha256 = input.ReadBytes();
            break;
          }
          case 194: {
            MidQualityFileEncSha256 = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ContactMessage : pb::IMessage<ContactMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContactMessage> _parser = new pb::MessageParser<ContactMessage>(() => new ContactMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContactMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactMessage(ContactMessage other) : this() {
      displayName_ = other.displayName_;
      vcard_ = other.vcard_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactMessage Clone() {
      return new ContactMessage(this);
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "vcard" field.</summary>
    public const int VcardFieldNumber = 16;
    private readonly static string VcardDefaultValue = "";

    private string vcard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Vcard {
      get { return vcard_ ?? VcardDefaultValue; }
      set {
        vcard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vcard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVcard {
      get { return vcard_ != null; }
    }
    /// <summary>Clears the value of the "vcard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVcard() {
      vcard_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContactMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContactMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (Vcard != other.Vcard) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (HasVcard) hash ^= Vcard.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayName) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (HasVcard) {
        output.WriteRawTag(130, 1);
        output.WriteString(Vcard);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayName) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (HasVcard) {
        output.WriteRawTag(130, 1);
        output.WriteString(Vcard);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (HasVcard) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Vcard);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContactMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      if (other.HasVcard) {
        Vcard = other.Vcard;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 130: {
            Vcard = input.ReadString();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 130: {
            Vcard = input.ReadString();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class LocationMessage : pb::IMessage<LocationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationMessage> _parser = new pb::MessageParser<LocationMessage>(() => new LocationMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMessage(LocationMessage other) : this() {
      _hasBits0 = other._hasBits0;
      degreesLatitude_ = other.degreesLatitude_;
      degreesLongitude_ = other.degreesLongitude_;
      name_ = other.name_;
      address_ = other.address_;
      url_ = other.url_;
      isLive_ = other.isLive_;
      accuracyInMeters_ = other.accuracyInMeters_;
      speedInMps_ = other.speedInMps_;
      degreesClockwiseFromMagneticNorth_ = other.degreesClockwiseFromMagneticNorth_;
      comment_ = other.comment_;
      jpegThumbnail_ = other.jpegThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMessage Clone() {
      return new LocationMessage(this);
    }

    /// <summary>Field number for the "degreesLatitude" field.</summary>
    public const int DegreesLatitudeFieldNumber = 1;
    private readonly static double DegreesLatitudeDefaultValue = 0D;

    private double degreesLatitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DegreesLatitude {
      get { if ((_hasBits0 & 1) != 0) { return degreesLatitude_; } else { return DegreesLatitudeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        degreesLatitude_ = value;
      }
    }
    /// <summary>Gets whether the "degreesLatitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesLatitude {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "degreesLatitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesLatitude() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "degreesLongitude" field.</summary>
    public const int DegreesLongitudeFieldNumber = 2;
    private readonly static double DegreesLongitudeDefaultValue = 0D;

    private double degreesLongitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DegreesLongitude {
      get { if ((_hasBits0 & 2) != 0) { return degreesLongitude_; } else { return DegreesLongitudeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        degreesLongitude_ = value;
      }
    }
    /// <summary>Gets whether the "degreesLongitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesLongitude {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "degreesLongitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesLongitude() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private readonly static string AddressDefaultValue = "";

    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_ ?? AddressDefaultValue; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAddress {
      get { return address_ != null; }
    }
    /// <summary>Clears the value of the "address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddress() {
      address_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "isLive" field.</summary>
    public const int IsLiveFieldNumber = 6;
    private readonly static bool IsLiveDefaultValue = false;

    private bool isLive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLive {
      get { if ((_hasBits0 & 4) != 0) { return isLive_; } else { return IsLiveDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isLive_ = value;
      }
    }
    /// <summary>Gets whether the "isLive" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsLive {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "isLive" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsLive() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "accuracyInMeters" field.</summary>
    public const int AccuracyInMetersFieldNumber = 7;
    private readonly static uint AccuracyInMetersDefaultValue = 0;

    private uint accuracyInMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccuracyInMeters {
      get { if ((_hasBits0 & 8) != 0) { return accuracyInMeters_; } else { return AccuracyInMetersDefaultValue; } }
      set {
        _hasBits0 |= 8;
        accuracyInMeters_ = value;
      }
    }
    /// <summary>Gets whether the "accuracyInMeters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccuracyInMeters {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "accuracyInMeters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccuracyInMeters() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "speedInMps" field.</summary>
    public const int SpeedInMpsFieldNumber = 8;
    private readonly static float SpeedInMpsDefaultValue = 0F;

    private float speedInMps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SpeedInMps {
      get { if ((_hasBits0 & 16) != 0) { return speedInMps_; } else { return SpeedInMpsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        speedInMps_ = value;
      }
    }
    /// <summary>Gets whether the "speedInMps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSpeedInMps {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "speedInMps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSpeedInMps() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "degreesClockwiseFromMagneticNorth" field.</summary>
    public const int DegreesClockwiseFromMagneticNorthFieldNumber = 9;
    private readonly static uint DegreesClockwiseFromMagneticNorthDefaultValue = 0;

    private uint degreesClockwiseFromMagneticNorth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DegreesClockwiseFromMagneticNorth {
      get { if ((_hasBits0 & 32) != 0) { return degreesClockwiseFromMagneticNorth_; } else { return DegreesClockwiseFromMagneticNorthDefaultValue; } }
      set {
        _hasBits0 |= 32;
        degreesClockwiseFromMagneticNorth_ = value;
      }
    }
    /// <summary>Gets whether the "degreesClockwiseFromMagneticNorth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesClockwiseFromMagneticNorth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "degreesClockwiseFromMagneticNorth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesClockwiseFromMagneticNorth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 11;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearComment() {
      comment_ = null;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DegreesLatitude, other.DegreesLatitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DegreesLongitude, other.DegreesLongitude)) return false;
      if (Name != other.Name) return false;
      if (Address != other.Address) return false;
      if (Url != other.Url) return false;
      if (IsLive != other.IsLive) return false;
      if (AccuracyInMeters != other.AccuracyInMeters) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedInMps, other.SpeedInMps)) return false;
      if (DegreesClockwiseFromMagneticNorth != other.DegreesClockwiseFromMagneticNorth) return false;
      if (Comment != other.Comment) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDegreesLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DegreesLatitude);
      if (HasDegreesLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DegreesLongitude);
      if (HasName) hash ^= Name.GetHashCode();
      if (HasAddress) hash ^= Address.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasIsLive) hash ^= IsLive.GetHashCode();
      if (HasAccuracyInMeters) hash ^= AccuracyInMeters.GetHashCode();
      if (HasSpeedInMps) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedInMps);
      if (HasDegreesClockwiseFromMagneticNorth) hash ^= DegreesClockwiseFromMagneticNorth.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDegreesLatitude) {
        output.WriteRawTag(9);
        output.WriteDouble(DegreesLatitude);
      }
      if (HasDegreesLongitude) {
        output.WriteRawTag(17);
        output.WriteDouble(DegreesLongitude);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasAddress) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (HasUrl) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (HasIsLive) {
        output.WriteRawTag(48);
        output.WriteBool(IsLive);
      }
      if (HasAccuracyInMeters) {
        output.WriteRawTag(56);
        output.WriteUInt32(AccuracyInMeters);
      }
      if (HasSpeedInMps) {
        output.WriteRawTag(69);
        output.WriteFloat(SpeedInMps);
      }
      if (HasDegreesClockwiseFromMagneticNorth) {
        output.WriteRawTag(72);
        output.WriteUInt32(DegreesClockwiseFromMagneticNorth);
      }
      if (HasComment) {
        output.WriteRawTag(90);
        output.WriteString(Comment);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDegreesLatitude) {
        output.WriteRawTag(9);
        output.WriteDouble(DegreesLatitude);
      }
      if (HasDegreesLongitude) {
        output.WriteRawTag(17);
        output.WriteDouble(DegreesLongitude);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasAddress) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (HasUrl) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (HasIsLive) {
        output.WriteRawTag(48);
        output.WriteBool(IsLive);
      }
      if (HasAccuracyInMeters) {
        output.WriteRawTag(56);
        output.WriteUInt32(AccuracyInMeters);
      }
      if (HasSpeedInMps) {
        output.WriteRawTag(69);
        output.WriteFloat(SpeedInMps);
      }
      if (HasDegreesClockwiseFromMagneticNorth) {
        output.WriteRawTag(72);
        output.WriteUInt32(DegreesClockwiseFromMagneticNorth);
      }
      if (HasComment) {
        output.WriteRawTag(90);
        output.WriteString(Comment);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDegreesLatitude) {
        size += 1 + 8;
      }
      if (HasDegreesLongitude) {
        size += 1 + 8;
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasIsLive) {
        size += 1 + 1;
      }
      if (HasAccuracyInMeters) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccuracyInMeters);
      }
      if (HasSpeedInMps) {
        size += 1 + 4;
      }
      if (HasDegreesClockwiseFromMagneticNorth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DegreesClockwiseFromMagneticNorth);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasDegreesLatitude) {
        DegreesLatitude = other.DegreesLatitude;
      }
      if (other.HasDegreesLongitude) {
        DegreesLongitude = other.DegreesLongitude;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasAddress) {
        Address = other.Address;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasIsLive) {
        IsLive = other.IsLive;
      }
      if (other.HasAccuracyInMeters) {
        AccuracyInMeters = other.AccuracyInMeters;
      }
      if (other.HasSpeedInMps) {
        SpeedInMps = other.SpeedInMps;
      }
      if (other.HasDegreesClockwiseFromMagneticNorth) {
        DegreesClockwiseFromMagneticNorth = other.DegreesClockwiseFromMagneticNorth;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DegreesLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            DegreesLongitude = input.ReadDouble();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 48: {
            IsLive = input.ReadBool();
            break;
          }
          case 56: {
            AccuracyInMeters = input.ReadUInt32();
            break;
          }
          case 69: {
            SpeedInMps = input.ReadFloat();
            break;
          }
          case 72: {
            DegreesClockwiseFromMagneticNorth = input.ReadUInt32();
            break;
          }
          case 90: {
            Comment = input.ReadString();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            DegreesLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            DegreesLongitude = input.ReadDouble();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 48: {
            IsLive = input.ReadBool();
            break;
          }
          case 56: {
            AccuracyInMeters = input.ReadUInt32();
            break;
          }
          case 69: {
            SpeedInMps = input.ReadFloat();
            break;
          }
          case 72: {
            DegreesClockwiseFromMagneticNorth = input.ReadUInt32();
            break;
          }
          case 90: {
            Comment = input.ReadString();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ExtendedTextMessage : pb::IMessage<ExtendedTextMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExtendedTextMessage> _parser = new pb::MessageParser<ExtendedTextMessage>(() => new ExtendedTextMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtendedTextMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtendedTextMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtendedTextMessage(ExtendedTextMessage other) : this() {
      _hasBits0 = other._hasBits0;
      text_ = other.text_;
      matchedText_ = other.matchedText_;
      canonicalUrl_ = other.canonicalUrl_;
      description_ = other.description_;
      title_ = other.title_;
      textArgb_ = other.textArgb_;
      backgroundArgb_ = other.backgroundArgb_;
      font_ = other.font_;
      previewType_ = other.previewType_;
      jpegThumbnail_ = other.jpegThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      doNotPlayInline_ = other.doNotPlayInline_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtendedTextMessage Clone() {
      return new ExtendedTextMessage(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "matchedText" field.</summary>
    public const int MatchedTextFieldNumber = 2;
    private readonly static string MatchedTextDefaultValue = "";

    private string matchedText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchedText {
      get { return matchedText_ ?? MatchedTextDefaultValue; }
      set {
        matchedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "matchedText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMatchedText {
      get { return matchedText_ != null; }
    }
    /// <summary>Clears the value of the "matchedText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMatchedText() {
      matchedText_ = null;
    }

    /// <summary>Field number for the "canonicalUrl" field.</summary>
    public const int CanonicalUrlFieldNumber = 4;
    private readonly static string CanonicalUrlDefaultValue = "";

    private string canonicalUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CanonicalUrl {
      get { return canonicalUrl_ ?? CanonicalUrlDefaultValue; }
      set {
        canonicalUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "canonicalUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanonicalUrl {
      get { return canonicalUrl_ != null; }
    }
    /// <summary>Clears the value of the "canonicalUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanonicalUrl() {
      canonicalUrl_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "textArgb" field.</summary>
    public const int TextArgbFieldNumber = 7;
    private readonly static uint TextArgbDefaultValue = 0;

    private uint textArgb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TextArgb {
      get { if ((_hasBits0 & 1) != 0) { return textArgb_; } else { return TextArgbDefaultValue; } }
      set {
        _hasBits0 |= 1;
        textArgb_ = value;
      }
    }
    /// <summary>Gets whether the "textArgb" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTextArgb {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "textArgb" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTextArgb() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "backgroundArgb" field.</summary>
    public const int BackgroundArgbFieldNumber = 8;
    private readonly static uint BackgroundArgbDefaultValue = 0;

    private uint backgroundArgb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BackgroundArgb {
      get { if ((_hasBits0 & 2) != 0) { return backgroundArgb_; } else { return BackgroundArgbDefaultValue; } }
      set {
        _hasBits0 |= 2;
        backgroundArgb_ = value;
      }
    }
    /// <summary>Gets whether the "backgroundArgb" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackgroundArgb {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "backgroundArgb" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackgroundArgb() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "font" field.</summary>
    public const int FontFieldNumber = 9;
    private readonly static global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE FontDefaultValue = global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE.SansSerif;

    private global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE font_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE Font {
      get { if ((_hasBits0 & 4) != 0) { return font_; } else { return FontDefaultValue; } }
      set {
        _hasBits0 |= 4;
        font_ = value;
      }
    }
    /// <summary>Gets whether the "font" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFont {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "font" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFont() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "previewType" field.</summary>
    public const int PreviewTypeFieldNumber = 10;
    private readonly static global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE PreviewTypeDefaultValue = global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE.None;

    private global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE previewType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE PreviewType {
      get { if ((_hasBits0 & 8) != 0) { return previewType_; } else { return PreviewTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        previewType_ = value;
      }
    }
    /// <summary>Gets whether the "previewType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviewType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "previewType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPreviewType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    /// <summary>Field number for the "doNotPlayInline" field.</summary>
    public const int DoNotPlayInlineFieldNumber = 18;
    private readonly static bool DoNotPlayInlineDefaultValue = false;

    private bool doNotPlayInline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DoNotPlayInline {
      get { if ((_hasBits0 & 16) != 0) { return doNotPlayInline_; } else { return DoNotPlayInlineDefaultValue; } }
      set {
        _hasBits0 |= 16;
        doNotPlayInline_ = value;
      }
    }
    /// <summary>Gets whether the "doNotPlayInline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDoNotPlayInline {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "doNotPlayInline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDoNotPlayInline() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtendedTextMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtendedTextMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (MatchedText != other.MatchedText) return false;
      if (CanonicalUrl != other.CanonicalUrl) return false;
      if (Description != other.Description) return false;
      if (Title != other.Title) return false;
      if (TextArgb != other.TextArgb) return false;
      if (BackgroundArgb != other.BackgroundArgb) return false;
      if (Font != other.Font) return false;
      if (PreviewType != other.PreviewType) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      if (DoNotPlayInline != other.DoNotPlayInline) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasText) hash ^= Text.GetHashCode();
      if (HasMatchedText) hash ^= MatchedText.GetHashCode();
      if (HasCanonicalUrl) hash ^= CanonicalUrl.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasTextArgb) hash ^= TextArgb.GetHashCode();
      if (HasBackgroundArgb) hash ^= BackgroundArgb.GetHashCode();
      if (HasFont) hash ^= Font.GetHashCode();
      if (HasPreviewType) hash ^= PreviewType.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (HasDoNotPlayInline) hash ^= DoNotPlayInline.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasText) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (HasMatchedText) {
        output.WriteRawTag(18);
        output.WriteString(MatchedText);
      }
      if (HasCanonicalUrl) {
        output.WriteRawTag(34);
        output.WriteString(CanonicalUrl);
      }
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (HasTitle) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (HasTextArgb) {
        output.WriteRawTag(61);
        output.WriteFixed32(TextArgb);
      }
      if (HasBackgroundArgb) {
        output.WriteRawTag(69);
        output.WriteFixed32(BackgroundArgb);
      }
      if (HasFont) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Font);
      }
      if (HasPreviewType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PreviewType);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasDoNotPlayInline) {
        output.WriteRawTag(144, 1);
        output.WriteBool(DoNotPlayInline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasText) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (HasMatchedText) {
        output.WriteRawTag(18);
        output.WriteString(MatchedText);
      }
      if (HasCanonicalUrl) {
        output.WriteRawTag(34);
        output.WriteString(CanonicalUrl);
      }
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (HasTitle) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (HasTextArgb) {
        output.WriteRawTag(61);
        output.WriteFixed32(TextArgb);
      }
      if (HasBackgroundArgb) {
        output.WriteRawTag(69);
        output.WriteFixed32(BackgroundArgb);
      }
      if (HasFont) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Font);
      }
      if (HasPreviewType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PreviewType);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasDoNotPlayInline) {
        output.WriteRawTag(144, 1);
        output.WriteBool(DoNotPlayInline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasMatchedText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchedText);
      }
      if (HasCanonicalUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CanonicalUrl);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasTextArgb) {
        size += 1 + 4;
      }
      if (HasBackgroundArgb) {
        size += 1 + 4;
      }
      if (HasFont) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Font);
      }
      if (HasPreviewType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PreviewType);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (HasDoNotPlayInline) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtendedTextMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasMatchedText) {
        MatchedText = other.MatchedText;
      }
      if (other.HasCanonicalUrl) {
        CanonicalUrl = other.CanonicalUrl;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasTextArgb) {
        TextArgb = other.TextArgb;
      }
      if (other.HasBackgroundArgb) {
        BackgroundArgb = other.BackgroundArgb;
      }
      if (other.HasFont) {
        Font = other.Font;
      }
      if (other.HasPreviewType) {
        PreviewType = other.PreviewType;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      if (other.HasDoNotPlayInline) {
        DoNotPlayInline = other.DoNotPlayInline;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            MatchedText = input.ReadString();
            break;
          }
          case 34: {
            CanonicalUrl = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 61: {
            TextArgb = input.ReadFixed32();
            break;
          }
          case 69: {
            BackgroundArgb = input.ReadFixed32();
            break;
          }
          case 72: {
            Font = (global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE) input.ReadEnum();
            break;
          }
          case 80: {
            PreviewType = (global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) input.ReadEnum();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 144: {
            DoNotPlayInline = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            MatchedText = input.ReadString();
            break;
          }
          case 34: {
            CanonicalUrl = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 61: {
            TextArgb = input.ReadFixed32();
            break;
          }
          case 69: {
            BackgroundArgb = input.ReadFixed32();
            break;
          }
          case 72: {
            Font = (global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_FONTTYPE) input.ReadEnum();
            break;
          }
          case 80: {
            PreviewType = (global::waxnet.Internal.Proto.ExtendedTextMessage.Types.EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) input.ReadEnum();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 144: {
            DoNotPlayInline = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExtendedTextMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EXTENDED_TEXT_MESSAGE_FONTTYPE {
        [pbr::OriginalName("SANS_SERIF")] SansSerif = 0,
        [pbr::OriginalName("SERIF")] Serif = 1,
        [pbr::OriginalName("NORICAN_REGULAR")] NoricanRegular = 2,
        [pbr::OriginalName("BRYNDAN_WRITE")] BryndanWrite = 3,
        [pbr::OriginalName("BEBASNEUE_REGULAR")] BebasneueRegular = 4,
        [pbr::OriginalName("OSWALD_HEAVY")] OswaldHeavy = 5,
      }

      public enum EXTENDED_TEXT_MESSAGE_PREVIEWTYPE {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("VIDEO")] Video = 1,
      }

    }
    #endregion

  }

  internal sealed partial class DocumentMessage : pb::IMessage<DocumentMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DocumentMessage> _parser = new pb::MessageParser<DocumentMessage>(() => new DocumentMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentMessage(DocumentMessage other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      mimetype_ = other.mimetype_;
      title_ = other.title_;
      fileSha256_ = other.fileSha256_;
      fileLength_ = other.fileLength_;
      pageCount_ = other.pageCount_;
      mediaKey_ = other.mediaKey_;
      fileName_ = other.fileName_;
      fileEncSha256_ = other.fileEncSha256_;
      directPath_ = other.directPath_;
      mediaKeyTimestamp_ = other.mediaKeyTimestamp_;
      jpegThumbnail_ = other.jpegThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentMessage Clone() {
      return new DocumentMessage(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 2;
    private readonly static string MimetypeDefaultValue = "";

    private string mimetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_ ?? MimetypeDefaultValue; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mimetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMimetype {
      get { return mimetype_ != null; }
    }
    /// <summary>Clears the value of the "mimetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMimetype() {
      mimetype_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "fileSha256" field.</summary>
    public const int FileSha256FieldNumber = 4;
    private readonly static pb::ByteString FileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileSha256 {
      get { return fileSha256_ ?? FileSha256DefaultValue; }
      set {
        fileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSha256 {
      get { return fileSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSha256() {
      fileSha256_ = null;
    }

    /// <summary>Field number for the "fileLength" field.</summary>
    public const int FileLengthFieldNumber = 5;
    private readonly static ulong FileLengthDefaultValue = 0UL;

    private ulong fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FileLength {
      get { if ((_hasBits0 & 1) != 0) { return fileLength_; } else { return FileLengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileLength_ = value;
      }
    }
    /// <summary>Gets whether the "fileLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 6;
    private readonly static uint PageCountDefaultValue = 0;

    private uint pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PageCount {
      get { if ((_hasBits0 & 2) != 0) { return pageCount_; } else { return PageCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pageCount_ = value;
      }
    }
    /// <summary>Gets whether the "pageCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPageCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pageCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPageCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mediaKey" field.</summary>
    public const int MediaKeyFieldNumber = 7;
    private readonly static pb::ByteString MediaKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaKey {
      get { return mediaKey_ ?? MediaKeyDefaultValue; }
      set {
        mediaKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKey {
      get { return mediaKey_ != null; }
    }
    /// <summary>Clears the value of the "mediaKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKey() {
      mediaKey_ = null;
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 8;
    private readonly static string FileNameDefaultValue = "";

    private string fileName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_ ?? FileNameDefaultValue; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileName {
      get { return fileName_ != null; }
    }
    /// <summary>Clears the value of the "fileName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileName() {
      fileName_ = null;
    }

    /// <summary>Field number for the "fileEncSha256" field.</summary>
    public const int FileEncSha256FieldNumber = 9;
    private readonly static pb::ByteString FileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileEncSha256 {
      get { return fileEncSha256_ ?? FileEncSha256DefaultValue; }
      set {
        fileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileEncSha256 {
      get { return fileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileEncSha256() {
      fileEncSha256_ = null;
    }

    /// <summary>Field number for the "directPath" field.</summary>
    public const int DirectPathFieldNumber = 10;
    private readonly static string DirectPathDefaultValue = "";

    private string directPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DirectPath {
      get { return directPath_ ?? DirectPathDefaultValue; }
      set {
        directPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "directPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirectPath {
      get { return directPath_ != null; }
    }
    /// <summary>Clears the value of the "directPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirectPath() {
      directPath_ = null;
    }

    /// <summary>Field number for the "mediaKeyTimestamp" field.</summary>
    public const int MediaKeyTimestampFieldNumber = 11;
    private readonly static long MediaKeyTimestampDefaultValue = 0L;

    private long mediaKeyTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MediaKeyTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return mediaKeyTimestamp_; } else { return MediaKeyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mediaKeyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "mediaKeyTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKeyTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mediaKeyTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKeyTimestamp() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Mimetype != other.Mimetype) return false;
      if (Title != other.Title) return false;
      if (FileSha256 != other.FileSha256) return false;
      if (FileLength != other.FileLength) return false;
      if (PageCount != other.PageCount) return false;
      if (MediaKey != other.MediaKey) return false;
      if (FileName != other.FileName) return false;
      if (FileEncSha256 != other.FileEncSha256) return false;
      if (DirectPath != other.DirectPath) return false;
      if (MediaKeyTimestamp != other.MediaKeyTimestamp) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasMimetype) hash ^= Mimetype.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasFileSha256) hash ^= FileSha256.GetHashCode();
      if (HasFileLength) hash ^= FileLength.GetHashCode();
      if (HasPageCount) hash ^= PageCount.GetHashCode();
      if (HasMediaKey) hash ^= MediaKey.GetHashCode();
      if (HasFileName) hash ^= FileName.GetHashCode();
      if (HasFileEncSha256) hash ^= FileEncSha256.GetHashCode();
      if (HasDirectPath) hash ^= DirectPath.GetHashCode();
      if (HasMediaKeyTimestamp) hash ^= MediaKeyTimestamp.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasFileSha256) {
        output.WriteRawTag(34);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(40);
        output.WriteUInt64(FileLength);
      }
      if (HasPageCount) {
        output.WriteRawTag(48);
        output.WriteUInt32(PageCount);
      }
      if (HasMediaKey) {
        output.WriteRawTag(58);
        output.WriteBytes(MediaKey);
      }
      if (HasFileName) {
        output.WriteRawTag(66);
        output.WriteString(FileName);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(74);
        output.WriteBytes(FileEncSha256);
      }
      if (HasDirectPath) {
        output.WriteRawTag(82);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(88);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasFileSha256) {
        output.WriteRawTag(34);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(40);
        output.WriteUInt64(FileLength);
      }
      if (HasPageCount) {
        output.WriteRawTag(48);
        output.WriteUInt32(PageCount);
      }
      if (HasMediaKey) {
        output.WriteRawTag(58);
        output.WriteBytes(MediaKey);
      }
      if (HasFileName) {
        output.WriteRawTag(66);
        output.WriteString(FileName);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(74);
        output.WriteBytes(FileEncSha256);
      }
      if (HasDirectPath) {
        output.WriteRawTag(82);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(88);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasMimetype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasFileSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileSha256);
      }
      if (HasFileLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileLength);
      }
      if (HasPageCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageCount);
      }
      if (HasMediaKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MediaKey);
      }
      if (HasFileName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (HasFileEncSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileEncSha256);
      }
      if (HasDirectPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasMimetype) {
        Mimetype = other.Mimetype;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasFileSha256) {
        FileSha256 = other.FileSha256;
      }
      if (other.HasFileLength) {
        FileLength = other.FileLength;
      }
      if (other.HasPageCount) {
        PageCount = other.PageCount;
      }
      if (other.HasMediaKey) {
        MediaKey = other.MediaKey;
      }
      if (other.HasFileName) {
        FileName = other.FileName;
      }
      if (other.HasFileEncSha256) {
        FileEncSha256 = other.FileEncSha256;
      }
      if (other.HasDirectPath) {
        DirectPath = other.DirectPath;
      }
      if (other.HasMediaKeyTimestamp) {
        MediaKeyTimestamp = other.MediaKeyTimestamp;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 40: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 48: {
            PageCount = input.ReadUInt32();
            break;
          }
          case 58: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 66: {
            FileName = input.ReadString();
            break;
          }
          case 74: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 82: {
            DirectPath = input.ReadString();
            break;
          }
          case 88: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 40: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 48: {
            PageCount = input.ReadUInt32();
            break;
          }
          case 58: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 66: {
            FileName = input.ReadString();
            break;
          }
          case 74: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 82: {
            DirectPath = input.ReadString();
            break;
          }
          case 88: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class AudioMessage : pb::IMessage<AudioMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioMessage> _parser = new pb::MessageParser<AudioMessage>(() => new AudioMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioMessage(AudioMessage other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      mimetype_ = other.mimetype_;
      fileSha256_ = other.fileSha256_;
      fileLength_ = other.fileLength_;
      seconds_ = other.seconds_;
      ptt_ = other.ptt_;
      mediaKey_ = other.mediaKey_;
      fileEncSha256_ = other.fileEncSha256_;
      directPath_ = other.directPath_;
      mediaKeyTimestamp_ = other.mediaKeyTimestamp_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      streamingSidecar_ = other.streamingSidecar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioMessage Clone() {
      return new AudioMessage(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 2;
    private readonly static string MimetypeDefaultValue = "";

    private string mimetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_ ?? MimetypeDefaultValue; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mimetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMimetype {
      get { return mimetype_ != null; }
    }
    /// <summary>Clears the value of the "mimetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMimetype() {
      mimetype_ = null;
    }

    /// <summary>Field number for the "fileSha256" field.</summary>
    public const int FileSha256FieldNumber = 3;
    private readonly static pb::ByteString FileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileSha256 {
      get { return fileSha256_ ?? FileSha256DefaultValue; }
      set {
        fileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSha256 {
      get { return fileSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSha256() {
      fileSha256_ = null;
    }

    /// <summary>Field number for the "fileLength" field.</summary>
    public const int FileLengthFieldNumber = 4;
    private readonly static ulong FileLengthDefaultValue = 0UL;

    private ulong fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FileLength {
      get { if ((_hasBits0 & 1) != 0) { return fileLength_; } else { return FileLengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileLength_ = value;
      }
    }
    /// <summary>Gets whether the "fileLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 5;
    private readonly static uint SecondsDefaultValue = 0;

    private uint seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Seconds {
      get { if ((_hasBits0 & 2) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seconds_ = value;
      }
    }
    /// <summary>Gets whether the "seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ptt" field.</summary>
    public const int PttFieldNumber = 6;
    private readonly static bool PttDefaultValue = false;

    private bool ptt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ptt {
      get { if ((_hasBits0 & 4) != 0) { return ptt_; } else { return PttDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ptt_ = value;
      }
    }
    /// <summary>Gets whether the "ptt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPtt {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ptt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPtt() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mediaKey" field.</summary>
    public const int MediaKeyFieldNumber = 7;
    private readonly static pb::ByteString MediaKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaKey {
      get { return mediaKey_ ?? MediaKeyDefaultValue; }
      set {
        mediaKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKey {
      get { return mediaKey_ != null; }
    }
    /// <summary>Clears the value of the "mediaKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKey() {
      mediaKey_ = null;
    }

    /// <summary>Field number for the "fileEncSha256" field.</summary>
    public const int FileEncSha256FieldNumber = 8;
    private readonly static pb::ByteString FileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileEncSha256 {
      get { return fileEncSha256_ ?? FileEncSha256DefaultValue; }
      set {
        fileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileEncSha256 {
      get { return fileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileEncSha256() {
      fileEncSha256_ = null;
    }

    /// <summary>Field number for the "directPath" field.</summary>
    public const int DirectPathFieldNumber = 9;
    private readonly static string DirectPathDefaultValue = "";

    private string directPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DirectPath {
      get { return directPath_ ?? DirectPathDefaultValue; }
      set {
        directPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "directPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirectPath {
      get { return directPath_ != null; }
    }
    /// <summary>Clears the value of the "directPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirectPath() {
      directPath_ = null;
    }

    /// <summary>Field number for the "mediaKeyTimestamp" field.</summary>
    public const int MediaKeyTimestampFieldNumber = 10;
    private readonly static long MediaKeyTimestampDefaultValue = 0L;

    private long mediaKeyTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MediaKeyTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return mediaKeyTimestamp_; } else { return MediaKeyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mediaKeyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "mediaKeyTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKeyTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mediaKeyTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKeyTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    /// <summary>Field number for the "streamingSidecar" field.</summary>
    public const int StreamingSidecarFieldNumber = 18;
    private readonly static pb::ByteString StreamingSidecarDefaultValue = pb::ByteString.Empty;

    private pb::ByteString streamingSidecar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StreamingSidecar {
      get { return streamingSidecar_ ?? StreamingSidecarDefaultValue; }
      set {
        streamingSidecar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingSidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamingSidecar {
      get { return streamingSidecar_ != null; }
    }
    /// <summary>Clears the value of the "streamingSidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamingSidecar() {
      streamingSidecar_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Mimetype != other.Mimetype) return false;
      if (FileSha256 != other.FileSha256) return false;
      if (FileLength != other.FileLength) return false;
      if (Seconds != other.Seconds) return false;
      if (Ptt != other.Ptt) return false;
      if (MediaKey != other.MediaKey) return false;
      if (FileEncSha256 != other.FileEncSha256) return false;
      if (DirectPath != other.DirectPath) return false;
      if (MediaKeyTimestamp != other.MediaKeyTimestamp) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      if (StreamingSidecar != other.StreamingSidecar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasMimetype) hash ^= Mimetype.GetHashCode();
      if (HasFileSha256) hash ^= FileSha256.GetHashCode();
      if (HasFileLength) hash ^= FileLength.GetHashCode();
      if (HasSeconds) hash ^= Seconds.GetHashCode();
      if (HasPtt) hash ^= Ptt.GetHashCode();
      if (HasMediaKey) hash ^= MediaKey.GetHashCode();
      if (HasFileEncSha256) hash ^= FileEncSha256.GetHashCode();
      if (HasDirectPath) hash ^= DirectPath.GetHashCode();
      if (HasMediaKeyTimestamp) hash ^= MediaKeyTimestamp.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (HasStreamingSidecar) hash ^= StreamingSidecar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasFileSha256) {
        output.WriteRawTag(26);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(32);
        output.WriteUInt64(FileLength);
      }
      if (HasSeconds) {
        output.WriteRawTag(40);
        output.WriteUInt32(Seconds);
      }
      if (HasPtt) {
        output.WriteRawTag(48);
        output.WriteBool(Ptt);
      }
      if (HasMediaKey) {
        output.WriteRawTag(58);
        output.WriteBytes(MediaKey);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(66);
        output.WriteBytes(FileEncSha256);
      }
      if (HasDirectPath) {
        output.WriteRawTag(74);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasStreamingSidecar) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(StreamingSidecar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasFileSha256) {
        output.WriteRawTag(26);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(32);
        output.WriteUInt64(FileLength);
      }
      if (HasSeconds) {
        output.WriteRawTag(40);
        output.WriteUInt32(Seconds);
      }
      if (HasPtt) {
        output.WriteRawTag(48);
        output.WriteBool(Ptt);
      }
      if (HasMediaKey) {
        output.WriteRawTag(58);
        output.WriteBytes(MediaKey);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(66);
        output.WriteBytes(FileEncSha256);
      }
      if (HasDirectPath) {
        output.WriteRawTag(74);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasStreamingSidecar) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(StreamingSidecar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasMimetype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (HasFileSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileSha256);
      }
      if (HasFileLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileLength);
      }
      if (HasSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seconds);
      }
      if (HasPtt) {
        size += 1 + 1;
      }
      if (HasMediaKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MediaKey);
      }
      if (HasFileEncSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileEncSha256);
      }
      if (HasDirectPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MediaKeyTimestamp);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (HasStreamingSidecar) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(StreamingSidecar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasMimetype) {
        Mimetype = other.Mimetype;
      }
      if (other.HasFileSha256) {
        FileSha256 = other.FileSha256;
      }
      if (other.HasFileLength) {
        FileLength = other.FileLength;
      }
      if (other.HasSeconds) {
        Seconds = other.Seconds;
      }
      if (other.HasPtt) {
        Ptt = other.Ptt;
      }
      if (other.HasMediaKey) {
        MediaKey = other.MediaKey;
      }
      if (other.HasFileEncSha256) {
        FileEncSha256 = other.FileEncSha256;
      }
      if (other.HasDirectPath) {
        DirectPath = other.DirectPath;
      }
      if (other.HasMediaKeyTimestamp) {
        MediaKeyTimestamp = other.MediaKeyTimestamp;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      if (other.HasStreamingSidecar) {
        StreamingSidecar = other.StreamingSidecar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 32: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 40: {
            Seconds = input.ReadUInt32();
            break;
          }
          case 48: {
            Ptt = input.ReadBool();
            break;
          }
          case 58: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 66: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 74: {
            DirectPath = input.ReadString();
            break;
          }
          case 80: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 146: {
            StreamingSidecar = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 32: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 40: {
            Seconds = input.ReadUInt32();
            break;
          }
          case 48: {
            Ptt = input.ReadBool();
            break;
          }
          case 58: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 66: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 74: {
            DirectPath = input.ReadString();
            break;
          }
          case 80: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 146: {
            StreamingSidecar = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class VideoMessage : pb::IMessage<VideoMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VideoMessage> _parser = new pb::MessageParser<VideoMessage>(() => new VideoMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoMessage(VideoMessage other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      mimetype_ = other.mimetype_;
      fileSha256_ = other.fileSha256_;
      fileLength_ = other.fileLength_;
      seconds_ = other.seconds_;
      mediaKey_ = other.mediaKey_;
      caption_ = other.caption_;
      gifPlayback_ = other.gifPlayback_;
      height_ = other.height_;
      width_ = other.width_;
      fileEncSha256_ = other.fileEncSha256_;
      interactiveAnnotations_ = other.interactiveAnnotations_.Clone();
      directPath_ = other.directPath_;
      mediaKeyTimestamp_ = other.mediaKeyTimestamp_;
      jpegThumbnail_ = other.jpegThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      streamingSidecar_ = other.streamingSidecar_;
      gifAttribution_ = other.gifAttribution_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoMessage Clone() {
      return new VideoMessage(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 2;
    private readonly static string MimetypeDefaultValue = "";

    private string mimetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_ ?? MimetypeDefaultValue; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mimetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMimetype {
      get { return mimetype_ != null; }
    }
    /// <summary>Clears the value of the "mimetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMimetype() {
      mimetype_ = null;
    }

    /// <summary>Field number for the "fileSha256" field.</summary>
    public const int FileSha256FieldNumber = 3;
    private readonly static pb::ByteString FileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileSha256 {
      get { return fileSha256_ ?? FileSha256DefaultValue; }
      set {
        fileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSha256 {
      get { return fileSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSha256() {
      fileSha256_ = null;
    }

    /// <summary>Field number for the "fileLength" field.</summary>
    public const int FileLengthFieldNumber = 4;
    private readonly static ulong FileLengthDefaultValue = 0UL;

    private ulong fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FileLength {
      get { if ((_hasBits0 & 1) != 0) { return fileLength_; } else { return FileLengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileLength_ = value;
      }
    }
    /// <summary>Gets whether the "fileLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 5;
    private readonly static uint SecondsDefaultValue = 0;

    private uint seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Seconds {
      get { if ((_hasBits0 & 2) != 0) { return seconds_; } else { return SecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seconds_ = value;
      }
    }
    /// <summary>Gets whether the "seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSeconds() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mediaKey" field.</summary>
    public const int MediaKeyFieldNumber = 6;
    private readonly static pb::ByteString MediaKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaKey {
      get { return mediaKey_ ?? MediaKeyDefaultValue; }
      set {
        mediaKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKey {
      get { return mediaKey_ != null; }
    }
    /// <summary>Clears the value of the "mediaKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKey() {
      mediaKey_ = null;
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 7;
    private readonly static string CaptionDefaultValue = "";

    private string caption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_ ?? CaptionDefaultValue; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCaption {
      get { return caption_ != null; }
    }
    /// <summary>Clears the value of the "caption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCaption() {
      caption_ = null;
    }

    /// <summary>Field number for the "gifPlayback" field.</summary>
    public const int GifPlaybackFieldNumber = 8;
    private readonly static bool GifPlaybackDefaultValue = false;

    private bool gifPlayback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GifPlayback {
      get { if ((_hasBits0 & 4) != 0) { return gifPlayback_; } else { return GifPlaybackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gifPlayback_ = value;
      }
    }
    /// <summary>Gets whether the "gifPlayback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGifPlayback {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gifPlayback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGifPlayback() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 9;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 8;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeight {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeight() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 10;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { if ((_hasBits0 & 16) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWidth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWidth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "fileEncSha256" field.</summary>
    public const int FileEncSha256FieldNumber = 11;
    private readonly static pb::ByteString FileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileEncSha256 {
      get { return fileEncSha256_ ?? FileEncSha256DefaultValue; }
      set {
        fileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileEncSha256 {
      get { return fileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileEncSha256() {
      fileEncSha256_ = null;
    }

    /// <summary>Field number for the "interactiveAnnotations" field.</summary>
    public const int InteractiveAnnotationsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.InteractiveAnnotation> _repeated_interactiveAnnotations_codec
        = pb::FieldCodec.ForMessage(98, global::waxnet.Internal.Proto.InteractiveAnnotation.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.InteractiveAnnotation> interactiveAnnotations_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.InteractiveAnnotation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.InteractiveAnnotation> InteractiveAnnotations {
      get { return interactiveAnnotations_; }
    }

    /// <summary>Field number for the "directPath" field.</summary>
    public const int DirectPathFieldNumber = 13;
    private readonly static string DirectPathDefaultValue = "";

    private string directPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DirectPath {
      get { return directPath_ ?? DirectPathDefaultValue; }
      set {
        directPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "directPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirectPath {
      get { return directPath_ != null; }
    }
    /// <summary>Clears the value of the "directPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirectPath() {
      directPath_ = null;
    }

    /// <summary>Field number for the "mediaKeyTimestamp" field.</summary>
    public const int MediaKeyTimestampFieldNumber = 14;
    private readonly static long MediaKeyTimestampDefaultValue = 0L;

    private long mediaKeyTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MediaKeyTimestamp {
      get { if ((_hasBits0 & 32) != 0) { return mediaKeyTimestamp_; } else { return MediaKeyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 32;
        mediaKeyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "mediaKeyTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKeyTimestamp {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "mediaKeyTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKeyTimestamp() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    /// <summary>Field number for the "streamingSidecar" field.</summary>
    public const int StreamingSidecarFieldNumber = 18;
    private readonly static pb::ByteString StreamingSidecarDefaultValue = pb::ByteString.Empty;

    private pb::ByteString streamingSidecar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StreamingSidecar {
      get { return streamingSidecar_ ?? StreamingSidecarDefaultValue; }
      set {
        streamingSidecar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "streamingSidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamingSidecar {
      get { return streamingSidecar_ != null; }
    }
    /// <summary>Clears the value of the "streamingSidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamingSidecar() {
      streamingSidecar_ = null;
    }

    /// <summary>Field number for the "gifAttribution" field.</summary>
    public const int GifAttributionFieldNumber = 19;
    private readonly static global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION GifAttributionDefaultValue = global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION.None;

    private global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION gifAttribution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION GifAttribution {
      get { if ((_hasBits0 & 64) != 0) { return gifAttribution_; } else { return GifAttributionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        gifAttribution_ = value;
      }
    }
    /// <summary>Gets whether the "gifAttribution" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGifAttribution {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "gifAttribution" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGifAttribution() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Mimetype != other.Mimetype) return false;
      if (FileSha256 != other.FileSha256) return false;
      if (FileLength != other.FileLength) return false;
      if (Seconds != other.Seconds) return false;
      if (MediaKey != other.MediaKey) return false;
      if (Caption != other.Caption) return false;
      if (GifPlayback != other.GifPlayback) return false;
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if (FileEncSha256 != other.FileEncSha256) return false;
      if(!interactiveAnnotations_.Equals(other.interactiveAnnotations_)) return false;
      if (DirectPath != other.DirectPath) return false;
      if (MediaKeyTimestamp != other.MediaKeyTimestamp) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      if (StreamingSidecar != other.StreamingSidecar) return false;
      if (GifAttribution != other.GifAttribution) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasMimetype) hash ^= Mimetype.GetHashCode();
      if (HasFileSha256) hash ^= FileSha256.GetHashCode();
      if (HasFileLength) hash ^= FileLength.GetHashCode();
      if (HasSeconds) hash ^= Seconds.GetHashCode();
      if (HasMediaKey) hash ^= MediaKey.GetHashCode();
      if (HasCaption) hash ^= Caption.GetHashCode();
      if (HasGifPlayback) hash ^= GifPlayback.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasFileEncSha256) hash ^= FileEncSha256.GetHashCode();
      hash ^= interactiveAnnotations_.GetHashCode();
      if (HasDirectPath) hash ^= DirectPath.GetHashCode();
      if (HasMediaKeyTimestamp) hash ^= MediaKeyTimestamp.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (HasStreamingSidecar) hash ^= StreamingSidecar.GetHashCode();
      if (HasGifAttribution) hash ^= GifAttribution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasFileSha256) {
        output.WriteRawTag(26);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(32);
        output.WriteUInt64(FileLength);
      }
      if (HasSeconds) {
        output.WriteRawTag(40);
        output.WriteUInt32(Seconds);
      }
      if (HasMediaKey) {
        output.WriteRawTag(50);
        output.WriteBytes(MediaKey);
      }
      if (HasCaption) {
        output.WriteRawTag(58);
        output.WriteString(Caption);
      }
      if (HasGifPlayback) {
        output.WriteRawTag(64);
        output.WriteBool(GifPlayback);
      }
      if (HasHeight) {
        output.WriteRawTag(72);
        output.WriteUInt32(Height);
      }
      if (HasWidth) {
        output.WriteRawTag(80);
        output.WriteUInt32(Width);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(90);
        output.WriteBytes(FileEncSha256);
      }
      interactiveAnnotations_.WriteTo(output, _repeated_interactiveAnnotations_codec);
      if (HasDirectPath) {
        output.WriteRawTag(106);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(112);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasStreamingSidecar) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(StreamingSidecar);
      }
      if (HasGifAttribution) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) GifAttribution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasMimetype) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (HasFileSha256) {
        output.WriteRawTag(26);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(32);
        output.WriteUInt64(FileLength);
      }
      if (HasSeconds) {
        output.WriteRawTag(40);
        output.WriteUInt32(Seconds);
      }
      if (HasMediaKey) {
        output.WriteRawTag(50);
        output.WriteBytes(MediaKey);
      }
      if (HasCaption) {
        output.WriteRawTag(58);
        output.WriteString(Caption);
      }
      if (HasGifPlayback) {
        output.WriteRawTag(64);
        output.WriteBool(GifPlayback);
      }
      if (HasHeight) {
        output.WriteRawTag(72);
        output.WriteUInt32(Height);
      }
      if (HasWidth) {
        output.WriteRawTag(80);
        output.WriteUInt32(Width);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(90);
        output.WriteBytes(FileEncSha256);
      }
      interactiveAnnotations_.WriteTo(ref output, _repeated_interactiveAnnotations_codec);
      if (HasDirectPath) {
        output.WriteRawTag(106);
        output.WriteString(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(112);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (HasStreamingSidecar) {
        output.WriteRawTag(146, 1);
        output.WriteBytes(StreamingSidecar);
      }
      if (HasGifAttribution) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) GifAttribution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasMimetype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (HasFileSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileSha256);
      }
      if (HasFileLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileLength);
      }
      if (HasSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seconds);
      }
      if (HasMediaKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MediaKey);
      }
      if (HasCaption) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (HasGifPlayback) {
        size += 1 + 1;
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasFileEncSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileEncSha256);
      }
      size += interactiveAnnotations_.CalculateSize(_repeated_interactiveAnnotations_codec);
      if (HasDirectPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirectPath);
      }
      if (HasMediaKeyTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MediaKeyTimestamp);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (HasStreamingSidecar) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(StreamingSidecar);
      }
      if (HasGifAttribution) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GifAttribution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasMimetype) {
        Mimetype = other.Mimetype;
      }
      if (other.HasFileSha256) {
        FileSha256 = other.FileSha256;
      }
      if (other.HasFileLength) {
        FileLength = other.FileLength;
      }
      if (other.HasSeconds) {
        Seconds = other.Seconds;
      }
      if (other.HasMediaKey) {
        MediaKey = other.MediaKey;
      }
      if (other.HasCaption) {
        Caption = other.Caption;
      }
      if (other.HasGifPlayback) {
        GifPlayback = other.GifPlayback;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasFileEncSha256) {
        FileEncSha256 = other.FileEncSha256;
      }
      interactiveAnnotations_.Add(other.interactiveAnnotations_);
      if (other.HasDirectPath) {
        DirectPath = other.DirectPath;
      }
      if (other.HasMediaKeyTimestamp) {
        MediaKeyTimestamp = other.MediaKeyTimestamp;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      if (other.HasStreamingSidecar) {
        StreamingSidecar = other.StreamingSidecar;
      }
      if (other.HasGifAttribution) {
        GifAttribution = other.GifAttribution;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 32: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 40: {
            Seconds = input.ReadUInt32();
            break;
          }
          case 50: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 58: {
            Caption = input.ReadString();
            break;
          }
          case 64: {
            GifPlayback = input.ReadBool();
            break;
          }
          case 72: {
            Height = input.ReadUInt32();
            break;
          }
          case 80: {
            Width = input.ReadUInt32();
            break;
          }
          case 90: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 98: {
            interactiveAnnotations_.AddEntriesFrom(input, _repeated_interactiveAnnotations_codec);
            break;
          }
          case 106: {
            DirectPath = input.ReadString();
            break;
          }
          case 112: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 146: {
            StreamingSidecar = input.ReadBytes();
            break;
          }
          case 152: {
            GifAttribution = (global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
          case 26: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 32: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 40: {
            Seconds = input.ReadUInt32();
            break;
          }
          case 50: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 58: {
            Caption = input.ReadString();
            break;
          }
          case 64: {
            GifPlayback = input.ReadBool();
            break;
          }
          case 72: {
            Height = input.ReadUInt32();
            break;
          }
          case 80: {
            Width = input.ReadUInt32();
            break;
          }
          case 90: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 98: {
            interactiveAnnotations_.AddEntriesFrom(ref input, _repeated_interactiveAnnotations_codec);
            break;
          }
          case 106: {
            DirectPath = input.ReadString();
            break;
          }
          case 112: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 146: {
            StreamingSidecar = input.ReadBytes();
            break;
          }
          case 152: {
            GifAttribution = (global::waxnet.Internal.Proto.VideoMessage.Types.VIDEO_MESSAGE_ATTRIBUTION) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VideoMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum VIDEO_MESSAGE_ATTRIBUTION {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("GIPHY")] Giphy = 1,
        [pbr::OriginalName("TENOR")] Tenor = 2,
      }

    }
    #endregion

  }

  internal sealed partial class Call : pb::IMessage<Call>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Call> _parser = new pb::MessageParser<Call>(() => new Call());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Call> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call(Call other) : this() {
      callKey_ = other.callKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call Clone() {
      return new Call(this);
    }

    /// <summary>Field number for the "callKey" field.</summary>
    public const int CallKeyFieldNumber = 1;
    private readonly static pb::ByteString CallKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString callKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CallKey {
      get { return callKey_ ?? CallKeyDefaultValue; }
      set {
        callKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "callKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCallKey {
      get { return callKey_ != null; }
    }
    /// <summary>Clears the value of the "callKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallKey() {
      callKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Call);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Call other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallKey != other.CallKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCallKey) hash ^= CallKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCallKey) {
        output.WriteRawTag(10);
        output.WriteBytes(CallKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCallKey) {
        output.WriteRawTag(10);
        output.WriteBytes(CallKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCallKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CallKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Call other) {
      if (other == null) {
        return;
      }
      if (other.HasCallKey) {
        CallKey = other.CallKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CallKey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CallKey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class Chat : pb::IMessage<Chat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Chat> _parser = new pb::MessageParser<Chat>(() => new Chat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat(Chat other) : this() {
      displayName_ = other.displayName_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat Clone() {
      return new Chat(this);
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayName) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayName) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (HasId) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chat other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ProtocolMessage : pb::IMessage<ProtocolMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtocolMessage> _parser = new pb::MessageParser<ProtocolMessage>(() => new ProtocolMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtocolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtocolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtocolMessage(ProtocolMessage other) : this() {
      _hasBits0 = other._hasBits0;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      type_ = other.type_;
      ephemeralExpiration_ = other.ephemeralExpiration_;
      ephemeralSettingTimestamp_ = other.ephemeralSettingTimestamp_;
      historySyncNotification_ = other.historySyncNotification_ != null ? other.historySyncNotification_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtocolMessage Clone() {
      return new ProtocolMessage(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::waxnet.Internal.Proto.MessageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE TypeDefaultValue = global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE.Revoke;

    private global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ephemeralExpiration" field.</summary>
    public const int EphemeralExpirationFieldNumber = 4;
    private readonly static uint EphemeralExpirationDefaultValue = 0;

    private uint ephemeralExpiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EphemeralExpiration {
      get { if ((_hasBits0 & 2) != 0) { return ephemeralExpiration_; } else { return EphemeralExpirationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ephemeralExpiration_ = value;
      }
    }
    /// <summary>Gets whether the "ephemeralExpiration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEphemeralExpiration {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ephemeralExpiration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEphemeralExpiration() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ephemeralSettingTimestamp" field.</summary>
    public const int EphemeralSettingTimestampFieldNumber = 5;
    private readonly static long EphemeralSettingTimestampDefaultValue = 0L;

    private long ephemeralSettingTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EphemeralSettingTimestamp {
      get { if ((_hasBits0 & 4) != 0) { return ephemeralSettingTimestamp_; } else { return EphemeralSettingTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ephemeralSettingTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "ephemeralSettingTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEphemeralSettingTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ephemeralSettingTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEphemeralSettingTimestamp() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "historySyncNotification" field.</summary>
    public const int HistorySyncNotificationFieldNumber = 6;
    private global::waxnet.Internal.Proto.HistorySyncNotification historySyncNotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HistorySyncNotification HistorySyncNotification {
      get { return historySyncNotification_; }
      set {
        historySyncNotification_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtocolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtocolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (Type != other.Type) return false;
      if (EphemeralExpiration != other.EphemeralExpiration) return false;
      if (EphemeralSettingTimestamp != other.EphemeralSettingTimestamp) return false;
      if (!object.Equals(HistorySyncNotification, other.HistorySyncNotification)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasEphemeralExpiration) hash ^= EphemeralExpiration.GetHashCode();
      if (HasEphemeralSettingTimestamp) hash ^= EphemeralSettingTimestamp.GetHashCode();
      if (historySyncNotification_ != null) hash ^= HistorySyncNotification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasEphemeralExpiration) {
        output.WriteRawTag(32);
        output.WriteUInt32(EphemeralExpiration);
      }
      if (HasEphemeralSettingTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(EphemeralSettingTimestamp);
      }
      if (historySyncNotification_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HistorySyncNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasEphemeralExpiration) {
        output.WriteRawTag(32);
        output.WriteUInt32(EphemeralExpiration);
      }
      if (HasEphemeralSettingTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(EphemeralSettingTimestamp);
      }
      if (historySyncNotification_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HistorySyncNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasEphemeralExpiration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EphemeralExpiration);
      }
      if (HasEphemeralSettingTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EphemeralSettingTimestamp);
      }
      if (historySyncNotification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HistorySyncNotification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtocolMessage other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::waxnet.Internal.Proto.MessageKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasEphemeralExpiration) {
        EphemeralExpiration = other.EphemeralExpiration;
      }
      if (other.HasEphemeralSettingTimestamp) {
        EphemeralSettingTimestamp = other.EphemeralSettingTimestamp;
      }
      if (other.historySyncNotification_ != null) {
        if (historySyncNotification_ == null) {
          HistorySyncNotification = new global::waxnet.Internal.Proto.HistorySyncNotification();
        }
        HistorySyncNotification.MergeFrom(other.HistorySyncNotification);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 16: {
            Type = (global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE) input.ReadEnum();
            break;
          }
          case 32: {
            EphemeralExpiration = input.ReadUInt32();
            break;
          }
          case 40: {
            EphemeralSettingTimestamp = input.ReadInt64();
            break;
          }
          case 50: {
            if (historySyncNotification_ == null) {
              HistorySyncNotification = new global::waxnet.Internal.Proto.HistorySyncNotification();
            }
            input.ReadMessage(HistorySyncNotification);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 16: {
            Type = (global::waxnet.Internal.Proto.ProtocolMessage.Types.PROTOCOL_MESSAGE_TYPE) input.ReadEnum();
            break;
          }
          case 32: {
            EphemeralExpiration = input.ReadUInt32();
            break;
          }
          case 40: {
            EphemeralSettingTimestamp = input.ReadInt64();
            break;
          }
          case 50: {
            if (historySyncNotification_ == null) {
              HistorySyncNotification = new global::waxnet.Internal.Proto.HistorySyncNotification();
            }
            input.ReadMessage(HistorySyncNotification);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ProtocolMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum PROTOCOL_MESSAGE_TYPE {
        [pbr::OriginalName("REVOKE")] Revoke = 0,
        [pbr::OriginalName("EPHEMERAL_SETTING")] EphemeralSetting = 3,
        [pbr::OriginalName("EPHEMERAL_SYNC_RESPONSE")] EphemeralSyncResponse = 4,
        [pbr::OriginalName("HISTORY_SYNC_NOTIFICATION")] HistorySyncNotification = 5,
      }

    }
    #endregion

  }

  internal sealed partial class HistorySyncNotification : pb::IMessage<HistorySyncNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistorySyncNotification> _parser = new pb::MessageParser<HistorySyncNotification>(() => new HistorySyncNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistorySyncNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistorySyncNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistorySyncNotification(HistorySyncNotification other) : this() {
      _hasBits0 = other._hasBits0;
      fileSha256_ = other.fileSha256_;
      fileLength_ = other.fileLength_;
      mediaKey_ = other.mediaKey_;
      fileEncSha256_ = other.fileEncSha256_;
      directPath_ = other.directPath_;
      syncType_ = other.syncType_;
      chunkOrder_ = other.chunkOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistorySyncNotification Clone() {
      return new HistorySyncNotification(this);
    }

    /// <summary>Field number for the "fileSha256" field.</summary>
    public const int FileSha256FieldNumber = 1;
    private readonly static pb::ByteString FileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileSha256 {
      get { return fileSha256_ ?? FileSha256DefaultValue; }
      set {
        fileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSha256 {
      get { return fileSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSha256() {
      fileSha256_ = null;
    }

    /// <summary>Field number for the "fileLength" field.</summary>
    public const int FileLengthFieldNumber = 2;
    private readonly static ulong FileLengthDefaultValue = 0UL;

    private ulong fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FileLength {
      get { if ((_hasBits0 & 1) != 0) { return fileLength_; } else { return FileLengthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fileLength_ = value;
      }
    }
    /// <summary>Gets whether the "fileLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileLength {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fileLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileLength() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mediaKey" field.</summary>
    public const int MediaKeyFieldNumber = 3;
    private readonly static pb::ByteString MediaKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaKey {
      get { return mediaKey_ ?? MediaKeyDefaultValue; }
      set {
        mediaKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKey {
      get { return mediaKey_ != null; }
    }
    /// <summary>Clears the value of the "mediaKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKey() {
      mediaKey_ = null;
    }

    /// <summary>Field number for the "fileEncSha256" field.</summary>
    public const int FileEncSha256FieldNumber = 4;
    private readonly static pb::ByteString FileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileEncSha256 {
      get { return fileEncSha256_ ?? FileEncSha256DefaultValue; }
      set {
        fileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileEncSha256 {
      get { return fileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileEncSha256() {
      fileEncSha256_ = null;
    }

    /// <summary>Field number for the "directPath" field.</summary>
    public const int DirectPathFieldNumber = 5;
    private readonly static string DirectPathDefaultValue = "";

    private string directPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DirectPath {
      get { return directPath_ ?? DirectPathDefaultValue; }
      set {
        directPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "directPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirectPath {
      get { return directPath_ != null; }
    }
    /// <summary>Clears the value of the "directPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirectPath() {
      directPath_ = null;
    }

    /// <summary>Field number for the "syncType" field.</summary>
    public const int SyncTypeFieldNumber = 6;
    private readonly static global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE SyncTypeDefaultValue = global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE.InitialBootstrap;

    private global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE syncType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE SyncType {
      get { if ((_hasBits0 & 2) != 0) { return syncType_; } else { return SyncTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        syncType_ = value;
      }
    }
    /// <summary>Gets whether the "syncType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSyncType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "syncType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSyncType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chunkOrder" field.</summary>
    public const int ChunkOrderFieldNumber = 7;
    private readonly static uint ChunkOrderDefaultValue = 0;

    private uint chunkOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ChunkOrder {
      get { if ((_hasBits0 & 4) != 0) { return chunkOrder_; } else { return ChunkOrderDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chunkOrder_ = value;
      }
    }
    /// <summary>Gets whether the "chunkOrder" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChunkOrder {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chunkOrder" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChunkOrder() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistorySyncNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistorySyncNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileSha256 != other.FileSha256) return false;
      if (FileLength != other.FileLength) return false;
      if (MediaKey != other.MediaKey) return false;
      if (FileEncSha256 != other.FileEncSha256) return false;
      if (DirectPath != other.DirectPath) return false;
      if (SyncType != other.SyncType) return false;
      if (ChunkOrder != other.ChunkOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFileSha256) hash ^= FileSha256.GetHashCode();
      if (HasFileLength) hash ^= FileLength.GetHashCode();
      if (HasMediaKey) hash ^= MediaKey.GetHashCode();
      if (HasFileEncSha256) hash ^= FileEncSha256.GetHashCode();
      if (HasDirectPath) hash ^= DirectPath.GetHashCode();
      if (HasSyncType) hash ^= SyncType.GetHashCode();
      if (HasChunkOrder) hash ^= ChunkOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFileSha256) {
        output.WriteRawTag(10);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(16);
        output.WriteUInt64(FileLength);
      }
      if (HasMediaKey) {
        output.WriteRawTag(26);
        output.WriteBytes(MediaKey);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(34);
        output.WriteBytes(FileEncSha256);
      }
      if (HasDirectPath) {
        output.WriteRawTag(42);
        output.WriteString(DirectPath);
      }
      if (HasSyncType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SyncType);
      }
      if (HasChunkOrder) {
        output.WriteRawTag(56);
        output.WriteUInt32(ChunkOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFileSha256) {
        output.WriteRawTag(10);
        output.WriteBytes(FileSha256);
      }
      if (HasFileLength) {
        output.WriteRawTag(16);
        output.WriteUInt64(FileLength);
      }
      if (HasMediaKey) {
        output.WriteRawTag(26);
        output.WriteBytes(MediaKey);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(34);
        output.WriteBytes(FileEncSha256);
      }
      if (HasDirectPath) {
        output.WriteRawTag(42);
        output.WriteString(DirectPath);
      }
      if (HasSyncType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SyncType);
      }
      if (HasChunkOrder) {
        output.WriteRawTag(56);
        output.WriteUInt32(ChunkOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFileSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileSha256);
      }
      if (HasFileLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileLength);
      }
      if (HasMediaKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MediaKey);
      }
      if (HasFileEncSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileEncSha256);
      }
      if (HasDirectPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirectPath);
      }
      if (HasSyncType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SyncType);
      }
      if (HasChunkOrder) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChunkOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistorySyncNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasFileSha256) {
        FileSha256 = other.FileSha256;
      }
      if (other.HasFileLength) {
        FileLength = other.FileLength;
      }
      if (other.HasMediaKey) {
        MediaKey = other.MediaKey;
      }
      if (other.HasFileEncSha256) {
        FileEncSha256 = other.FileEncSha256;
      }
      if (other.HasDirectPath) {
        DirectPath = other.DirectPath;
      }
      if (other.HasSyncType) {
        SyncType = other.SyncType;
      }
      if (other.HasChunkOrder) {
        ChunkOrder = other.ChunkOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 16: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 26: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 34: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 42: {
            DirectPath = input.ReadString();
            break;
          }
          case 48: {
            SyncType = (global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) input.ReadEnum();
            break;
          }
          case 56: {
            ChunkOrder = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 16: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 26: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 34: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 42: {
            DirectPath = input.ReadString();
            break;
          }
          case 48: {
            SyncType = (global::waxnet.Internal.Proto.HistorySyncNotification.Types.HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) input.ReadEnum();
            break;
          }
          case 56: {
            ChunkOrder = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the HistorySyncNotification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE {
        [pbr::OriginalName("INITIAL_BOOTSTRAP")] InitialBootstrap = 0,
        [pbr::OriginalName("INITIAL_STATUS_V3")] InitialStatusV3 = 1,
        [pbr::OriginalName("FULL")] Full = 2,
        [pbr::OriginalName("RECENT")] Recent = 3,
      }

    }
    #endregion

  }

  internal sealed partial class ContactsArrayMessage : pb::IMessage<ContactsArrayMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContactsArrayMessage> _parser = new pb::MessageParser<ContactsArrayMessage>(() => new ContactsArrayMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContactsArrayMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactsArrayMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactsArrayMessage(ContactsArrayMessage other) : this() {
      displayName_ = other.displayName_;
      contacts_ = other.contacts_.Clone();
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactsArrayMessage Clone() {
      return new ContactsArrayMessage(this);
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private readonly static string DisplayNameDefaultValue = "";

    private string displayName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_ ?? DisplayNameDefaultValue; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "displayName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDisplayName {
      get { return displayName_ != null; }
    }
    /// <summary>Clears the value of the "displayName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDisplayName() {
      displayName_ = null;
    }

    /// <summary>Field number for the "contacts" field.</summary>
    public const int ContactsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.ContactMessage> _repeated_contacts_codec
        = pb::FieldCodec.ForMessage(18, global::waxnet.Internal.Proto.ContactMessage.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.ContactMessage> contacts_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.ContactMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.ContactMessage> Contacts {
      get { return contacts_; }
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContactsArrayMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContactsArrayMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if(!contacts_.Equals(other.contacts_)) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayName) hash ^= DisplayName.GetHashCode();
      hash ^= contacts_.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayName) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      contacts_.WriteTo(output, _repeated_contacts_codec);
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayName) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      contacts_.WriteTo(ref output, _repeated_contacts_codec);
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += contacts_.CalculateSize(_repeated_contacts_codec);
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContactsArrayMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      contacts_.Add(other.contacts_);
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            contacts_.AddEntriesFrom(input, _repeated_contacts_codec);
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            contacts_.AddEntriesFrom(ref input, _repeated_contacts_codec);
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HSMCurrency : pb::IMessage<HSMCurrency>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HSMCurrency> _parser = new pb::MessageParser<HSMCurrency>(() => new HSMCurrency());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HSMCurrency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMCurrency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMCurrency(HSMCurrency other) : this() {
      _hasBits0 = other._hasBits0;
      currencyCode_ = other.currencyCode_;
      amount1000_ = other.amount1000_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMCurrency Clone() {
      return new HSMCurrency(this);
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 1;
    private readonly static string CurrencyCodeDefaultValue = "";

    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? CurrencyCodeDefaultValue; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currencyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "amount1000" field.</summary>
    public const int Amount1000FieldNumber = 2;
    private readonly static long Amount1000DefaultValue = 0L;

    private long amount1000_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount1000 {
      get { if ((_hasBits0 & 1) != 0) { return amount1000_; } else { return Amount1000DefaultValue; } }
      set {
        _hasBits0 |= 1;
        amount1000_ = value;
      }
    }
    /// <summary>Gets whether the "amount1000" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAmount1000 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "amount1000" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAmount1000() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HSMCurrency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HSMCurrency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyCode != other.CurrencyCode) return false;
      if (Amount1000 != other.Amount1000) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (HasAmount1000) hash ^= Amount1000.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCurrencyCode) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyCode);
      }
      if (HasAmount1000) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount1000);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCurrencyCode) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyCode);
      }
      if (HasAmount1000) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount1000);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (HasAmount1000) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount1000);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HSMCurrency other) {
      if (other == null) {
        return;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.HasAmount1000) {
        Amount1000 = other.Amount1000;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 16: {
            Amount1000 = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 16: {
            Amount1000 = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HSMDateTimeComponent : pb::IMessage<HSMDateTimeComponent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HSMDateTimeComponent> _parser = new pb::MessageParser<HSMDateTimeComponent>(() => new HSMDateTimeComponent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HSMDateTimeComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTimeComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTimeComponent(HSMDateTimeComponent other) : this() {
      _hasBits0 = other._hasBits0;
      dayOfWeek_ = other.dayOfWeek_;
      year_ = other.year_;
      month_ = other.month_;
      dayOfMonth_ = other.dayOfMonth_;
      hour_ = other.hour_;
      minute_ = other.minute_;
      calendar_ = other.calendar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTimeComponent Clone() {
      return new HSMDateTimeComponent(this);
    }

    /// <summary>Field number for the "dayOfWeek" field.</summary>
    public const int DayOfWeekFieldNumber = 1;
    private readonly static global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE DayOfWeekDefaultValue = global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE.Monday;

    private global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE dayOfWeek_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE DayOfWeek {
      get { if ((_hasBits0 & 1) != 0) { return dayOfWeek_; } else { return DayOfWeekDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dayOfWeek_ = value;
      }
    }
    /// <summary>Gets whether the "dayOfWeek" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDayOfWeek {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dayOfWeek" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDayOfWeek() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private readonly static uint YearDefaultValue = 0;

    private uint year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Year {
      get { if ((_hasBits0 & 2) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 2;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasYear {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearYear() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 3;
    private readonly static uint MonthDefaultValue = 0;

    private uint month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Month {
      get { if ((_hasBits0 & 4) != 0) { return month_; } else { return MonthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        month_ = value;
      }
    }
    /// <summary>Gets whether the "month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMonth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMonth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "dayOfMonth" field.</summary>
    public const int DayOfMonthFieldNumber = 4;
    private readonly static uint DayOfMonthDefaultValue = 0;

    private uint dayOfMonth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DayOfMonth {
      get { if ((_hasBits0 & 8) != 0) { return dayOfMonth_; } else { return DayOfMonthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        dayOfMonth_ = value;
      }
    }
    /// <summary>Gets whether the "dayOfMonth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDayOfMonth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "dayOfMonth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDayOfMonth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 5;
    private readonly static uint HourDefaultValue = 0;

    private uint hour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hour {
      get { if ((_hasBits0 & 16) != 0) { return hour_; } else { return HourDefaultValue; } }
      set {
        _hasBits0 |= 16;
        hour_ = value;
      }
    }
    /// <summary>Gets whether the "hour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHour {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "hour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHour() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 6;
    private readonly static uint MinuteDefaultValue = 0;

    private uint minute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Minute {
      get { if ((_hasBits0 & 32) != 0) { return minute_; } else { return MinuteDefaultValue; } }
      set {
        _hasBits0 |= 32;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinute {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinute() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "calendar" field.</summary>
    public const int CalendarFieldNumber = 7;
    private readonly static global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE CalendarDefaultValue = global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE.Gregorian;

    private global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE calendar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE Calendar {
      get { if ((_hasBits0 & 64) != 0) { return calendar_; } else { return CalendarDefaultValue; } }
      set {
        _hasBits0 |= 64;
        calendar_ = value;
      }
    }
    /// <summary>Gets whether the "calendar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCalendar {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "calendar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCalendar() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HSMDateTimeComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HSMDateTimeComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DayOfWeek != other.DayOfWeek) return false;
      if (Year != other.Year) return false;
      if (Month != other.Month) return false;
      if (DayOfMonth != other.DayOfMonth) return false;
      if (Hour != other.Hour) return false;
      if (Minute != other.Minute) return false;
      if (Calendar != other.Calendar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDayOfWeek) hash ^= DayOfWeek.GetHashCode();
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasMonth) hash ^= Month.GetHashCode();
      if (HasDayOfMonth) hash ^= DayOfMonth.GetHashCode();
      if (HasHour) hash ^= Hour.GetHashCode();
      if (HasMinute) hash ^= Minute.GetHashCode();
      if (HasCalendar) hash ^= Calendar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDayOfWeek) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DayOfWeek);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Month);
      }
      if (HasDayOfMonth) {
        output.WriteRawTag(32);
        output.WriteUInt32(DayOfMonth);
      }
      if (HasHour) {
        output.WriteRawTag(40);
        output.WriteUInt32(Hour);
      }
      if (HasMinute) {
        output.WriteRawTag(48);
        output.WriteUInt32(Minute);
      }
      if (HasCalendar) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Calendar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDayOfWeek) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DayOfWeek);
      }
      if (HasYear) {
        output.WriteRawTag(16);
        output.WriteUInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Month);
      }
      if (HasDayOfMonth) {
        output.WriteRawTag(32);
        output.WriteUInt32(DayOfMonth);
      }
      if (HasHour) {
        output.WriteRawTag(40);
        output.WriteUInt32(Hour);
      }
      if (HasMinute) {
        output.WriteRawTag(48);
        output.WriteUInt32(Minute);
      }
      if (HasCalendar) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Calendar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDayOfWeek) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DayOfWeek);
      }
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
      }
      if (HasMonth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Month);
      }
      if (HasDayOfMonth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DayOfMonth);
      }
      if (HasHour) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hour);
      }
      if (HasMinute) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Minute);
      }
      if (HasCalendar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Calendar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HSMDateTimeComponent other) {
      if (other == null) {
        return;
      }
      if (other.HasDayOfWeek) {
        DayOfWeek = other.DayOfWeek;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasMonth) {
        Month = other.Month;
      }
      if (other.HasDayOfMonth) {
        DayOfMonth = other.DayOfMonth;
      }
      if (other.HasHour) {
        Hour = other.Hour;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      if (other.HasCalendar) {
        Calendar = other.Calendar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DayOfWeek = (global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE) input.ReadEnum();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            Month = input.ReadUInt32();
            break;
          }
          case 32: {
            DayOfMonth = input.ReadUInt32();
            break;
          }
          case 40: {
            Hour = input.ReadUInt32();
            break;
          }
          case 48: {
            Minute = input.ReadUInt32();
            break;
          }
          case 56: {
            Calendar = (global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DayOfWeek = (global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE) input.ReadEnum();
            break;
          }
          case 16: {
            Year = input.ReadUInt32();
            break;
          }
          case 24: {
            Month = input.ReadUInt32();
            break;
          }
          case 32: {
            DayOfMonth = input.ReadUInt32();
            break;
          }
          case 40: {
            Hour = input.ReadUInt32();
            break;
          }
          case 48: {
            Minute = input.ReadUInt32();
            break;
          }
          case 56: {
            Calendar = (global::waxnet.Internal.Proto.HSMDateTimeComponent.Types.HSM_DATE_TIME_COMPONENT_CALENDARTYPE) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the HSMDateTimeComponent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE {
        [pbr::OriginalName("MONDAY")] Monday = 1,
        [pbr::OriginalName("TUESDAY")] Tuesday = 2,
        [pbr::OriginalName("WEDNESDAY")] Wednesday = 3,
        [pbr::OriginalName("THURSDAY")] Thursday = 4,
        [pbr::OriginalName("FRIDAY")] Friday = 5,
        [pbr::OriginalName("SATURDAY")] Saturday = 6,
        [pbr::OriginalName("SUNDAY")] Sunday = 7,
      }

      public enum HSM_DATE_TIME_COMPONENT_CALENDARTYPE {
        [pbr::OriginalName("GREGORIAN")] Gregorian = 1,
        [pbr::OriginalName("SOLAR_HIJRI")] SolarHijri = 2,
      }

    }
    #endregion

  }

  internal sealed partial class HSMDateTimeUnixEpoch : pb::IMessage<HSMDateTimeUnixEpoch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HSMDateTimeUnixEpoch> _parser = new pb::MessageParser<HSMDateTimeUnixEpoch>(() => new HSMDateTimeUnixEpoch());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HSMDateTimeUnixEpoch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTimeUnixEpoch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTimeUnixEpoch(HSMDateTimeUnixEpoch other) : this() {
      _hasBits0 = other._hasBits0;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTimeUnixEpoch Clone() {
      return new HSMDateTimeUnixEpoch(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HSMDateTimeUnixEpoch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HSMDateTimeUnixEpoch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HSMDateTimeUnixEpoch other) {
      if (other == null) {
        return;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HSMDateTime : pb::IMessage<HSMDateTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HSMDateTime> _parser = new pb::MessageParser<HSMDateTime>(() => new HSMDateTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HSMDateTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTime(HSMDateTime other) : this() {
      switch (other.DatetimeOneofCase) {
        case DatetimeOneofOneofCase.Component:
          Component = other.Component.Clone();
          break;
        case DatetimeOneofOneofCase.UnixEpoch:
          UnixEpoch = other.UnixEpoch.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMDateTime Clone() {
      return new HSMDateTime(this);
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HSMDateTimeComponent Component {
      get { return datetimeOneofCase_ == DatetimeOneofOneofCase.Component ? (global::waxnet.Internal.Proto.HSMDateTimeComponent) datetimeOneof_ : null; }
      set {
        datetimeOneof_ = value;
        datetimeOneofCase_ = value == null ? DatetimeOneofOneofCase.None : DatetimeOneofOneofCase.Component;
      }
    }

    /// <summary>Field number for the "unixEpoch" field.</summary>
    public const int UnixEpochFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch UnixEpoch {
      get { return datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch ? (global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch) datetimeOneof_ : null; }
      set {
        datetimeOneof_ = value;
        datetimeOneofCase_ = value == null ? DatetimeOneofOneofCase.None : DatetimeOneofOneofCase.UnixEpoch;
      }
    }

    private object datetimeOneof_;
    /// <summary>Enum of possible cases for the "datetimeOneof" oneof.</summary>
    public enum DatetimeOneofOneofCase {
      None = 0,
      Component = 1,
      UnixEpoch = 2,
    }
    private DatetimeOneofOneofCase datetimeOneofCase_ = DatetimeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatetimeOneofOneofCase DatetimeOneofCase {
      get { return datetimeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatetimeOneof() {
      datetimeOneofCase_ = DatetimeOneofOneofCase.None;
      datetimeOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HSMDateTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HSMDateTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Component, other.Component)) return false;
      if (!object.Equals(UnixEpoch, other.UnixEpoch)) return false;
      if (DatetimeOneofCase != other.DatetimeOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.Component) hash ^= Component.GetHashCode();
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch) hash ^= UnixEpoch.GetHashCode();
      hash ^= (int) datetimeOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.Component) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch) {
        output.WriteRawTag(18);
        output.WriteMessage(UnixEpoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.Component) {
        output.WriteRawTag(10);
        output.WriteMessage(Component);
      }
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch) {
        output.WriteRawTag(18);
        output.WriteMessage(UnixEpoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.Component) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Component);
      }
      if (datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnixEpoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HSMDateTime other) {
      if (other == null) {
        return;
      }
      switch (other.DatetimeOneofCase) {
        case DatetimeOneofOneofCase.Component:
          if (Component == null) {
            Component = new global::waxnet.Internal.Proto.HSMDateTimeComponent();
          }
          Component.MergeFrom(other.Component);
          break;
        case DatetimeOneofOneofCase.UnixEpoch:
          if (UnixEpoch == null) {
            UnixEpoch = new global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch();
          }
          UnixEpoch.MergeFrom(other.UnixEpoch);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.HSMDateTimeComponent subBuilder = new global::waxnet.Internal.Proto.HSMDateTimeComponent();
            if (datetimeOneofCase_ == DatetimeOneofOneofCase.Component) {
              subBuilder.MergeFrom(Component);
            }
            input.ReadMessage(subBuilder);
            Component = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch subBuilder = new global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch();
            if (datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch) {
              subBuilder.MergeFrom(UnixEpoch);
            }
            input.ReadMessage(subBuilder);
            UnixEpoch = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.HSMDateTimeComponent subBuilder = new global::waxnet.Internal.Proto.HSMDateTimeComponent();
            if (datetimeOneofCase_ == DatetimeOneofOneofCase.Component) {
              subBuilder.MergeFrom(Component);
            }
            input.ReadMessage(subBuilder);
            Component = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch subBuilder = new global::waxnet.Internal.Proto.HSMDateTimeUnixEpoch();
            if (datetimeOneofCase_ == DatetimeOneofOneofCase.UnixEpoch) {
              subBuilder.MergeFrom(UnixEpoch);
            }
            input.ReadMessage(subBuilder);
            UnixEpoch = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HSMLocalizableParameter : pb::IMessage<HSMLocalizableParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HSMLocalizableParameter> _parser = new pb::MessageParser<HSMLocalizableParameter>(() => new HSMLocalizableParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HSMLocalizableParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMLocalizableParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMLocalizableParameter(HSMLocalizableParameter other) : this() {
      default_ = other.default_;
      switch (other.ParamOneofCase) {
        case ParamOneofOneofCase.Currency:
          Currency = other.Currency.Clone();
          break;
        case ParamOneofOneofCase.DateTime:
          DateTime = other.DateTime.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HSMLocalizableParameter Clone() {
      return new HSMLocalizableParameter(this);
    }

    /// <summary>Field number for the "default" field.</summary>
    public const int DefaultFieldNumber = 1;
    private readonly static string DefaultDefaultValue = "";

    private string default_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Default {
      get { return default_ ?? DefaultDefaultValue; }
      set {
        default_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "default" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefault {
      get { return default_ != null; }
    }
    /// <summary>Clears the value of the "default" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefault() {
      default_ = null;
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HSMCurrency Currency {
      get { return paramOneofCase_ == ParamOneofOneofCase.Currency ? (global::waxnet.Internal.Proto.HSMCurrency) paramOneof_ : null; }
      set {
        paramOneof_ = value;
        paramOneofCase_ = value == null ? ParamOneofOneofCase.None : ParamOneofOneofCase.Currency;
      }
    }

    /// <summary>Field number for the "dateTime" field.</summary>
    public const int DateTimeFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HSMDateTime DateTime {
      get { return paramOneofCase_ == ParamOneofOneofCase.DateTime ? (global::waxnet.Internal.Proto.HSMDateTime) paramOneof_ : null; }
      set {
        paramOneof_ = value;
        paramOneofCase_ = value == null ? ParamOneofOneofCase.None : ParamOneofOneofCase.DateTime;
      }
    }

    private object paramOneof_;
    /// <summary>Enum of possible cases for the "paramOneof" oneof.</summary>
    public enum ParamOneofOneofCase {
      None = 0,
      Currency = 2,
      DateTime = 3,
    }
    private ParamOneofOneofCase paramOneofCase_ = ParamOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParamOneofOneofCase ParamOneofCase {
      get { return paramOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParamOneof() {
      paramOneofCase_ = ParamOneofOneofCase.None;
      paramOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HSMLocalizableParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HSMLocalizableParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Default != other.Default) return false;
      if (!object.Equals(Currency, other.Currency)) return false;
      if (!object.Equals(DateTime, other.DateTime)) return false;
      if (ParamOneofCase != other.ParamOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDefault) hash ^= Default.GetHashCode();
      if (paramOneofCase_ == ParamOneofOneofCase.Currency) hash ^= Currency.GetHashCode();
      if (paramOneofCase_ == ParamOneofOneofCase.DateTime) hash ^= DateTime.GetHashCode();
      hash ^= (int) paramOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDefault) {
        output.WriteRawTag(10);
        output.WriteString(Default);
      }
      if (paramOneofCase_ == ParamOneofOneofCase.Currency) {
        output.WriteRawTag(18);
        output.WriteMessage(Currency);
      }
      if (paramOneofCase_ == ParamOneofOneofCase.DateTime) {
        output.WriteRawTag(26);
        output.WriteMessage(DateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDefault) {
        output.WriteRawTag(10);
        output.WriteString(Default);
      }
      if (paramOneofCase_ == ParamOneofOneofCase.Currency) {
        output.WriteRawTag(18);
        output.WriteMessage(Currency);
      }
      if (paramOneofCase_ == ParamOneofOneofCase.DateTime) {
        output.WriteRawTag(26);
        output.WriteMessage(DateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDefault) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Default);
      }
      if (paramOneofCase_ == ParamOneofOneofCase.Currency) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Currency);
      }
      if (paramOneofCase_ == ParamOneofOneofCase.DateTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HSMLocalizableParameter other) {
      if (other == null) {
        return;
      }
      if (other.HasDefault) {
        Default = other.Default;
      }
      switch (other.ParamOneofCase) {
        case ParamOneofOneofCase.Currency:
          if (Currency == null) {
            Currency = new global::waxnet.Internal.Proto.HSMCurrency();
          }
          Currency.MergeFrom(other.Currency);
          break;
        case ParamOneofOneofCase.DateTime:
          if (DateTime == null) {
            DateTime = new global::waxnet.Internal.Proto.HSMDateTime();
          }
          DateTime.MergeFrom(other.DateTime);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Default = input.ReadString();
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HSMCurrency subBuilder = new global::waxnet.Internal.Proto.HSMCurrency();
            if (paramOneofCase_ == ParamOneofOneofCase.Currency) {
              subBuilder.MergeFrom(Currency);
            }
            input.ReadMessage(subBuilder);
            Currency = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.HSMDateTime subBuilder = new global::waxnet.Internal.Proto.HSMDateTime();
            if (paramOneofCase_ == ParamOneofOneofCase.DateTime) {
              subBuilder.MergeFrom(DateTime);
            }
            input.ReadMessage(subBuilder);
            DateTime = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Default = input.ReadString();
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HSMCurrency subBuilder = new global::waxnet.Internal.Proto.HSMCurrency();
            if (paramOneofCase_ == ParamOneofOneofCase.Currency) {
              subBuilder.MergeFrom(Currency);
            }
            input.ReadMessage(subBuilder);
            Currency = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.HSMDateTime subBuilder = new global::waxnet.Internal.Proto.HSMDateTime();
            if (paramOneofCase_ == ParamOneofOneofCase.DateTime) {
              subBuilder.MergeFrom(DateTime);
            }
            input.ReadMessage(subBuilder);
            DateTime = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HighlyStructuredMessage : pb::IMessage<HighlyStructuredMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HighlyStructuredMessage> _parser = new pb::MessageParser<HighlyStructuredMessage>(() => new HighlyStructuredMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HighlyStructuredMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlyStructuredMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlyStructuredMessage(HighlyStructuredMessage other) : this() {
      namespace_ = other.namespace_;
      elementName_ = other.elementName_;
      params_ = other.params_.Clone();
      fallbackLg_ = other.fallbackLg_;
      fallbackLc_ = other.fallbackLc_;
      localizableParams_ = other.localizableParams_.Clone();
      deterministicLg_ = other.deterministicLg_;
      deterministicLc_ = other.deterministicLc_;
      hydratedHsm_ = other.hydratedHsm_ != null ? other.hydratedHsm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HighlyStructuredMessage Clone() {
      return new HighlyStructuredMessage(this);
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 1;
    private readonly static string NamespaceDefaultValue = "";

    private string namespace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_ ?? NamespaceDefaultValue; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "namespace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNamespace {
      get { return namespace_ != null; }
    }
    /// <summary>Clears the value of the "namespace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNamespace() {
      namespace_ = null;
    }

    /// <summary>Field number for the "elementName" field.</summary>
    public const int ElementNameFieldNumber = 2;
    private readonly static string ElementNameDefaultValue = "";

    private string elementName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ElementName {
      get { return elementName_ ?? ElementNameDefaultValue; }
      set {
        elementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "elementName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasElementName {
      get { return elementName_ != null; }
    }
    /// <summary>Clears the value of the "elementName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearElementName() {
      elementName_ = null;
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_params_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> params_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Params {
      get { return params_; }
    }

    /// <summary>Field number for the "fallbackLg" field.</summary>
    public const int FallbackLgFieldNumber = 4;
    private readonly static string FallbackLgDefaultValue = "";

    private string fallbackLg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FallbackLg {
      get { return fallbackLg_ ?? FallbackLgDefaultValue; }
      set {
        fallbackLg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fallbackLg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFallbackLg {
      get { return fallbackLg_ != null; }
    }
    /// <summary>Clears the value of the "fallbackLg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFallbackLg() {
      fallbackLg_ = null;
    }

    /// <summary>Field number for the "fallbackLc" field.</summary>
    public const int FallbackLcFieldNumber = 5;
    private readonly static string FallbackLcDefaultValue = "";

    private string fallbackLc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FallbackLc {
      get { return fallbackLc_ ?? FallbackLcDefaultValue; }
      set {
        fallbackLc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fallbackLc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFallbackLc {
      get { return fallbackLc_ != null; }
    }
    /// <summary>Clears the value of the "fallbackLc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFallbackLc() {
      fallbackLc_ = null;
    }

    /// <summary>Field number for the "localizableParams" field.</summary>
    public const int LocalizableParamsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.HSMLocalizableParameter> _repeated_localizableParams_codec
        = pb::FieldCodec.ForMessage(50, global::waxnet.Internal.Proto.HSMLocalizableParameter.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.HSMLocalizableParameter> localizableParams_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.HSMLocalizableParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.HSMLocalizableParameter> LocalizableParams {
      get { return localizableParams_; }
    }

    /// <summary>Field number for the "deterministicLg" field.</summary>
    public const int DeterministicLgFieldNumber = 7;
    private readonly static string DeterministicLgDefaultValue = "";

    private string deterministicLg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeterministicLg {
      get { return deterministicLg_ ?? DeterministicLgDefaultValue; }
      set {
        deterministicLg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deterministicLg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeterministicLg {
      get { return deterministicLg_ != null; }
    }
    /// <summary>Clears the value of the "deterministicLg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeterministicLg() {
      deterministicLg_ = null;
    }

    /// <summary>Field number for the "deterministicLc" field.</summary>
    public const int DeterministicLcFieldNumber = 8;
    private readonly static string DeterministicLcDefaultValue = "";

    private string deterministicLc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeterministicLc {
      get { return deterministicLc_ ?? DeterministicLcDefaultValue; }
      set {
        deterministicLc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "deterministicLc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeterministicLc {
      get { return deterministicLc_ != null; }
    }
    /// <summary>Clears the value of the "deterministicLc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeterministicLc() {
      deterministicLc_ = null;
    }

    /// <summary>Field number for the "hydratedHsm" field.</summary>
    public const int HydratedHsmFieldNumber = 9;
    private global::waxnet.Internal.Proto.TemplateMessage hydratedHsm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.TemplateMessage HydratedHsm {
      get { return hydratedHsm_; }
      set {
        hydratedHsm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HighlyStructuredMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HighlyStructuredMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Namespace != other.Namespace) return false;
      if (ElementName != other.ElementName) return false;
      if(!params_.Equals(other.params_)) return false;
      if (FallbackLg != other.FallbackLg) return false;
      if (FallbackLc != other.FallbackLc) return false;
      if(!localizableParams_.Equals(other.localizableParams_)) return false;
      if (DeterministicLg != other.DeterministicLg) return false;
      if (DeterministicLc != other.DeterministicLc) return false;
      if (!object.Equals(HydratedHsm, other.HydratedHsm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNamespace) hash ^= Namespace.GetHashCode();
      if (HasElementName) hash ^= ElementName.GetHashCode();
      hash ^= params_.GetHashCode();
      if (HasFallbackLg) hash ^= FallbackLg.GetHashCode();
      if (HasFallbackLc) hash ^= FallbackLc.GetHashCode();
      hash ^= localizableParams_.GetHashCode();
      if (HasDeterministicLg) hash ^= DeterministicLg.GetHashCode();
      if (HasDeterministicLc) hash ^= DeterministicLc.GetHashCode();
      if (hydratedHsm_ != null) hash ^= HydratedHsm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNamespace) {
        output.WriteRawTag(10);
        output.WriteString(Namespace);
      }
      if (HasElementName) {
        output.WriteRawTag(18);
        output.WriteString(ElementName);
      }
      params_.WriteTo(output, _repeated_params_codec);
      if (HasFallbackLg) {
        output.WriteRawTag(34);
        output.WriteString(FallbackLg);
      }
      if (HasFallbackLc) {
        output.WriteRawTag(42);
        output.WriteString(FallbackLc);
      }
      localizableParams_.WriteTo(output, _repeated_localizableParams_codec);
      if (HasDeterministicLg) {
        output.WriteRawTag(58);
        output.WriteString(DeterministicLg);
      }
      if (HasDeterministicLc) {
        output.WriteRawTag(66);
        output.WriteString(DeterministicLc);
      }
      if (hydratedHsm_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HydratedHsm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNamespace) {
        output.WriteRawTag(10);
        output.WriteString(Namespace);
      }
      if (HasElementName) {
        output.WriteRawTag(18);
        output.WriteString(ElementName);
      }
      params_.WriteTo(ref output, _repeated_params_codec);
      if (HasFallbackLg) {
        output.WriteRawTag(34);
        output.WriteString(FallbackLg);
      }
      if (HasFallbackLc) {
        output.WriteRawTag(42);
        output.WriteString(FallbackLc);
      }
      localizableParams_.WriteTo(ref output, _repeated_localizableParams_codec);
      if (HasDeterministicLg) {
        output.WriteRawTag(58);
        output.WriteString(DeterministicLg);
      }
      if (HasDeterministicLc) {
        output.WriteRawTag(66);
        output.WriteString(DeterministicLc);
      }
      if (hydratedHsm_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HydratedHsm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasNamespace) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (HasElementName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementName);
      }
      size += params_.CalculateSize(_repeated_params_codec);
      if (HasFallbackLg) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FallbackLg);
      }
      if (HasFallbackLc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FallbackLc);
      }
      size += localizableParams_.CalculateSize(_repeated_localizableParams_codec);
      if (HasDeterministicLg) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeterministicLg);
      }
      if (HasDeterministicLc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeterministicLc);
      }
      if (hydratedHsm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HydratedHsm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HighlyStructuredMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasNamespace) {
        Namespace = other.Namespace;
      }
      if (other.HasElementName) {
        ElementName = other.ElementName;
      }
      params_.Add(other.params_);
      if (other.HasFallbackLg) {
        FallbackLg = other.FallbackLg;
      }
      if (other.HasFallbackLc) {
        FallbackLc = other.FallbackLc;
      }
      localizableParams_.Add(other.localizableParams_);
      if (other.HasDeterministicLg) {
        DeterministicLg = other.DeterministicLg;
      }
      if (other.HasDeterministicLc) {
        DeterministicLc = other.DeterministicLc;
      }
      if (other.hydratedHsm_ != null) {
        if (hydratedHsm_ == null) {
          HydratedHsm = new global::waxnet.Internal.Proto.TemplateMessage();
        }
        HydratedHsm.MergeFrom(other.HydratedHsm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Namespace = input.ReadString();
            break;
          }
          case 18: {
            ElementName = input.ReadString();
            break;
          }
          case 26: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
          case 34: {
            FallbackLg = input.ReadString();
            break;
          }
          case 42: {
            FallbackLc = input.ReadString();
            break;
          }
          case 50: {
            localizableParams_.AddEntriesFrom(input, _repeated_localizableParams_codec);
            break;
          }
          case 58: {
            DeterministicLg = input.ReadString();
            break;
          }
          case 66: {
            DeterministicLc = input.ReadString();
            break;
          }
          case 74: {
            if (hydratedHsm_ == null) {
              HydratedHsm = new global::waxnet.Internal.Proto.TemplateMessage();
            }
            input.ReadMessage(HydratedHsm);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Namespace = input.ReadString();
            break;
          }
          case 18: {
            ElementName = input.ReadString();
            break;
          }
          case 26: {
            params_.AddEntriesFrom(ref input, _repeated_params_codec);
            break;
          }
          case 34: {
            FallbackLg = input.ReadString();
            break;
          }
          case 42: {
            FallbackLc = input.ReadString();
            break;
          }
          case 50: {
            localizableParams_.AddEntriesFrom(ref input, _repeated_localizableParams_codec);
            break;
          }
          case 58: {
            DeterministicLg = input.ReadString();
            break;
          }
          case 66: {
            DeterministicLc = input.ReadString();
            break;
          }
          case 74: {
            if (hydratedHsm_ == null) {
              HydratedHsm = new global::waxnet.Internal.Proto.TemplateMessage();
            }
            input.ReadMessage(HydratedHsm);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class SendPaymentMessage : pb::IMessage<SendPaymentMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendPaymentMessage> _parser = new pb::MessageParser<SendPaymentMessage>(() => new SendPaymentMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendPaymentMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPaymentMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPaymentMessage(SendPaymentMessage other) : this() {
      noteMessage_ = other.noteMessage_ != null ? other.noteMessage_.Clone() : null;
      requestMessageKey_ = other.requestMessageKey_ != null ? other.requestMessageKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPaymentMessage Clone() {
      return new SendPaymentMessage(this);
    }

    /// <summary>Field number for the "noteMessage" field.</summary>
    public const int NoteMessageFieldNumber = 2;
    private global::waxnet.Internal.Proto.Message noteMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Message NoteMessage {
      get { return noteMessage_; }
      set {
        noteMessage_ = value;
      }
    }

    /// <summary>Field number for the "requestMessageKey" field.</summary>
    public const int RequestMessageKeyFieldNumber = 3;
    private global::waxnet.Internal.Proto.MessageKey requestMessageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey RequestMessageKey {
      get { return requestMessageKey_; }
      set {
        requestMessageKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendPaymentMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendPaymentMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NoteMessage, other.NoteMessage)) return false;
      if (!object.Equals(RequestMessageKey, other.RequestMessageKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (noteMessage_ != null) hash ^= NoteMessage.GetHashCode();
      if (requestMessageKey_ != null) hash ^= RequestMessageKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (noteMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NoteMessage);
      }
      if (requestMessageKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestMessageKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (noteMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NoteMessage);
      }
      if (requestMessageKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestMessageKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (noteMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoteMessage);
      }
      if (requestMessageKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestMessageKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendPaymentMessage other) {
      if (other == null) {
        return;
      }
      if (other.noteMessage_ != null) {
        if (noteMessage_ == null) {
          NoteMessage = new global::waxnet.Internal.Proto.Message();
        }
        NoteMessage.MergeFrom(other.NoteMessage);
      }
      if (other.requestMessageKey_ != null) {
        if (requestMessageKey_ == null) {
          RequestMessageKey = new global::waxnet.Internal.Proto.MessageKey();
        }
        RequestMessageKey.MergeFrom(other.RequestMessageKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (noteMessage_ == null) {
              NoteMessage = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(NoteMessage);
            break;
          }
          case 26: {
            if (requestMessageKey_ == null) {
              RequestMessageKey = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(RequestMessageKey);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (noteMessage_ == null) {
              NoteMessage = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(NoteMessage);
            break;
          }
          case 26: {
            if (requestMessageKey_ == null) {
              RequestMessageKey = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(RequestMessageKey);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class RequestPaymentMessage : pb::IMessage<RequestPaymentMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestPaymentMessage> _parser = new pb::MessageParser<RequestPaymentMessage>(() => new RequestPaymentMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPaymentMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPaymentMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPaymentMessage(RequestPaymentMessage other) : this() {
      _hasBits0 = other._hasBits0;
      noteMessage_ = other.noteMessage_ != null ? other.noteMessage_.Clone() : null;
      currencyCodeIso4217_ = other.currencyCodeIso4217_;
      amount1000_ = other.amount1000_;
      requestFrom_ = other.requestFrom_;
      expiryTimestamp_ = other.expiryTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPaymentMessage Clone() {
      return new RequestPaymentMessage(this);
    }

    /// <summary>Field number for the "noteMessage" field.</summary>
    public const int NoteMessageFieldNumber = 4;
    private global::waxnet.Internal.Proto.Message noteMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Message NoteMessage {
      get { return noteMessage_; }
      set {
        noteMessage_ = value;
      }
    }

    /// <summary>Field number for the "currencyCodeIso4217" field.</summary>
    public const int CurrencyCodeIso4217FieldNumber = 1;
    private readonly static string CurrencyCodeIso4217DefaultValue = "";

    private string currencyCodeIso4217_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCodeIso4217 {
      get { return currencyCodeIso4217_ ?? CurrencyCodeIso4217DefaultValue; }
      set {
        currencyCodeIso4217_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCodeIso4217" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCodeIso4217 {
      get { return currencyCodeIso4217_ != null; }
    }
    /// <summary>Clears the value of the "currencyCodeIso4217" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCodeIso4217() {
      currencyCodeIso4217_ = null;
    }

    /// <summary>Field number for the "amount1000" field.</summary>
    public const int Amount1000FieldNumber = 2;
    private readonly static ulong Amount1000DefaultValue = 0UL;

    private ulong amount1000_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount1000 {
      get { if ((_hasBits0 & 1) != 0) { return amount1000_; } else { return Amount1000DefaultValue; } }
      set {
        _hasBits0 |= 1;
        amount1000_ = value;
      }
    }
    /// <summary>Gets whether the "amount1000" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAmount1000 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "amount1000" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAmount1000() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "requestFrom" field.</summary>
    public const int RequestFromFieldNumber = 3;
    private readonly static string RequestFromDefaultValue = "";

    private string requestFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestFrom {
      get { return requestFrom_ ?? RequestFromDefaultValue; }
      set {
        requestFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "requestFrom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestFrom {
      get { return requestFrom_ != null; }
    }
    /// <summary>Clears the value of the "requestFrom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestFrom() {
      requestFrom_ = null;
    }

    /// <summary>Field number for the "expiryTimestamp" field.</summary>
    public const int ExpiryTimestampFieldNumber = 5;
    private readonly static long ExpiryTimestampDefaultValue = 0L;

    private long expiryTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpiryTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return expiryTimestamp_; } else { return ExpiryTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expiryTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "expiryTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpiryTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiryTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpiryTimestamp() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPaymentMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPaymentMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NoteMessage, other.NoteMessage)) return false;
      if (CurrencyCodeIso4217 != other.CurrencyCodeIso4217) return false;
      if (Amount1000 != other.Amount1000) return false;
      if (RequestFrom != other.RequestFrom) return false;
      if (ExpiryTimestamp != other.ExpiryTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (noteMessage_ != null) hash ^= NoteMessage.GetHashCode();
      if (HasCurrencyCodeIso4217) hash ^= CurrencyCodeIso4217.GetHashCode();
      if (HasAmount1000) hash ^= Amount1000.GetHashCode();
      if (HasRequestFrom) hash ^= RequestFrom.GetHashCode();
      if (HasExpiryTimestamp) hash ^= ExpiryTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCurrencyCodeIso4217) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyCodeIso4217);
      }
      if (HasAmount1000) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount1000);
      }
      if (HasRequestFrom) {
        output.WriteRawTag(26);
        output.WriteString(RequestFrom);
      }
      if (noteMessage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NoteMessage);
      }
      if (HasExpiryTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpiryTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCurrencyCodeIso4217) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyCodeIso4217);
      }
      if (HasAmount1000) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount1000);
      }
      if (HasRequestFrom) {
        output.WriteRawTag(26);
        output.WriteString(RequestFrom);
      }
      if (noteMessage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NoteMessage);
      }
      if (HasExpiryTimestamp) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpiryTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (noteMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoteMessage);
      }
      if (HasCurrencyCodeIso4217) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCodeIso4217);
      }
      if (HasAmount1000) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount1000);
      }
      if (HasRequestFrom) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestFrom);
      }
      if (HasExpiryTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiryTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPaymentMessage other) {
      if (other == null) {
        return;
      }
      if (other.noteMessage_ != null) {
        if (noteMessage_ == null) {
          NoteMessage = new global::waxnet.Internal.Proto.Message();
        }
        NoteMessage.MergeFrom(other.NoteMessage);
      }
      if (other.HasCurrencyCodeIso4217) {
        CurrencyCodeIso4217 = other.CurrencyCodeIso4217;
      }
      if (other.HasAmount1000) {
        Amount1000 = other.Amount1000;
      }
      if (other.HasRequestFrom) {
        RequestFrom = other.RequestFrom;
      }
      if (other.HasExpiryTimestamp) {
        ExpiryTimestamp = other.ExpiryTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrencyCodeIso4217 = input.ReadString();
            break;
          }
          case 16: {
            Amount1000 = input.ReadUInt64();
            break;
          }
          case 26: {
            RequestFrom = input.ReadString();
            break;
          }
          case 34: {
            if (noteMessage_ == null) {
              NoteMessage = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(NoteMessage);
            break;
          }
          case 40: {
            ExpiryTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CurrencyCodeIso4217 = input.ReadString();
            break;
          }
          case 16: {
            Amount1000 = input.ReadUInt64();
            break;
          }
          case 26: {
            RequestFrom = input.ReadString();
            break;
          }
          case 34: {
            if (noteMessage_ == null) {
              NoteMessage = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(NoteMessage);
            break;
          }
          case 40: {
            ExpiryTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DeclinePaymentRequestMessage : pb::IMessage<DeclinePaymentRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeclinePaymentRequestMessage> _parser = new pb::MessageParser<DeclinePaymentRequestMessage>(() => new DeclinePaymentRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclinePaymentRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclinePaymentRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclinePaymentRequestMessage(DeclinePaymentRequestMessage other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclinePaymentRequestMessage Clone() {
      return new DeclinePaymentRequestMessage(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::waxnet.Internal.Proto.MessageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclinePaymentRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclinePaymentRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclinePaymentRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::waxnet.Internal.Proto.MessageKey();
        }
        Key.MergeFrom(other.Key);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class CancelPaymentRequestMessage : pb::IMessage<CancelPaymentRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelPaymentRequestMessage> _parser = new pb::MessageParser<CancelPaymentRequestMessage>(() => new CancelPaymentRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelPaymentRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPaymentRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPaymentRequestMessage(CancelPaymentRequestMessage other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelPaymentRequestMessage Clone() {
      return new CancelPaymentRequestMessage(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::waxnet.Internal.Proto.MessageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelPaymentRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelPaymentRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelPaymentRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::waxnet.Internal.Proto.MessageKey();
        }
        Key.MergeFrom(other.Key);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class LiveLocationMessage : pb::IMessage<LiveLocationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LiveLocationMessage> _parser = new pb::MessageParser<LiveLocationMessage>(() => new LiveLocationMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LiveLocationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveLocationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveLocationMessage(LiveLocationMessage other) : this() {
      _hasBits0 = other._hasBits0;
      degreesLatitude_ = other.degreesLatitude_;
      degreesLongitude_ = other.degreesLongitude_;
      accuracyInMeters_ = other.accuracyInMeters_;
      speedInMps_ = other.speedInMps_;
      degreesClockwiseFromMagneticNorth_ = other.degreesClockwiseFromMagneticNorth_;
      caption_ = other.caption_;
      sequenceNumber_ = other.sequenceNumber_;
      timeOffset_ = other.timeOffset_;
      jpegThumbnail_ = other.jpegThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LiveLocationMessage Clone() {
      return new LiveLocationMessage(this);
    }

    /// <summary>Field number for the "degreesLatitude" field.</summary>
    public const int DegreesLatitudeFieldNumber = 1;
    private readonly static double DegreesLatitudeDefaultValue = 0D;

    private double degreesLatitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DegreesLatitude {
      get { if ((_hasBits0 & 1) != 0) { return degreesLatitude_; } else { return DegreesLatitudeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        degreesLatitude_ = value;
      }
    }
    /// <summary>Gets whether the "degreesLatitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesLatitude {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "degreesLatitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesLatitude() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "degreesLongitude" field.</summary>
    public const int DegreesLongitudeFieldNumber = 2;
    private readonly static double DegreesLongitudeDefaultValue = 0D;

    private double degreesLongitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DegreesLongitude {
      get { if ((_hasBits0 & 2) != 0) { return degreesLongitude_; } else { return DegreesLongitudeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        degreesLongitude_ = value;
      }
    }
    /// <summary>Gets whether the "degreesLongitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesLongitude {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "degreesLongitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesLongitude() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "accuracyInMeters" field.</summary>
    public const int AccuracyInMetersFieldNumber = 3;
    private readonly static uint AccuracyInMetersDefaultValue = 0;

    private uint accuracyInMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccuracyInMeters {
      get { if ((_hasBits0 & 4) != 0) { return accuracyInMeters_; } else { return AccuracyInMetersDefaultValue; } }
      set {
        _hasBits0 |= 4;
        accuracyInMeters_ = value;
      }
    }
    /// <summary>Gets whether the "accuracyInMeters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccuracyInMeters {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "accuracyInMeters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccuracyInMeters() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "speedInMps" field.</summary>
    public const int SpeedInMpsFieldNumber = 4;
    private readonly static float SpeedInMpsDefaultValue = 0F;

    private float speedInMps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SpeedInMps {
      get { if ((_hasBits0 & 8) != 0) { return speedInMps_; } else { return SpeedInMpsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        speedInMps_ = value;
      }
    }
    /// <summary>Gets whether the "speedInMps" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSpeedInMps {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "speedInMps" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSpeedInMps() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "degreesClockwiseFromMagneticNorth" field.</summary>
    public const int DegreesClockwiseFromMagneticNorthFieldNumber = 5;
    private readonly static uint DegreesClockwiseFromMagneticNorthDefaultValue = 0;

    private uint degreesClockwiseFromMagneticNorth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DegreesClockwiseFromMagneticNorth {
      get { if ((_hasBits0 & 16) != 0) { return degreesClockwiseFromMagneticNorth_; } else { return DegreesClockwiseFromMagneticNorthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        degreesClockwiseFromMagneticNorth_ = value;
      }
    }
    /// <summary>Gets whether the "degreesClockwiseFromMagneticNorth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDegreesClockwiseFromMagneticNorth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "degreesClockwiseFromMagneticNorth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDegreesClockwiseFromMagneticNorth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 6;
    private readonly static string CaptionDefaultValue = "";

    private string caption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_ ?? CaptionDefaultValue; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCaption {
      get { return caption_ != null; }
    }
    /// <summary>Clears the value of the "caption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCaption() {
      caption_ = null;
    }

    /// <summary>Field number for the "sequenceNumber" field.</summary>
    public const int SequenceNumberFieldNumber = 7;
    private readonly static long SequenceNumberDefaultValue = 0L;

    private long sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNumber {
      get { if ((_hasBits0 & 32) != 0) { return sequenceNumber_; } else { return SequenceNumberDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sequenceNumber_ = value;
      }
    }
    /// <summary>Gets whether the "sequenceNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSequenceNumber {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sequenceNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSequenceNumber() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "timeOffset" field.</summary>
    public const int TimeOffsetFieldNumber = 8;
    private readonly static uint TimeOffsetDefaultValue = 0;

    private uint timeOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TimeOffset {
      get { if ((_hasBits0 & 64) != 0) { return timeOffset_; } else { return TimeOffsetDefaultValue; } }
      set {
        _hasBits0 |= 64;
        timeOffset_ = value;
      }
    }
    /// <summary>Gets whether the "timeOffset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeOffset {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "timeOffset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeOffset() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 16;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LiveLocationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LiveLocationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DegreesLatitude, other.DegreesLatitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DegreesLongitude, other.DegreesLongitude)) return false;
      if (AccuracyInMeters != other.AccuracyInMeters) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedInMps, other.SpeedInMps)) return false;
      if (DegreesClockwiseFromMagneticNorth != other.DegreesClockwiseFromMagneticNorth) return false;
      if (Caption != other.Caption) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (TimeOffset != other.TimeOffset) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDegreesLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DegreesLatitude);
      if (HasDegreesLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DegreesLongitude);
      if (HasAccuracyInMeters) hash ^= AccuracyInMeters.GetHashCode();
      if (HasSpeedInMps) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedInMps);
      if (HasDegreesClockwiseFromMagneticNorth) hash ^= DegreesClockwiseFromMagneticNorth.GetHashCode();
      if (HasCaption) hash ^= Caption.GetHashCode();
      if (HasSequenceNumber) hash ^= SequenceNumber.GetHashCode();
      if (HasTimeOffset) hash ^= TimeOffset.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDegreesLatitude) {
        output.WriteRawTag(9);
        output.WriteDouble(DegreesLatitude);
      }
      if (HasDegreesLongitude) {
        output.WriteRawTag(17);
        output.WriteDouble(DegreesLongitude);
      }
      if (HasAccuracyInMeters) {
        output.WriteRawTag(24);
        output.WriteUInt32(AccuracyInMeters);
      }
      if (HasSpeedInMps) {
        output.WriteRawTag(37);
        output.WriteFloat(SpeedInMps);
      }
      if (HasDegreesClockwiseFromMagneticNorth) {
        output.WriteRawTag(40);
        output.WriteUInt32(DegreesClockwiseFromMagneticNorth);
      }
      if (HasCaption) {
        output.WriteRawTag(50);
        output.WriteString(Caption);
      }
      if (HasSequenceNumber) {
        output.WriteRawTag(56);
        output.WriteInt64(SequenceNumber);
      }
      if (HasTimeOffset) {
        output.WriteRawTag(64);
        output.WriteUInt32(TimeOffset);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDegreesLatitude) {
        output.WriteRawTag(9);
        output.WriteDouble(DegreesLatitude);
      }
      if (HasDegreesLongitude) {
        output.WriteRawTag(17);
        output.WriteDouble(DegreesLongitude);
      }
      if (HasAccuracyInMeters) {
        output.WriteRawTag(24);
        output.WriteUInt32(AccuracyInMeters);
      }
      if (HasSpeedInMps) {
        output.WriteRawTag(37);
        output.WriteFloat(SpeedInMps);
      }
      if (HasDegreesClockwiseFromMagneticNorth) {
        output.WriteRawTag(40);
        output.WriteUInt32(DegreesClockwiseFromMagneticNorth);
      }
      if (HasCaption) {
        output.WriteRawTag(50);
        output.WriteString(Caption);
      }
      if (HasSequenceNumber) {
        output.WriteRawTag(56);
        output.WriteInt64(SequenceNumber);
      }
      if (HasTimeOffset) {
        output.WriteRawTag(64);
        output.WriteUInt32(TimeOffset);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDegreesLatitude) {
        size += 1 + 8;
      }
      if (HasDegreesLongitude) {
        size += 1 + 8;
      }
      if (HasAccuracyInMeters) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccuracyInMeters);
      }
      if (HasSpeedInMps) {
        size += 1 + 4;
      }
      if (HasDegreesClockwiseFromMagneticNorth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DegreesClockwiseFromMagneticNorth);
      }
      if (HasCaption) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (HasSequenceNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNumber);
      }
      if (HasTimeOffset) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOffset);
      }
      if (HasJpegThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LiveLocationMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasDegreesLatitude) {
        DegreesLatitude = other.DegreesLatitude;
      }
      if (other.HasDegreesLongitude) {
        DegreesLongitude = other.DegreesLongitude;
      }
      if (other.HasAccuracyInMeters) {
        AccuracyInMeters = other.AccuracyInMeters;
      }
      if (other.HasSpeedInMps) {
        SpeedInMps = other.SpeedInMps;
      }
      if (other.HasDegreesClockwiseFromMagneticNorth) {
        DegreesClockwiseFromMagneticNorth = other.DegreesClockwiseFromMagneticNorth;
      }
      if (other.HasCaption) {
        Caption = other.Caption;
      }
      if (other.HasSequenceNumber) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.HasTimeOffset) {
        TimeOffset = other.TimeOffset;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DegreesLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            DegreesLongitude = input.ReadDouble();
            break;
          }
          case 24: {
            AccuracyInMeters = input.ReadUInt32();
            break;
          }
          case 37: {
            SpeedInMps = input.ReadFloat();
            break;
          }
          case 40: {
            DegreesClockwiseFromMagneticNorth = input.ReadUInt32();
            break;
          }
          case 50: {
            Caption = input.ReadString();
            break;
          }
          case 56: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 64: {
            TimeOffset = input.ReadUInt32();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            DegreesLatitude = input.ReadDouble();
            break;
          }
          case 17: {
            DegreesLongitude = input.ReadDouble();
            break;
          }
          case 24: {
            AccuracyInMeters = input.ReadUInt32();
            break;
          }
          case 37: {
            SpeedInMps = input.ReadFloat();
            break;
          }
          case 40: {
            DegreesClockwiseFromMagneticNorth = input.ReadUInt32();
            break;
          }
          case 50: {
            Caption = input.ReadString();
            break;
          }
          case 56: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 64: {
            TimeOffset = input.ReadUInt32();
            break;
          }
          case 130: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class StickerMessage : pb::IMessage<StickerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StickerMessage> _parser = new pb::MessageParser<StickerMessage>(() => new StickerMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StickerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StickerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StickerMessage(StickerMessage other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      fileSha256_ = other.fileSha256_;
      fileEncSha256_ = other.fileEncSha256_;
      mediaKey_ = other.mediaKey_;
      mimetype_ = other.mimetype_;
      height_ = other.height_;
      width_ = other.width_;
      directPath_ = other.directPath_;
      fileLength_ = other.fileLength_;
      mediaKeyTimestamp_ = other.mediaKeyTimestamp_;
      firstFrameLength_ = other.firstFrameLength_;
      firstFrameSidecar_ = other.firstFrameSidecar_;
      isAnimated_ = other.isAnimated_;
      pngThumbnail_ = other.pngThumbnail_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StickerMessage Clone() {
      return new StickerMessage(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "fileSha256" field.</summary>
    public const int FileSha256FieldNumber = 2;
    private readonly static pb::ByteString FileSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileSha256 {
      get { return fileSha256_ ?? FileSha256DefaultValue; }
      set {
        fileSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSha256 {
      get { return fileSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSha256() {
      fileSha256_ = null;
    }

    /// <summary>Field number for the "fileEncSha256" field.</summary>
    public const int FileEncSha256FieldNumber = 3;
    private readonly static pb::ByteString FileEncSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString fileEncSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileEncSha256 {
      get { return fileEncSha256_ ?? FileEncSha256DefaultValue; }
      set {
        fileEncSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileEncSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileEncSha256 {
      get { return fileEncSha256_ != null; }
    }
    /// <summary>Clears the value of the "fileEncSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileEncSha256() {
      fileEncSha256_ = null;
    }

    /// <summary>Field number for the "mediaKey" field.</summary>
    public const int MediaKeyFieldNumber = 4;
    private readonly static pb::ByteString MediaKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaKey {
      get { return mediaKey_ ?? MediaKeyDefaultValue; }
      set {
        mediaKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaKey" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKey {
      get { return mediaKey_ != null; }
    }
    /// <summary>Clears the value of the "mediaKey" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKey() {
      mediaKey_ = null;
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 5;
    private readonly static string MimetypeDefaultValue = "";

    private string mimetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_ ?? MimetypeDefaultValue; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mimetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMimetype {
      get { return mimetype_ != null; }
    }
    /// <summary>Clears the value of the "mimetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMimetype() {
      mimetype_ = null;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 6;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { if ((_hasBits0 & 1) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 1;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeight {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeight() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 7;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "directPath" field.</summary>
    public const int DirectPathFieldNumber = 8;
    private readonly static string DirectPathDefaultValue = "";

    private string directPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DirectPath {
      get { return directPath_ ?? DirectPathDefaultValue; }
      set {
        directPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "directPath" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirectPath {
      get { return directPath_ != null; }
    }
    /// <summary>Clears the value of the "directPath" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirectPath() {
      directPath_ = null;
    }

    /// <summary>Field number for the "fileLength" field.</summary>
    public const int FileLengthFieldNumber = 9;
    private readonly static ulong FileLengthDefaultValue = 0UL;

    private ulong fileLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FileLength {
      get { if ((_hasBits0 & 4) != 0) { return fileLength_; } else { return FileLengthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fileLength_ = value;
      }
    }
    /// <summary>Gets whether the "fileLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileLength {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fileLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileLength() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mediaKeyTimestamp" field.</summary>
    public const int MediaKeyTimestampFieldNumber = 10;
    private readonly static long MediaKeyTimestampDefaultValue = 0L;

    private long mediaKeyTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MediaKeyTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return mediaKeyTimestamp_; } else { return MediaKeyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mediaKeyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "mediaKeyTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaKeyTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mediaKeyTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaKeyTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "firstFrameLength" field.</summary>
    public const int FirstFrameLengthFieldNumber = 11;
    private readonly static uint FirstFrameLengthDefaultValue = 0;

    private uint firstFrameLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FirstFrameLength {
      get { if ((_hasBits0 & 16) != 0) { return firstFrameLength_; } else { return FirstFrameLengthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        firstFrameLength_ = value;
      }
    }
    /// <summary>Gets whether the "firstFrameLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstFrameLength {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "firstFrameLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstFrameLength() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "firstFrameSidecar" field.</summary>
    public const int FirstFrameSidecarFieldNumber = 12;
    private readonly static pb::ByteString FirstFrameSidecarDefaultValue = pb::ByteString.Empty;

    private pb::ByteString firstFrameSidecar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FirstFrameSidecar {
      get { return firstFrameSidecar_ ?? FirstFrameSidecarDefaultValue; }
      set {
        firstFrameSidecar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "firstFrameSidecar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstFrameSidecar {
      get { return firstFrameSidecar_ != null; }
    }
    /// <summary>Clears the value of the "firstFrameSidecar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstFrameSidecar() {
      firstFrameSidecar_ = null;
    }

    /// <summary>Field number for the "isAnimated" field.</summary>
    public const int IsAnimatedFieldNumber = 13;
    private readonly static bool IsAnimatedDefaultValue = false;

    private bool isAnimated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAnimated {
      get { if ((_hasBits0 & 32) != 0) { return isAnimated_; } else { return IsAnimatedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        isAnimated_ = value;
      }
    }
    /// <summary>Gets whether the "isAnimated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsAnimated {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "isAnimated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsAnimated() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "pngThumbnail" field.</summary>
    public const int PngThumbnailFieldNumber = 16;
    private readonly static pb::ByteString PngThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString pngThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PngThumbnail {
      get { return pngThumbnail_ ?? PngThumbnailDefaultValue; }
      set {
        pngThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pngThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPngThumbnail {
      get { return pngThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "pngThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPngThumbnail() {
      pngThumbnail_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StickerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StickerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (FileSha256 != other.FileSha256) return false;
      if (FileEncSha256 != other.FileEncSha256) return false;
      if (MediaKey != other.MediaKey) return false;
      if (Mimetype != other.Mimetype) return false;
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if (DirectPath != other.DirectPath) return false;
      if (FileLength != other.FileLength) return false;
      if (MediaKeyTimestamp != other.MediaKeyTimestamp) return false;
      if (FirstFrameLength != other.FirstFrameLength) return false;
      if (FirstFrameSidecar != other.FirstFrameSidecar) return false;
      if (IsAnimated != other.IsAnimated) return false;
      if (PngThumbnail != other.PngThumbnail) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasFileSha256) hash ^= FileSha256.GetHashCode();
      if (HasFileEncSha256) hash ^= FileEncSha256.GetHashCode();
      if (HasMediaKey) hash ^= MediaKey.GetHashCode();
      if (HasMimetype) hash ^= Mimetype.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasDirectPath) hash ^= DirectPath.GetHashCode();
      if (HasFileLength) hash ^= FileLength.GetHashCode();
      if (HasMediaKeyTimestamp) hash ^= MediaKeyTimestamp.GetHashCode();
      if (HasFirstFrameLength) hash ^= FirstFrameLength.GetHashCode();
      if (HasFirstFrameSidecar) hash ^= FirstFrameSidecar.GetHashCode();
      if (HasIsAnimated) hash ^= IsAnimated.GetHashCode();
      if (HasPngThumbnail) hash ^= PngThumbnail.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasFileSha256) {
        output.WriteRawTag(18);
        output.WriteBytes(FileSha256);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(26);
        output.WriteBytes(FileEncSha256);
      }
      if (HasMediaKey) {
        output.WriteRawTag(34);
        output.WriteBytes(MediaKey);
      }
      if (HasMimetype) {
        output.WriteRawTag(42);
        output.WriteString(Mimetype);
      }
      if (HasHeight) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height);
      }
      if (HasWidth) {
        output.WriteRawTag(56);
        output.WriteUInt32(Width);
      }
      if (HasDirectPath) {
        output.WriteRawTag(66);
        output.WriteString(DirectPath);
      }
      if (HasFileLength) {
        output.WriteRawTag(72);
        output.WriteUInt64(FileLength);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasFirstFrameLength) {
        output.WriteRawTag(88);
        output.WriteUInt32(FirstFrameLength);
      }
      if (HasFirstFrameSidecar) {
        output.WriteRawTag(98);
        output.WriteBytes(FirstFrameSidecar);
      }
      if (HasIsAnimated) {
        output.WriteRawTag(104);
        output.WriteBool(IsAnimated);
      }
      if (HasPngThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(PngThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasFileSha256) {
        output.WriteRawTag(18);
        output.WriteBytes(FileSha256);
      }
      if (HasFileEncSha256) {
        output.WriteRawTag(26);
        output.WriteBytes(FileEncSha256);
      }
      if (HasMediaKey) {
        output.WriteRawTag(34);
        output.WriteBytes(MediaKey);
      }
      if (HasMimetype) {
        output.WriteRawTag(42);
        output.WriteString(Mimetype);
      }
      if (HasHeight) {
        output.WriteRawTag(48);
        output.WriteUInt32(Height);
      }
      if (HasWidth) {
        output.WriteRawTag(56);
        output.WriteUInt32(Width);
      }
      if (HasDirectPath) {
        output.WriteRawTag(66);
        output.WriteString(DirectPath);
      }
      if (HasFileLength) {
        output.WriteRawTag(72);
        output.WriteUInt64(FileLength);
      }
      if (HasMediaKeyTimestamp) {
        output.WriteRawTag(80);
        output.WriteInt64(MediaKeyTimestamp);
      }
      if (HasFirstFrameLength) {
        output.WriteRawTag(88);
        output.WriteUInt32(FirstFrameLength);
      }
      if (HasFirstFrameSidecar) {
        output.WriteRawTag(98);
        output.WriteBytes(FirstFrameSidecar);
      }
      if (HasIsAnimated) {
        output.WriteRawTag(104);
        output.WriteBool(IsAnimated);
      }
      if (HasPngThumbnail) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(PngThumbnail);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasFileSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileSha256);
      }
      if (HasFileEncSha256) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileEncSha256);
      }
      if (HasMediaKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MediaKey);
      }
      if (HasMimetype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasDirectPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DirectPath);
      }
      if (HasFileLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileLength);
      }
      if (HasMediaKeyTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MediaKeyTimestamp);
      }
      if (HasFirstFrameLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstFrameLength);
      }
      if (HasFirstFrameSidecar) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FirstFrameSidecar);
      }
      if (HasIsAnimated) {
        size += 1 + 1;
      }
      if (HasPngThumbnail) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(PngThumbnail);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StickerMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasFileSha256) {
        FileSha256 = other.FileSha256;
      }
      if (other.HasFileEncSha256) {
        FileEncSha256 = other.FileEncSha256;
      }
      if (other.HasMediaKey) {
        MediaKey = other.MediaKey;
      }
      if (other.HasMimetype) {
        Mimetype = other.Mimetype;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasDirectPath) {
        DirectPath = other.DirectPath;
      }
      if (other.HasFileLength) {
        FileLength = other.FileLength;
      }
      if (other.HasMediaKeyTimestamp) {
        MediaKeyTimestamp = other.MediaKeyTimestamp;
      }
      if (other.HasFirstFrameLength) {
        FirstFrameLength = other.FirstFrameLength;
      }
      if (other.HasFirstFrameSidecar) {
        FirstFrameSidecar = other.FirstFrameSidecar;
      }
      if (other.HasIsAnimated) {
        IsAnimated = other.IsAnimated;
      }
      if (other.HasPngThumbnail) {
        PngThumbnail = other.PngThumbnail;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 26: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 34: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 42: {
            Mimetype = input.ReadString();
            break;
          }
          case 48: {
            Height = input.ReadUInt32();
            break;
          }
          case 56: {
            Width = input.ReadUInt32();
            break;
          }
          case 66: {
            DirectPath = input.ReadString();
            break;
          }
          case 72: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 80: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 88: {
            FirstFrameLength = input.ReadUInt32();
            break;
          }
          case 98: {
            FirstFrameSidecar = input.ReadBytes();
            break;
          }
          case 104: {
            IsAnimated = input.ReadBool();
            break;
          }
          case 130: {
            PngThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            FileSha256 = input.ReadBytes();
            break;
          }
          case 26: {
            FileEncSha256 = input.ReadBytes();
            break;
          }
          case 34: {
            MediaKey = input.ReadBytes();
            break;
          }
          case 42: {
            Mimetype = input.ReadString();
            break;
          }
          case 48: {
            Height = input.ReadUInt32();
            break;
          }
          case 56: {
            Width = input.ReadUInt32();
            break;
          }
          case 66: {
            DirectPath = input.ReadString();
            break;
          }
          case 72: {
            FileLength = input.ReadUInt64();
            break;
          }
          case 80: {
            MediaKeyTimestamp = input.ReadInt64();
            break;
          }
          case 88: {
            FirstFrameLength = input.ReadUInt32();
            break;
          }
          case 98: {
            FirstFrameSidecar = input.ReadBytes();
            break;
          }
          case 104: {
            IsAnimated = input.ReadBool();
            break;
          }
          case 130: {
            PngThumbnail = input.ReadBytes();
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class FourRowTemplate : pb::IMessage<FourRowTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FourRowTemplate> _parser = new pb::MessageParser<FourRowTemplate>(() => new FourRowTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FourRowTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FourRowTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FourRowTemplate(FourRowTemplate other) : this() {
      content_ = other.content_ != null ? other.content_.Clone() : null;
      footer_ = other.footer_ != null ? other.footer_.Clone() : null;
      buttons_ = other.buttons_.Clone();
      switch (other.TitleCase) {
        case TitleOneofCase.DocumentMessage:
          DocumentMessage = other.DocumentMessage.Clone();
          break;
        case TitleOneofCase.HighlyStructuredMessage:
          HighlyStructuredMessage = other.HighlyStructuredMessage.Clone();
          break;
        case TitleOneofCase.ImageMessage:
          ImageMessage = other.ImageMessage.Clone();
          break;
        case TitleOneofCase.VideoMessage:
          VideoMessage = other.VideoMessage.Clone();
          break;
        case TitleOneofCase.LocationMessage:
          LocationMessage = other.LocationMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FourRowTemplate Clone() {
      return new FourRowTemplate(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    /// <summary>Field number for the "footer" field.</summary>
    public const int FooterFieldNumber = 7;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage footer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage Footer {
      get { return footer_; }
      set {
        footer_ = value;
      }
    }

    /// <summary>Field number for the "buttons" field.</summary>
    public const int ButtonsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.TemplateButton> _repeated_buttons_codec
        = pb::FieldCodec.ForMessage(66, global::waxnet.Internal.Proto.TemplateButton.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.TemplateButton> buttons_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.TemplateButton>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.TemplateButton> Buttons {
      get { return buttons_; }
    }

    /// <summary>Field number for the "documentMessage" field.</summary>
    public const int DocumentMessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.DocumentMessage DocumentMessage {
      get { return titleCase_ == TitleOneofCase.DocumentMessage ? (global::waxnet.Internal.Proto.DocumentMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.DocumentMessage;
      }
    }

    /// <summary>Field number for the "highlyStructuredMessage" field.</summary>
    public const int HighlyStructuredMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage HighlyStructuredMessage {
      get { return titleCase_ == TitleOneofCase.HighlyStructuredMessage ? (global::waxnet.Internal.Proto.HighlyStructuredMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.HighlyStructuredMessage;
      }
    }

    /// <summary>Field number for the "imageMessage" field.</summary>
    public const int ImageMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ImageMessage ImageMessage {
      get { return titleCase_ == TitleOneofCase.ImageMessage ? (global::waxnet.Internal.Proto.ImageMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.ImageMessage;
      }
    }

    /// <summary>Field number for the "videoMessage" field.</summary>
    public const int VideoMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.VideoMessage VideoMessage {
      get { return titleCase_ == TitleOneofCase.VideoMessage ? (global::waxnet.Internal.Proto.VideoMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.VideoMessage;
      }
    }

    /// <summary>Field number for the "locationMessage" field.</summary>
    public const int LocationMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.LocationMessage LocationMessage {
      get { return titleCase_ == TitleOneofCase.LocationMessage ? (global::waxnet.Internal.Proto.LocationMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.LocationMessage;
      }
    }

    private object title_;
    /// <summary>Enum of possible cases for the "title" oneof.</summary>
    public enum TitleOneofCase {
      None = 0,
      DocumentMessage = 1,
      HighlyStructuredMessage = 2,
      ImageMessage = 3,
      VideoMessage = 4,
      LocationMessage = 5,
    }
    private TitleOneofCase titleCase_ = TitleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleOneofCase TitleCase {
      get { return titleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      titleCase_ = TitleOneofCase.None;
      title_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FourRowTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FourRowTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Content, other.Content)) return false;
      if (!object.Equals(Footer, other.Footer)) return false;
      if(!buttons_.Equals(other.buttons_)) return false;
      if (!object.Equals(DocumentMessage, other.DocumentMessage)) return false;
      if (!object.Equals(HighlyStructuredMessage, other.HighlyStructuredMessage)) return false;
      if (!object.Equals(ImageMessage, other.ImageMessage)) return false;
      if (!object.Equals(VideoMessage, other.VideoMessage)) return false;
      if (!object.Equals(LocationMessage, other.LocationMessage)) return false;
      if (TitleCase != other.TitleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (content_ != null) hash ^= Content.GetHashCode();
      if (footer_ != null) hash ^= Footer.GetHashCode();
      hash ^= buttons_.GetHashCode();
      if (titleCase_ == TitleOneofCase.DocumentMessage) hash ^= DocumentMessage.GetHashCode();
      if (titleCase_ == TitleOneofCase.HighlyStructuredMessage) hash ^= HighlyStructuredMessage.GetHashCode();
      if (titleCase_ == TitleOneofCase.ImageMessage) hash ^= ImageMessage.GetHashCode();
      if (titleCase_ == TitleOneofCase.VideoMessage) hash ^= VideoMessage.GetHashCode();
      if (titleCase_ == TitleOneofCase.LocationMessage) hash ^= LocationMessage.GetHashCode();
      hash ^= (int) titleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (titleCase_ == TitleOneofCase.DocumentMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(DocumentMessage);
      }
      if (titleCase_ == TitleOneofCase.HighlyStructuredMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(HighlyStructuredMessage);
      }
      if (titleCase_ == TitleOneofCase.ImageMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageMessage);
      }
      if (titleCase_ == TitleOneofCase.VideoMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(VideoMessage);
      }
      if (titleCase_ == TitleOneofCase.LocationMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(LocationMessage);
      }
      if (content_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Content);
      }
      if (footer_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Footer);
      }
      buttons_.WriteTo(output, _repeated_buttons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (titleCase_ == TitleOneofCase.DocumentMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(DocumentMessage);
      }
      if (titleCase_ == TitleOneofCase.HighlyStructuredMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(HighlyStructuredMessage);
      }
      if (titleCase_ == TitleOneofCase.ImageMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageMessage);
      }
      if (titleCase_ == TitleOneofCase.VideoMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(VideoMessage);
      }
      if (titleCase_ == TitleOneofCase.LocationMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(LocationMessage);
      }
      if (content_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Content);
      }
      if (footer_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Footer);
      }
      buttons_.WriteTo(ref output, _repeated_buttons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (footer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Footer);
      }
      size += buttons_.CalculateSize(_repeated_buttons_codec);
      if (titleCase_ == TitleOneofCase.DocumentMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentMessage);
      }
      if (titleCase_ == TitleOneofCase.HighlyStructuredMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighlyStructuredMessage);
      }
      if (titleCase_ == TitleOneofCase.ImageMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageMessage);
      }
      if (titleCase_ == TitleOneofCase.VideoMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoMessage);
      }
      if (titleCase_ == TitleOneofCase.LocationMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FourRowTemplate other) {
      if (other == null) {
        return;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        Content.MergeFrom(other.Content);
      }
      if (other.footer_ != null) {
        if (footer_ == null) {
          Footer = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        Footer.MergeFrom(other.Footer);
      }
      buttons_.Add(other.buttons_);
      switch (other.TitleCase) {
        case TitleOneofCase.DocumentMessage:
          if (DocumentMessage == null) {
            DocumentMessage = new global::waxnet.Internal.Proto.DocumentMessage();
          }
          DocumentMessage.MergeFrom(other.DocumentMessage);
          break;
        case TitleOneofCase.HighlyStructuredMessage:
          if (HighlyStructuredMessage == null) {
            HighlyStructuredMessage = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
          }
          HighlyStructuredMessage.MergeFrom(other.HighlyStructuredMessage);
          break;
        case TitleOneofCase.ImageMessage:
          if (ImageMessage == null) {
            ImageMessage = new global::waxnet.Internal.Proto.ImageMessage();
          }
          ImageMessage.MergeFrom(other.ImageMessage);
          break;
        case TitleOneofCase.VideoMessage:
          if (VideoMessage == null) {
            VideoMessage = new global::waxnet.Internal.Proto.VideoMessage();
          }
          VideoMessage.MergeFrom(other.VideoMessage);
          break;
        case TitleOneofCase.LocationMessage:
          if (LocationMessage == null) {
            LocationMessage = new global::waxnet.Internal.Proto.LocationMessage();
          }
          LocationMessage.MergeFrom(other.LocationMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.DocumentMessage subBuilder = new global::waxnet.Internal.Proto.DocumentMessage();
            if (titleCase_ == TitleOneofCase.DocumentMessage) {
              subBuilder.MergeFrom(DocumentMessage);
            }
            input.ReadMessage(subBuilder);
            DocumentMessage = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HighlyStructuredMessage subBuilder = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            if (titleCase_ == TitleOneofCase.HighlyStructuredMessage) {
              subBuilder.MergeFrom(HighlyStructuredMessage);
            }
            input.ReadMessage(subBuilder);
            HighlyStructuredMessage = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.ImageMessage subBuilder = new global::waxnet.Internal.Proto.ImageMessage();
            if (titleCase_ == TitleOneofCase.ImageMessage) {
              subBuilder.MergeFrom(ImageMessage);
            }
            input.ReadMessage(subBuilder);
            ImageMessage = subBuilder;
            break;
          }
          case 34: {
            global::waxnet.Internal.Proto.VideoMessage subBuilder = new global::waxnet.Internal.Proto.VideoMessage();
            if (titleCase_ == TitleOneofCase.VideoMessage) {
              subBuilder.MergeFrom(VideoMessage);
            }
            input.ReadMessage(subBuilder);
            VideoMessage = subBuilder;
            break;
          }
          case 42: {
            global::waxnet.Internal.Proto.LocationMessage subBuilder = new global::waxnet.Internal.Proto.LocationMessage();
            if (titleCase_ == TitleOneofCase.LocationMessage) {
              subBuilder.MergeFrom(LocationMessage);
            }
            input.ReadMessage(subBuilder);
            LocationMessage = subBuilder;
            break;
          }
          case 50: {
            if (content_ == null) {
              Content = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(Content);
            break;
          }
          case 58: {
            if (footer_ == null) {
              Footer = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(Footer);
            break;
          }
          case 66: {
            buttons_.AddEntriesFrom(input, _repeated_buttons_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.DocumentMessage subBuilder = new global::waxnet.Internal.Proto.DocumentMessage();
            if (titleCase_ == TitleOneofCase.DocumentMessage) {
              subBuilder.MergeFrom(DocumentMessage);
            }
            input.ReadMessage(subBuilder);
            DocumentMessage = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HighlyStructuredMessage subBuilder = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            if (titleCase_ == TitleOneofCase.HighlyStructuredMessage) {
              subBuilder.MergeFrom(HighlyStructuredMessage);
            }
            input.ReadMessage(subBuilder);
            HighlyStructuredMessage = subBuilder;
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.ImageMessage subBuilder = new global::waxnet.Internal.Proto.ImageMessage();
            if (titleCase_ == TitleOneofCase.ImageMessage) {
              subBuilder.MergeFrom(ImageMessage);
            }
            input.ReadMessage(subBuilder);
            ImageMessage = subBuilder;
            break;
          }
          case 34: {
            global::waxnet.Internal.Proto.VideoMessage subBuilder = new global::waxnet.Internal.Proto.VideoMessage();
            if (titleCase_ == TitleOneofCase.VideoMessage) {
              subBuilder.MergeFrom(VideoMessage);
            }
            input.ReadMessage(subBuilder);
            VideoMessage = subBuilder;
            break;
          }
          case 42: {
            global::waxnet.Internal.Proto.LocationMessage subBuilder = new global::waxnet.Internal.Proto.LocationMessage();
            if (titleCase_ == TitleOneofCase.LocationMessage) {
              subBuilder.MergeFrom(LocationMessage);
            }
            input.ReadMessage(subBuilder);
            LocationMessage = subBuilder;
            break;
          }
          case 50: {
            if (content_ == null) {
              Content = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(Content);
            break;
          }
          case 58: {
            if (footer_ == null) {
              Footer = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(Footer);
            break;
          }
          case 66: {
            buttons_.AddEntriesFrom(ref input, _repeated_buttons_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HydratedFourRowTemplate : pb::IMessage<HydratedFourRowTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HydratedFourRowTemplate> _parser = new pb::MessageParser<HydratedFourRowTemplate>(() => new HydratedFourRowTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HydratedFourRowTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedFourRowTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedFourRowTemplate(HydratedFourRowTemplate other) : this() {
      hydratedContentText_ = other.hydratedContentText_;
      hydratedFooterText_ = other.hydratedFooterText_;
      hydratedButtons_ = other.hydratedButtons_.Clone();
      templateId_ = other.templateId_;
      switch (other.TitleCase) {
        case TitleOneofCase.DocumentMessage:
          DocumentMessage = other.DocumentMessage.Clone();
          break;
        case TitleOneofCase.HydratedTitleText:
          HydratedTitleText = other.HydratedTitleText;
          break;
        case TitleOneofCase.ImageMessage:
          ImageMessage = other.ImageMessage.Clone();
          break;
        case TitleOneofCase.VideoMessage:
          VideoMessage = other.VideoMessage.Clone();
          break;
        case TitleOneofCase.LocationMessage:
          LocationMessage = other.LocationMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HydratedFourRowTemplate Clone() {
      return new HydratedFourRowTemplate(this);
    }

    /// <summary>Field number for the "hydratedContentText" field.</summary>
    public const int HydratedContentTextFieldNumber = 6;
    private readonly static string HydratedContentTextDefaultValue = "";

    private string hydratedContentText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HydratedContentText {
      get { return hydratedContentText_ ?? HydratedContentTextDefaultValue; }
      set {
        hydratedContentText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hydratedContentText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHydratedContentText {
      get { return hydratedContentText_ != null; }
    }
    /// <summary>Clears the value of the "hydratedContentText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHydratedContentText() {
      hydratedContentText_ = null;
    }

    /// <summary>Field number for the "hydratedFooterText" field.</summary>
    public const int HydratedFooterTextFieldNumber = 7;
    private readonly static string HydratedFooterTextDefaultValue = "";

    private string hydratedFooterText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HydratedFooterText {
      get { return hydratedFooterText_ ?? HydratedFooterTextDefaultValue; }
      set {
        hydratedFooterText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hydratedFooterText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHydratedFooterText {
      get { return hydratedFooterText_ != null; }
    }
    /// <summary>Clears the value of the "hydratedFooterText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHydratedFooterText() {
      hydratedFooterText_ = null;
    }

    /// <summary>Field number for the "hydratedButtons" field.</summary>
    public const int HydratedButtonsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.HydratedTemplateButton> _repeated_hydratedButtons_codec
        = pb::FieldCodec.ForMessage(66, global::waxnet.Internal.Proto.HydratedTemplateButton.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.HydratedTemplateButton> hydratedButtons_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.HydratedTemplateButton>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.HydratedTemplateButton> HydratedButtons {
      get { return hydratedButtons_; }
    }

    /// <summary>Field number for the "templateId" field.</summary>
    public const int TemplateIdFieldNumber = 9;
    private readonly static string TemplateIdDefaultValue = "";

    private string templateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateId {
      get { return templateId_ ?? TemplateIdDefaultValue; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "templateId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTemplateId {
      get { return templateId_ != null; }
    }
    /// <summary>Clears the value of the "templateId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTemplateId() {
      templateId_ = null;
    }

    /// <summary>Field number for the "documentMessage" field.</summary>
    public const int DocumentMessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.DocumentMessage DocumentMessage {
      get { return titleCase_ == TitleOneofCase.DocumentMessage ? (global::waxnet.Internal.Proto.DocumentMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.DocumentMessage;
      }
    }

    /// <summary>Field number for the "hydratedTitleText" field.</summary>
    public const int HydratedTitleTextFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HydratedTitleText {
      get { return HasHydratedTitleText ? (string) title_ : ""; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        titleCase_ = TitleOneofCase.HydratedTitleText;
      }
    }
    /// <summary>Gets whether the "hydratedTitleText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHydratedTitleText {
      get { return titleCase_ == TitleOneofCase.HydratedTitleText; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "hydratedTitleText" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHydratedTitleText() {
      if (HasHydratedTitleText) {
        ClearTitle();
      }
    }

    /// <summary>Field number for the "imageMessage" field.</summary>
    public const int ImageMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ImageMessage ImageMessage {
      get { return titleCase_ == TitleOneofCase.ImageMessage ? (global::waxnet.Internal.Proto.ImageMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.ImageMessage;
      }
    }

    /// <summary>Field number for the "videoMessage" field.</summary>
    public const int VideoMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.VideoMessage VideoMessage {
      get { return titleCase_ == TitleOneofCase.VideoMessage ? (global::waxnet.Internal.Proto.VideoMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.VideoMessage;
      }
    }

    /// <summary>Field number for the "locationMessage" field.</summary>
    public const int LocationMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.LocationMessage LocationMessage {
      get { return titleCase_ == TitleOneofCase.LocationMessage ? (global::waxnet.Internal.Proto.LocationMessage) title_ : null; }
      set {
        title_ = value;
        titleCase_ = value == null ? TitleOneofCase.None : TitleOneofCase.LocationMessage;
      }
    }

    private object title_;
    /// <summary>Enum of possible cases for the "title" oneof.</summary>
    public enum TitleOneofCase {
      None = 0,
      DocumentMessage = 1,
      HydratedTitleText = 2,
      ImageMessage = 3,
      VideoMessage = 4,
      LocationMessage = 5,
    }
    private TitleOneofCase titleCase_ = TitleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleOneofCase TitleCase {
      get { return titleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      titleCase_ = TitleOneofCase.None;
      title_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HydratedFourRowTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HydratedFourRowTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HydratedContentText != other.HydratedContentText) return false;
      if (HydratedFooterText != other.HydratedFooterText) return false;
      if(!hydratedButtons_.Equals(other.hydratedButtons_)) return false;
      if (TemplateId != other.TemplateId) return false;
      if (!object.Equals(DocumentMessage, other.DocumentMessage)) return false;
      if (HydratedTitleText != other.HydratedTitleText) return false;
      if (!object.Equals(ImageMessage, other.ImageMessage)) return false;
      if (!object.Equals(VideoMessage, other.VideoMessage)) return false;
      if (!object.Equals(LocationMessage, other.LocationMessage)) return false;
      if (TitleCase != other.TitleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHydratedContentText) hash ^= HydratedContentText.GetHashCode();
      if (HasHydratedFooterText) hash ^= HydratedFooterText.GetHashCode();
      hash ^= hydratedButtons_.GetHashCode();
      if (HasTemplateId) hash ^= TemplateId.GetHashCode();
      if (titleCase_ == TitleOneofCase.DocumentMessage) hash ^= DocumentMessage.GetHashCode();
      if (HasHydratedTitleText) hash ^= HydratedTitleText.GetHashCode();
      if (titleCase_ == TitleOneofCase.ImageMessage) hash ^= ImageMessage.GetHashCode();
      if (titleCase_ == TitleOneofCase.VideoMessage) hash ^= VideoMessage.GetHashCode();
      if (titleCase_ == TitleOneofCase.LocationMessage) hash ^= LocationMessage.GetHashCode();
      hash ^= (int) titleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (titleCase_ == TitleOneofCase.DocumentMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(DocumentMessage);
      }
      if (HasHydratedTitleText) {
        output.WriteRawTag(18);
        output.WriteString(HydratedTitleText);
      }
      if (titleCase_ == TitleOneofCase.ImageMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageMessage);
      }
      if (titleCase_ == TitleOneofCase.VideoMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(VideoMessage);
      }
      if (titleCase_ == TitleOneofCase.LocationMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(LocationMessage);
      }
      if (HasHydratedContentText) {
        output.WriteRawTag(50);
        output.WriteString(HydratedContentText);
      }
      if (HasHydratedFooterText) {
        output.WriteRawTag(58);
        output.WriteString(HydratedFooterText);
      }
      hydratedButtons_.WriteTo(output, _repeated_hydratedButtons_codec);
      if (HasTemplateId) {
        output.WriteRawTag(74);
        output.WriteString(TemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (titleCase_ == TitleOneofCase.DocumentMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(DocumentMessage);
      }
      if (HasHydratedTitleText) {
        output.WriteRawTag(18);
        output.WriteString(HydratedTitleText);
      }
      if (titleCase_ == TitleOneofCase.ImageMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageMessage);
      }
      if (titleCase_ == TitleOneofCase.VideoMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(VideoMessage);
      }
      if (titleCase_ == TitleOneofCase.LocationMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(LocationMessage);
      }
      if (HasHydratedContentText) {
        output.WriteRawTag(50);
        output.WriteString(HydratedContentText);
      }
      if (HasHydratedFooterText) {
        output.WriteRawTag(58);
        output.WriteString(HydratedFooterText);
      }
      hydratedButtons_.WriteTo(ref output, _repeated_hydratedButtons_codec);
      if (HasTemplateId) {
        output.WriteRawTag(74);
        output.WriteString(TemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHydratedContentText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HydratedContentText);
      }
      if (HasHydratedFooterText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HydratedFooterText);
      }
      size += hydratedButtons_.CalculateSize(_repeated_hydratedButtons_codec);
      if (HasTemplateId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (titleCase_ == TitleOneofCase.DocumentMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentMessage);
      }
      if (HasHydratedTitleText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HydratedTitleText);
      }
      if (titleCase_ == TitleOneofCase.ImageMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageMessage);
      }
      if (titleCase_ == TitleOneofCase.VideoMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoMessage);
      }
      if (titleCase_ == TitleOneofCase.LocationMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HydratedFourRowTemplate other) {
      if (other == null) {
        return;
      }
      if (other.HasHydratedContentText) {
        HydratedContentText = other.HydratedContentText;
      }
      if (other.HasHydratedFooterText) {
        HydratedFooterText = other.HydratedFooterText;
      }
      hydratedButtons_.Add(other.hydratedButtons_);
      if (other.HasTemplateId) {
        TemplateId = other.TemplateId;
      }
      switch (other.TitleCase) {
        case TitleOneofCase.DocumentMessage:
          if (DocumentMessage == null) {
            DocumentMessage = new global::waxnet.Internal.Proto.DocumentMessage();
          }
          DocumentMessage.MergeFrom(other.DocumentMessage);
          break;
        case TitleOneofCase.HydratedTitleText:
          HydratedTitleText = other.HydratedTitleText;
          break;
        case TitleOneofCase.ImageMessage:
          if (ImageMessage == null) {
            ImageMessage = new global::waxnet.Internal.Proto.ImageMessage();
          }
          ImageMessage.MergeFrom(other.ImageMessage);
          break;
        case TitleOneofCase.VideoMessage:
          if (VideoMessage == null) {
            VideoMessage = new global::waxnet.Internal.Proto.VideoMessage();
          }
          VideoMessage.MergeFrom(other.VideoMessage);
          break;
        case TitleOneofCase.LocationMessage:
          if (LocationMessage == null) {
            LocationMessage = new global::waxnet.Internal.Proto.LocationMessage();
          }
          LocationMessage.MergeFrom(other.LocationMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.DocumentMessage subBuilder = new global::waxnet.Internal.Proto.DocumentMessage();
            if (titleCase_ == TitleOneofCase.DocumentMessage) {
              subBuilder.MergeFrom(DocumentMessage);
            }
            input.ReadMessage(subBuilder);
            DocumentMessage = subBuilder;
            break;
          }
          case 18: {
            HydratedTitleText = input.ReadString();
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.ImageMessage subBuilder = new global::waxnet.Internal.Proto.ImageMessage();
            if (titleCase_ == TitleOneofCase.ImageMessage) {
              subBuilder.MergeFrom(ImageMessage);
            }
            input.ReadMessage(subBuilder);
            ImageMessage = subBuilder;
            break;
          }
          case 34: {
            global::waxnet.Internal.Proto.VideoMessage subBuilder = new global::waxnet.Internal.Proto.VideoMessage();
            if (titleCase_ == TitleOneofCase.VideoMessage) {
              subBuilder.MergeFrom(VideoMessage);
            }
            input.ReadMessage(subBuilder);
            VideoMessage = subBuilder;
            break;
          }
          case 42: {
            global::waxnet.Internal.Proto.LocationMessage subBuilder = new global::waxnet.Internal.Proto.LocationMessage();
            if (titleCase_ == TitleOneofCase.LocationMessage) {
              subBuilder.MergeFrom(LocationMessage);
            }
            input.ReadMessage(subBuilder);
            LocationMessage = subBuilder;
            break;
          }
          case 50: {
            HydratedContentText = input.ReadString();
            break;
          }
          case 58: {
            HydratedFooterText = input.ReadString();
            break;
          }
          case 66: {
            hydratedButtons_.AddEntriesFrom(input, _repeated_hydratedButtons_codec);
            break;
          }
          case 74: {
            TemplateId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.DocumentMessage subBuilder = new global::waxnet.Internal.Proto.DocumentMessage();
            if (titleCase_ == TitleOneofCase.DocumentMessage) {
              subBuilder.MergeFrom(DocumentMessage);
            }
            input.ReadMessage(subBuilder);
            DocumentMessage = subBuilder;
            break;
          }
          case 18: {
            HydratedTitleText = input.ReadString();
            break;
          }
          case 26: {
            global::waxnet.Internal.Proto.ImageMessage subBuilder = new global::waxnet.Internal.Proto.ImageMessage();
            if (titleCase_ == TitleOneofCase.ImageMessage) {
              subBuilder.MergeFrom(ImageMessage);
            }
            input.ReadMessage(subBuilder);
            ImageMessage = subBuilder;
            break;
          }
          case 34: {
            global::waxnet.Internal.Proto.VideoMessage subBuilder = new global::waxnet.Internal.Proto.VideoMessage();
            if (titleCase_ == TitleOneofCase.VideoMessage) {
              subBuilder.MergeFrom(VideoMessage);
            }
            input.ReadMessage(subBuilder);
            VideoMessage = subBuilder;
            break;
          }
          case 42: {
            global::waxnet.Internal.Proto.LocationMessage subBuilder = new global::waxnet.Internal.Proto.LocationMessage();
            if (titleCase_ == TitleOneofCase.LocationMessage) {
              subBuilder.MergeFrom(LocationMessage);
            }
            input.ReadMessage(subBuilder);
            LocationMessage = subBuilder;
            break;
          }
          case 50: {
            HydratedContentText = input.ReadString();
            break;
          }
          case 58: {
            HydratedFooterText = input.ReadString();
            break;
          }
          case 66: {
            hydratedButtons_.AddEntriesFrom(ref input, _repeated_hydratedButtons_codec);
            break;
          }
          case 74: {
            TemplateId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TemplateMessage : pb::IMessage<TemplateMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TemplateMessage> _parser = new pb::MessageParser<TemplateMessage>(() => new TemplateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateMessage(TemplateMessage other) : this() {
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      hydratedTemplate_ = other.hydratedTemplate_ != null ? other.hydratedTemplate_.Clone() : null;
      switch (other.FormatCase) {
        case FormatOneofCase.FourRowTemplate:
          FourRowTemplate = other.FourRowTemplate.Clone();
          break;
        case FormatOneofCase.HydratedFourRowTemplate:
          HydratedFourRowTemplate = other.HydratedFourRowTemplate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateMessage Clone() {
      return new TemplateMessage(this);
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 3;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    /// <summary>Field number for the "hydratedTemplate" field.</summary>
    public const int HydratedTemplateFieldNumber = 4;
    private global::waxnet.Internal.Proto.HydratedFourRowTemplate hydratedTemplate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HydratedFourRowTemplate HydratedTemplate {
      get { return hydratedTemplate_; }
      set {
        hydratedTemplate_ = value;
      }
    }

    /// <summary>Field number for the "fourRowTemplate" field.</summary>
    public const int FourRowTemplateFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.FourRowTemplate FourRowTemplate {
      get { return formatCase_ == FormatOneofCase.FourRowTemplate ? (global::waxnet.Internal.Proto.FourRowTemplate) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.FourRowTemplate;
      }
    }

    /// <summary>Field number for the "hydratedFourRowTemplate" field.</summary>
    public const int HydratedFourRowTemplateFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HydratedFourRowTemplate HydratedFourRowTemplate {
      get { return formatCase_ == FormatOneofCase.HydratedFourRowTemplate ? (global::waxnet.Internal.Proto.HydratedFourRowTemplate) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.HydratedFourRowTemplate;
      }
    }

    private object format_;
    /// <summary>Enum of possible cases for the "format" oneof.</summary>
    public enum FormatOneofCase {
      None = 0,
      FourRowTemplate = 1,
      HydratedFourRowTemplate = 2,
    }
    private FormatOneofCase formatCase_ = FormatOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormatOneofCase FormatCase {
      get { return formatCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormat() {
      formatCase_ = FormatOneofCase.None;
      format_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      if (!object.Equals(HydratedTemplate, other.HydratedTemplate)) return false;
      if (!object.Equals(FourRowTemplate, other.FourRowTemplate)) return false;
      if (!object.Equals(HydratedFourRowTemplate, other.HydratedFourRowTemplate)) return false;
      if (FormatCase != other.FormatCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (hydratedTemplate_ != null) hash ^= HydratedTemplate.GetHashCode();
      if (formatCase_ == FormatOneofCase.FourRowTemplate) hash ^= FourRowTemplate.GetHashCode();
      if (formatCase_ == FormatOneofCase.HydratedFourRowTemplate) hash ^= HydratedFourRowTemplate.GetHashCode();
      hash ^= (int) formatCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (formatCase_ == FormatOneofCase.FourRowTemplate) {
        output.WriteRawTag(10);
        output.WriteMessage(FourRowTemplate);
      }
      if (formatCase_ == FormatOneofCase.HydratedFourRowTemplate) {
        output.WriteRawTag(18);
        output.WriteMessage(HydratedFourRowTemplate);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContextInfo);
      }
      if (hydratedTemplate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HydratedTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (formatCase_ == FormatOneofCase.FourRowTemplate) {
        output.WriteRawTag(10);
        output.WriteMessage(FourRowTemplate);
      }
      if (formatCase_ == FormatOneofCase.HydratedFourRowTemplate) {
        output.WriteRawTag(18);
        output.WriteMessage(HydratedFourRowTemplate);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContextInfo);
      }
      if (hydratedTemplate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HydratedTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contextInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (hydratedTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HydratedTemplate);
      }
      if (formatCase_ == FormatOneofCase.FourRowTemplate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FourRowTemplate);
      }
      if (formatCase_ == FormatOneofCase.HydratedFourRowTemplate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HydratedFourRowTemplate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateMessage other) {
      if (other == null) {
        return;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      if (other.hydratedTemplate_ != null) {
        if (hydratedTemplate_ == null) {
          HydratedTemplate = new global::waxnet.Internal.Proto.HydratedFourRowTemplate();
        }
        HydratedTemplate.MergeFrom(other.HydratedTemplate);
      }
      switch (other.FormatCase) {
        case FormatOneofCase.FourRowTemplate:
          if (FourRowTemplate == null) {
            FourRowTemplate = new global::waxnet.Internal.Proto.FourRowTemplate();
          }
          FourRowTemplate.MergeFrom(other.FourRowTemplate);
          break;
        case FormatOneofCase.HydratedFourRowTemplate:
          if (HydratedFourRowTemplate == null) {
            HydratedFourRowTemplate = new global::waxnet.Internal.Proto.HydratedFourRowTemplate();
          }
          HydratedFourRowTemplate.MergeFrom(other.HydratedFourRowTemplate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.FourRowTemplate subBuilder = new global::waxnet.Internal.Proto.FourRowTemplate();
            if (formatCase_ == FormatOneofCase.FourRowTemplate) {
              subBuilder.MergeFrom(FourRowTemplate);
            }
            input.ReadMessage(subBuilder);
            FourRowTemplate = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HydratedFourRowTemplate subBuilder = new global::waxnet.Internal.Proto.HydratedFourRowTemplate();
            if (formatCase_ == FormatOneofCase.HydratedFourRowTemplate) {
              subBuilder.MergeFrom(HydratedFourRowTemplate);
            }
            input.ReadMessage(subBuilder);
            HydratedFourRowTemplate = subBuilder;
            break;
          }
          case 26: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 34: {
            if (hydratedTemplate_ == null) {
              HydratedTemplate = new global::waxnet.Internal.Proto.HydratedFourRowTemplate();
            }
            input.ReadMessage(HydratedTemplate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::waxnet.Internal.Proto.FourRowTemplate subBuilder = new global::waxnet.Internal.Proto.FourRowTemplate();
            if (formatCase_ == FormatOneofCase.FourRowTemplate) {
              subBuilder.MergeFrom(FourRowTemplate);
            }
            input.ReadMessage(subBuilder);
            FourRowTemplate = subBuilder;
            break;
          }
          case 18: {
            global::waxnet.Internal.Proto.HydratedFourRowTemplate subBuilder = new global::waxnet.Internal.Proto.HydratedFourRowTemplate();
            if (formatCase_ == FormatOneofCase.HydratedFourRowTemplate) {
              subBuilder.MergeFrom(HydratedFourRowTemplate);
            }
            input.ReadMessage(subBuilder);
            HydratedFourRowTemplate = subBuilder;
            break;
          }
          case 26: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 34: {
            if (hydratedTemplate_ == null) {
              HydratedTemplate = new global::waxnet.Internal.Proto.HydratedFourRowTemplate();
            }
            input.ReadMessage(HydratedTemplate);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TemplateButtonReplyMessage : pb::IMessage<TemplateButtonReplyMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TemplateButtonReplyMessage> _parser = new pb::MessageParser<TemplateButtonReplyMessage>(() => new TemplateButtonReplyMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateButtonReplyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateButtonReplyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateButtonReplyMessage(TemplateButtonReplyMessage other) : this() {
      _hasBits0 = other._hasBits0;
      selectedId_ = other.selectedId_;
      selectedDisplayText_ = other.selectedDisplayText_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      selectedIndex_ = other.selectedIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateButtonReplyMessage Clone() {
      return new TemplateButtonReplyMessage(this);
    }

    /// <summary>Field number for the "selectedId" field.</summary>
    public const int SelectedIdFieldNumber = 1;
    private readonly static string SelectedIdDefaultValue = "";

    private string selectedId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelectedId {
      get { return selectedId_ ?? SelectedIdDefaultValue; }
      set {
        selectedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "selectedId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSelectedId {
      get { return selectedId_ != null; }
    }
    /// <summary>Clears the value of the "selectedId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSelectedId() {
      selectedId_ = null;
    }

    /// <summary>Field number for the "selectedDisplayText" field.</summary>
    public const int SelectedDisplayTextFieldNumber = 2;
    private readonly static string SelectedDisplayTextDefaultValue = "";

    private string selectedDisplayText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelectedDisplayText {
      get { return selectedDisplayText_ ?? SelectedDisplayTextDefaultValue; }
      set {
        selectedDisplayText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "selectedDisplayText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSelectedDisplayText {
      get { return selectedDisplayText_ != null; }
    }
    /// <summary>Clears the value of the "selectedDisplayText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSelectedDisplayText() {
      selectedDisplayText_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 3;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    /// <summary>Field number for the "selectedIndex" field.</summary>
    public const int SelectedIndexFieldNumber = 4;
    private readonly static uint SelectedIndexDefaultValue = 0;

    private uint selectedIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SelectedIndex {
      get { if ((_hasBits0 & 1) != 0) { return selectedIndex_; } else { return SelectedIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        selectedIndex_ = value;
      }
    }
    /// <summary>Gets whether the "selectedIndex" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSelectedIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "selectedIndex" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSelectedIndex() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateButtonReplyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateButtonReplyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelectedId != other.SelectedId) return false;
      if (SelectedDisplayText != other.SelectedDisplayText) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      if (SelectedIndex != other.SelectedIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSelectedId) hash ^= SelectedId.GetHashCode();
      if (HasSelectedDisplayText) hash ^= SelectedDisplayText.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (HasSelectedIndex) hash ^= SelectedIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSelectedId) {
        output.WriteRawTag(10);
        output.WriteString(SelectedId);
      }
      if (HasSelectedDisplayText) {
        output.WriteRawTag(18);
        output.WriteString(SelectedDisplayText);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContextInfo);
      }
      if (HasSelectedIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(SelectedIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSelectedId) {
        output.WriteRawTag(10);
        output.WriteString(SelectedId);
      }
      if (HasSelectedDisplayText) {
        output.WriteRawTag(18);
        output.WriteString(SelectedDisplayText);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContextInfo);
      }
      if (HasSelectedIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(SelectedIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSelectedId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectedId);
      }
      if (HasSelectedDisplayText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectedDisplayText);
      }
      if (contextInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (HasSelectedIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SelectedIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateButtonReplyMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasSelectedId) {
        SelectedId = other.SelectedId;
      }
      if (other.HasSelectedDisplayText) {
        SelectedDisplayText = other.SelectedDisplayText;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      if (other.HasSelectedIndex) {
        SelectedIndex = other.SelectedIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SelectedId = input.ReadString();
            break;
          }
          case 18: {
            SelectedDisplayText = input.ReadString();
            break;
          }
          case 26: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 32: {
            SelectedIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SelectedId = input.ReadString();
            break;
          }
          case 18: {
            SelectedDisplayText = input.ReadString();
            break;
          }
          case 26: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
          case 32: {
            SelectedIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class CatalogSnapshot : pb::IMessage<CatalogSnapshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CatalogSnapshot> _parser = new pb::MessageParser<CatalogSnapshot>(() => new CatalogSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatalogSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogSnapshot(CatalogSnapshot other) : this() {
      catalogImage_ = other.catalogImage_ != null ? other.catalogImage_.Clone() : null;
      title_ = other.title_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatalogSnapshot Clone() {
      return new CatalogSnapshot(this);
    }

    /// <summary>Field number for the "catalogImage" field.</summary>
    public const int CatalogImageFieldNumber = 1;
    private global::waxnet.Internal.Proto.ImageMessage catalogImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ImageMessage CatalogImage {
      get { return catalogImage_; }
      set {
        catalogImage_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatalogSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatalogSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CatalogImage, other.CatalogImage)) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (catalogImage_ != null) hash ^= CatalogImage.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (catalogImage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CatalogImage);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (catalogImage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CatalogImage);
      }
      if (HasTitle) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (catalogImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CatalogImage);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatalogSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.catalogImage_ != null) {
        if (catalogImage_ == null) {
          CatalogImage = new global::waxnet.Internal.Proto.ImageMessage();
        }
        CatalogImage.MergeFrom(other.CatalogImage);
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (catalogImage_ == null) {
              CatalogImage = new global::waxnet.Internal.Proto.ImageMessage();
            }
            input.ReadMessage(CatalogImage);
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (catalogImage_ == null) {
              CatalogImage = new global::waxnet.Internal.Proto.ImageMessage();
            }
            input.ReadMessage(CatalogImage);
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ProductSnapshot : pb::IMessage<ProductSnapshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductSnapshot> _parser = new pb::MessageParser<ProductSnapshot>(() => new ProductSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductSnapshot(ProductSnapshot other) : this() {
      _hasBits0 = other._hasBits0;
      productImage_ = other.productImage_ != null ? other.productImage_.Clone() : null;
      productId_ = other.productId_;
      title_ = other.title_;
      description_ = other.description_;
      currencyCode_ = other.currencyCode_;
      priceAmount1000_ = other.priceAmount1000_;
      retailerId_ = other.retailerId_;
      url_ = other.url_;
      productImageCount_ = other.productImageCount_;
      firstImageId_ = other.firstImageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductSnapshot Clone() {
      return new ProductSnapshot(this);
    }

    /// <summary>Field number for the "productImage" field.</summary>
    public const int ProductImageFieldNumber = 1;
    private global::waxnet.Internal.Proto.ImageMessage productImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ImageMessage ProductImage {
      get { return productImage_; }
      set {
        productImage_ = value;
      }
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private readonly static string ProductIdDefaultValue = "";

    private string productId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_ ?? ProductIdDefaultValue; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "productId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProductId {
      get { return productId_ != null; }
    }
    /// <summary>Clears the value of the "productId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProductId() {
      productId_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 5;
    private readonly static string CurrencyCodeDefaultValue = "";

    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? CurrencyCodeDefaultValue; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currencyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currencyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "priceAmount1000" field.</summary>
    public const int PriceAmount1000FieldNumber = 6;
    private readonly static long PriceAmount1000DefaultValue = 0L;

    private long priceAmount1000_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PriceAmount1000 {
      get { if ((_hasBits0 & 1) != 0) { return priceAmount1000_; } else { return PriceAmount1000DefaultValue; } }
      set {
        _hasBits0 |= 1;
        priceAmount1000_ = value;
      }
    }
    /// <summary>Gets whether the "priceAmount1000" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPriceAmount1000 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "priceAmount1000" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPriceAmount1000() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "retailerId" field.</summary>
    public const int RetailerIdFieldNumber = 7;
    private readonly static string RetailerIdDefaultValue = "";

    private string retailerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RetailerId {
      get { return retailerId_ ?? RetailerIdDefaultValue; }
      set {
        retailerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "retailerId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRetailerId {
      get { return retailerId_ != null; }
    }
    /// <summary>Clears the value of the "retailerId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRetailerId() {
      retailerId_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 8;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "productImageCount" field.</summary>
    public const int ProductImageCountFieldNumber = 9;
    private readonly static uint ProductImageCountDefaultValue = 0;

    private uint productImageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProductImageCount {
      get { if ((_hasBits0 & 2) != 0) { return productImageCount_; } else { return ProductImageCountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        productImageCount_ = value;
      }
    }
    /// <summary>Gets whether the "productImageCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProductImageCount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "productImageCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProductImageCount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "firstImageId" field.</summary>
    public const int FirstImageIdFieldNumber = 11;
    private readonly static string FirstImageIdDefaultValue = "";

    private string firstImageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstImageId {
      get { return firstImageId_ ?? FirstImageIdDefaultValue; }
      set {
        firstImageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "firstImageId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFirstImageId {
      get { return firstImageId_ != null; }
    }
    /// <summary>Clears the value of the "firstImageId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFirstImageId() {
      firstImageId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProductImage, other.ProductImage)) return false;
      if (ProductId != other.ProductId) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (PriceAmount1000 != other.PriceAmount1000) return false;
      if (RetailerId != other.RetailerId) return false;
      if (Url != other.Url) return false;
      if (ProductImageCount != other.ProductImageCount) return false;
      if (FirstImageId != other.FirstImageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (productImage_ != null) hash ^= ProductImage.GetHashCode();
      if (HasProductId) hash ^= ProductId.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (HasPriceAmount1000) hash ^= PriceAmount1000.GetHashCode();
      if (HasRetailerId) hash ^= RetailerId.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasProductImageCount) hash ^= ProductImageCount.GetHashCode();
      if (HasFirstImageId) hash ^= FirstImageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (productImage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProductImage);
      }
      if (HasProductId) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(42);
        output.WriteString(CurrencyCode);
      }
      if (HasPriceAmount1000) {
        output.WriteRawTag(48);
        output.WriteInt64(PriceAmount1000);
      }
      if (HasRetailerId) {
        output.WriteRawTag(58);
        output.WriteString(RetailerId);
      }
      if (HasUrl) {
        output.WriteRawTag(66);
        output.WriteString(Url);
      }
      if (HasProductImageCount) {
        output.WriteRawTag(72);
        output.WriteUInt32(ProductImageCount);
      }
      if (HasFirstImageId) {
        output.WriteRawTag(90);
        output.WriteString(FirstImageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (productImage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProductImage);
      }
      if (HasProductId) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (HasTitle) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(42);
        output.WriteString(CurrencyCode);
      }
      if (HasPriceAmount1000) {
        output.WriteRawTag(48);
        output.WriteInt64(PriceAmount1000);
      }
      if (HasRetailerId) {
        output.WriteRawTag(58);
        output.WriteString(RetailerId);
      }
      if (HasUrl) {
        output.WriteRawTag(66);
        output.WriteString(Url);
      }
      if (HasProductImageCount) {
        output.WriteRawTag(72);
        output.WriteUInt32(ProductImageCount);
      }
      if (HasFirstImageId) {
        output.WriteRawTag(90);
        output.WriteString(FirstImageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (productImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProductImage);
      }
      if (HasProductId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (HasPriceAmount1000) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PriceAmount1000);
      }
      if (HasRetailerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RetailerId);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasProductImageCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProductImageCount);
      }
      if (HasFirstImageId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstImageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.productImage_ != null) {
        if (productImage_ == null) {
          ProductImage = new global::waxnet.Internal.Proto.ImageMessage();
        }
        ProductImage.MergeFrom(other.ProductImage);
      }
      if (other.HasProductId) {
        ProductId = other.ProductId;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.HasPriceAmount1000) {
        PriceAmount1000 = other.PriceAmount1000;
      }
      if (other.HasRetailerId) {
        RetailerId = other.RetailerId;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasProductImageCount) {
        ProductImageCount = other.ProductImageCount;
      }
      if (other.HasFirstImageId) {
        FirstImageId = other.FirstImageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (productImage_ == null) {
              ProductImage = new global::waxnet.Internal.Proto.ImageMessage();
            }
            input.ReadMessage(ProductImage);
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 48: {
            PriceAmount1000 = input.ReadInt64();
            break;
          }
          case 58: {
            RetailerId = input.ReadString();
            break;
          }
          case 66: {
            Url = input.ReadString();
            break;
          }
          case 72: {
            ProductImageCount = input.ReadUInt32();
            break;
          }
          case 90: {
            FirstImageId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (productImage_ == null) {
              ProductImage = new global::waxnet.Internal.Proto.ImageMessage();
            }
            input.ReadMessage(ProductImage);
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 48: {
            PriceAmount1000 = input.ReadInt64();
            break;
          }
          case 58: {
            RetailerId = input.ReadString();
            break;
          }
          case 66: {
            Url = input.ReadString();
            break;
          }
          case 72: {
            ProductImageCount = input.ReadUInt32();
            break;
          }
          case 90: {
            FirstImageId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ProductMessage : pb::IMessage<ProductMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductMessage> _parser = new pb::MessageParser<ProductMessage>(() => new ProductMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMessage(ProductMessage other) : this() {
      product_ = other.product_ != null ? other.product_.Clone() : null;
      businessOwnerJid_ = other.businessOwnerJid_;
      catalog_ = other.catalog_ != null ? other.catalog_.Clone() : null;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMessage Clone() {
      return new ProductMessage(this);
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 1;
    private global::waxnet.Internal.Proto.ProductSnapshot product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ProductSnapshot Product {
      get { return product_; }
      set {
        product_ = value;
      }
    }

    /// <summary>Field number for the "businessOwnerJid" field.</summary>
    public const int BusinessOwnerJidFieldNumber = 2;
    private readonly static string BusinessOwnerJidDefaultValue = "";

    private string businessOwnerJid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessOwnerJid {
      get { return businessOwnerJid_ ?? BusinessOwnerJidDefaultValue; }
      set {
        businessOwnerJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "businessOwnerJid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBusinessOwnerJid {
      get { return businessOwnerJid_ != null; }
    }
    /// <summary>Clears the value of the "businessOwnerJid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBusinessOwnerJid() {
      businessOwnerJid_ = null;
    }

    /// <summary>Field number for the "catalog" field.</summary>
    public const int CatalogFieldNumber = 4;
    private global::waxnet.Internal.Proto.CatalogSnapshot catalog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.CatalogSnapshot Catalog {
      get { return catalog_; }
      set {
        catalog_ = value;
      }
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 17;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Product, other.Product)) return false;
      if (BusinessOwnerJid != other.BusinessOwnerJid) return false;
      if (!object.Equals(Catalog, other.Catalog)) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (product_ != null) hash ^= Product.GetHashCode();
      if (HasBusinessOwnerJid) hash ^= BusinessOwnerJid.GetHashCode();
      if (catalog_ != null) hash ^= Catalog.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (product_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Product);
      }
      if (HasBusinessOwnerJid) {
        output.WriteRawTag(18);
        output.WriteString(BusinessOwnerJid);
      }
      if (catalog_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Catalog);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (product_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Product);
      }
      if (HasBusinessOwnerJid) {
        output.WriteRawTag(18);
        output.WriteString(BusinessOwnerJid);
      }
      if (catalog_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Catalog);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (product_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Product);
      }
      if (HasBusinessOwnerJid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessOwnerJid);
      }
      if (catalog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Catalog);
      }
      if (contextInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductMessage other) {
      if (other == null) {
        return;
      }
      if (other.product_ != null) {
        if (product_ == null) {
          Product = new global::waxnet.Internal.Proto.ProductSnapshot();
        }
        Product.MergeFrom(other.Product);
      }
      if (other.HasBusinessOwnerJid) {
        BusinessOwnerJid = other.BusinessOwnerJid;
      }
      if (other.catalog_ != null) {
        if (catalog_ == null) {
          Catalog = new global::waxnet.Internal.Proto.CatalogSnapshot();
        }
        Catalog.MergeFrom(other.Catalog);
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (product_ == null) {
              Product = new global::waxnet.Internal.Proto.ProductSnapshot();
            }
            input.ReadMessage(Product);
            break;
          }
          case 18: {
            BusinessOwnerJid = input.ReadString();
            break;
          }
          case 34: {
            if (catalog_ == null) {
              Catalog = new global::waxnet.Internal.Proto.CatalogSnapshot();
            }
            input.ReadMessage(Catalog);
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (product_ == null) {
              Product = new global::waxnet.Internal.Proto.ProductSnapshot();
            }
            input.ReadMessage(Product);
            break;
          }
          case 18: {
            BusinessOwnerJid = input.ReadString();
            break;
          }
          case 34: {
            if (catalog_ == null) {
              Catalog = new global::waxnet.Internal.Proto.CatalogSnapshot();
            }
            input.ReadMessage(Catalog);
            break;
          }
          case 138: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class GroupInviteMessage : pb::IMessage<GroupInviteMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupInviteMessage> _parser = new pb::MessageParser<GroupInviteMessage>(() => new GroupInviteMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupInviteMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupInviteMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupInviteMessage(GroupInviteMessage other) : this() {
      _hasBits0 = other._hasBits0;
      groupJid_ = other.groupJid_;
      inviteCode_ = other.inviteCode_;
      inviteExpiration_ = other.inviteExpiration_;
      groupName_ = other.groupName_;
      jpegThumbnail_ = other.jpegThumbnail_;
      caption_ = other.caption_;
      contextInfo_ = other.contextInfo_ != null ? other.contextInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupInviteMessage Clone() {
      return new GroupInviteMessage(this);
    }

    /// <summary>Field number for the "groupJid" field.</summary>
    public const int GroupJidFieldNumber = 1;
    private readonly static string GroupJidDefaultValue = "";

    private string groupJid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupJid {
      get { return groupJid_ ?? GroupJidDefaultValue; }
      set {
        groupJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupJid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupJid {
      get { return groupJid_ != null; }
    }
    /// <summary>Clears the value of the "groupJid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupJid() {
      groupJid_ = null;
    }

    /// <summary>Field number for the "inviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 2;
    private readonly static string InviteCodeDefaultValue = "";

    private string inviteCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCode {
      get { return inviteCode_ ?? InviteCodeDefaultValue; }
      set {
        inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inviteCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInviteCode {
      get { return inviteCode_ != null; }
    }
    /// <summary>Clears the value of the "inviteCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInviteCode() {
      inviteCode_ = null;
    }

    /// <summary>Field number for the "inviteExpiration" field.</summary>
    public const int InviteExpirationFieldNumber = 3;
    private readonly static long InviteExpirationDefaultValue = 0L;

    private long inviteExpiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long InviteExpiration {
      get { if ((_hasBits0 & 1) != 0) { return inviteExpiration_; } else { return InviteExpirationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inviteExpiration_ = value;
      }
    }
    /// <summary>Gets whether the "inviteExpiration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInviteExpiration {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "inviteExpiration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInviteExpiration() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 4;
    private readonly static string GroupNameDefaultValue = "";

    private string groupName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_ ?? GroupNameDefaultValue; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "groupName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupName {
      get { return groupName_ != null; }
    }
    /// <summary>Clears the value of the "groupName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupName() {
      groupName_ = null;
    }

    /// <summary>Field number for the "jpegThumbnail" field.</summary>
    public const int JpegThumbnailFieldNumber = 5;
    private readonly static pb::ByteString JpegThumbnailDefaultValue = pb::ByteString.Empty;

    private pb::ByteString jpegThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JpegThumbnail {
      get { return jpegThumbnail_ ?? JpegThumbnailDefaultValue; }
      set {
        jpegThumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "jpegThumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJpegThumbnail {
      get { return jpegThumbnail_ != null; }
    }
    /// <summary>Clears the value of the "jpegThumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJpegThumbnail() {
      jpegThumbnail_ = null;
    }

    /// <summary>Field number for the "caption" field.</summary>
    public const int CaptionFieldNumber = 6;
    private readonly static string CaptionDefaultValue = "";

    private string caption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Caption {
      get { return caption_ ?? CaptionDefaultValue; }
      set {
        caption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caption" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCaption {
      get { return caption_ != null; }
    }
    /// <summary>Clears the value of the "caption" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCaption() {
      caption_ = null;
    }

    /// <summary>Field number for the "contextInfo" field.</summary>
    public const int ContextInfoFieldNumber = 7;
    private global::waxnet.Internal.Proto.ContextInfo contextInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContextInfo ContextInfo {
      get { return contextInfo_; }
      set {
        contextInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupInviteMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupInviteMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupJid != other.GroupJid) return false;
      if (InviteCode != other.InviteCode) return false;
      if (InviteExpiration != other.InviteExpiration) return false;
      if (GroupName != other.GroupName) return false;
      if (JpegThumbnail != other.JpegThumbnail) return false;
      if (Caption != other.Caption) return false;
      if (!object.Equals(ContextInfo, other.ContextInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGroupJid) hash ^= GroupJid.GetHashCode();
      if (HasInviteCode) hash ^= InviteCode.GetHashCode();
      if (HasInviteExpiration) hash ^= InviteExpiration.GetHashCode();
      if (HasGroupName) hash ^= GroupName.GetHashCode();
      if (HasJpegThumbnail) hash ^= JpegThumbnail.GetHashCode();
      if (HasCaption) hash ^= Caption.GetHashCode();
      if (contextInfo_ != null) hash ^= ContextInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGroupJid) {
        output.WriteRawTag(10);
        output.WriteString(GroupJid);
      }
      if (HasInviteCode) {
        output.WriteRawTag(18);
        output.WriteString(InviteCode);
      }
      if (HasInviteExpiration) {
        output.WriteRawTag(24);
        output.WriteInt64(InviteExpiration);
      }
      if (HasGroupName) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(42);
        output.WriteBytes(JpegThumbnail);
      }
      if (HasCaption) {
        output.WriteRawTag(50);
        output.WriteString(Caption);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGroupJid) {
        output.WriteRawTag(10);
        output.WriteString(GroupJid);
      }
      if (HasInviteCode) {
        output.WriteRawTag(18);
        output.WriteString(InviteCode);
      }
      if (HasInviteExpiration) {
        output.WriteRawTag(24);
        output.WriteInt64(InviteExpiration);
      }
      if (HasGroupName) {
        output.WriteRawTag(34);
        output.WriteString(GroupName);
      }
      if (HasJpegThumbnail) {
        output.WriteRawTag(42);
        output.WriteBytes(JpegThumbnail);
      }
      if (HasCaption) {
        output.WriteRawTag(50);
        output.WriteString(Caption);
      }
      if (contextInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ContextInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGroupJid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupJid);
      }
      if (HasInviteCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
      }
      if (HasInviteExpiration) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(InviteExpiration);
      }
      if (HasGroupName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (HasJpegThumbnail) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JpegThumbnail);
      }
      if (HasCaption) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Caption);
      }
      if (contextInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContextInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupInviteMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasGroupJid) {
        GroupJid = other.GroupJid;
      }
      if (other.HasInviteCode) {
        InviteCode = other.InviteCode;
      }
      if (other.HasInviteExpiration) {
        InviteExpiration = other.InviteExpiration;
      }
      if (other.HasGroupName) {
        GroupName = other.GroupName;
      }
      if (other.HasJpegThumbnail) {
        JpegThumbnail = other.JpegThumbnail;
      }
      if (other.HasCaption) {
        Caption = other.Caption;
      }
      if (other.contextInfo_ != null) {
        if (contextInfo_ == null) {
          ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
        }
        ContextInfo.MergeFrom(other.ContextInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupJid = input.ReadString();
            break;
          }
          case 18: {
            InviteCode = input.ReadString();
            break;
          }
          case 24: {
            InviteExpiration = input.ReadInt64();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
          case 42: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 50: {
            Caption = input.ReadString();
            break;
          }
          case 58: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupJid = input.ReadString();
            break;
          }
          case 18: {
            InviteCode = input.ReadString();
            break;
          }
          case 24: {
            InviteExpiration = input.ReadInt64();
            break;
          }
          case 34: {
            GroupName = input.ReadString();
            break;
          }
          case 42: {
            JpegThumbnail = input.ReadBytes();
            break;
          }
          case 50: {
            Caption = input.ReadString();
            break;
          }
          case 58: {
            if (contextInfo_ == null) {
              ContextInfo = new global::waxnet.Internal.Proto.ContextInfo();
            }
            input.ReadMessage(ContextInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DeviceSentMessage : pb::IMessage<DeviceSentMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceSentMessage> _parser = new pb::MessageParser<DeviceSentMessage>(() => new DeviceSentMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceSentMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceSentMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceSentMessage(DeviceSentMessage other) : this() {
      destinationJid_ = other.destinationJid_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceSentMessage Clone() {
      return new DeviceSentMessage(this);
    }

    /// <summary>Field number for the "destinationJid" field.</summary>
    public const int DestinationJidFieldNumber = 1;
    private readonly static string DestinationJidDefaultValue = "";

    private string destinationJid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationJid {
      get { return destinationJid_ ?? DestinationJidDefaultValue; }
      set {
        destinationJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "destinationJid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDestinationJid {
      get { return destinationJid_ != null; }
    }
    /// <summary>Clears the value of the "destinationJid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestinationJid() {
      destinationJid_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::waxnet.Internal.Proto.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceSentMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceSentMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DestinationJid != other.DestinationJid) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDestinationJid) hash ^= DestinationJid.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDestinationJid) {
        output.WriteRawTag(10);
        output.WriteString(DestinationJid);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDestinationJid) {
        output.WriteRawTag(10);
        output.WriteString(DestinationJid);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDestinationJid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationJid);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceSentMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasDestinationJid) {
        DestinationJid = other.DestinationJid;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::waxnet.Internal.Proto.Message();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DestinationJid = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DestinationJid = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class DeviceSyncMessage : pb::IMessage<DeviceSyncMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceSyncMessage> _parser = new pb::MessageParser<DeviceSyncMessage>(() => new DeviceSyncMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceSyncMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceSyncMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceSyncMessage(DeviceSyncMessage other) : this() {
      serializedXmlBytes_ = other.serializedXmlBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceSyncMessage Clone() {
      return new DeviceSyncMessage(this);
    }

    /// <summary>Field number for the "serializedXmlBytes" field.</summary>
    public const int SerializedXmlBytesFieldNumber = 1;
    private readonly static pb::ByteString SerializedXmlBytesDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serializedXmlBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SerializedXmlBytes {
      get { return serializedXmlBytes_ ?? SerializedXmlBytesDefaultValue; }
      set {
        serializedXmlBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serializedXmlBytes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSerializedXmlBytes {
      get { return serializedXmlBytes_ != null; }
    }
    /// <summary>Clears the value of the "serializedXmlBytes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSerializedXmlBytes() {
      serializedXmlBytes_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceSyncMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceSyncMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerializedXmlBytes != other.SerializedXmlBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSerializedXmlBytes) hash ^= SerializedXmlBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSerializedXmlBytes) {
        output.WriteRawTag(10);
        output.WriteBytes(SerializedXmlBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSerializedXmlBytes) {
        output.WriteRawTag(10);
        output.WriteBytes(SerializedXmlBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSerializedXmlBytes) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SerializedXmlBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceSyncMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasSerializedXmlBytes) {
        SerializedXmlBytes = other.SerializedXmlBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SerializedXmlBytes = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SerializedXmlBytes = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      conversation_ = other.conversation_;
      senderKeyDistributionMessage_ = other.senderKeyDistributionMessage_ != null ? other.senderKeyDistributionMessage_.Clone() : null;
      imageMessage_ = other.imageMessage_ != null ? other.imageMessage_.Clone() : null;
      contactMessage_ = other.contactMessage_ != null ? other.contactMessage_.Clone() : null;
      locationMessage_ = other.locationMessage_ != null ? other.locationMessage_.Clone() : null;
      extendedTextMessage_ = other.extendedTextMessage_ != null ? other.extendedTextMessage_.Clone() : null;
      documentMessage_ = other.documentMessage_ != null ? other.documentMessage_.Clone() : null;
      audioMessage_ = other.audioMessage_ != null ? other.audioMessage_.Clone() : null;
      videoMessage_ = other.videoMessage_ != null ? other.videoMessage_.Clone() : null;
      call_ = other.call_ != null ? other.call_.Clone() : null;
      chat_ = other.chat_ != null ? other.chat_.Clone() : null;
      protocolMessage_ = other.protocolMessage_ != null ? other.protocolMessage_.Clone() : null;
      contactsArrayMessage_ = other.contactsArrayMessage_ != null ? other.contactsArrayMessage_.Clone() : null;
      highlyStructuredMessage_ = other.highlyStructuredMessage_ != null ? other.highlyStructuredMessage_.Clone() : null;
      fastRatchetKeySenderKeyDistributionMessage_ = other.fastRatchetKeySenderKeyDistributionMessage_ != null ? other.fastRatchetKeySenderKeyDistributionMessage_.Clone() : null;
      sendPaymentMessage_ = other.sendPaymentMessage_ != null ? other.sendPaymentMessage_.Clone() : null;
      liveLocationMessage_ = other.liveLocationMessage_ != null ? other.liveLocationMessage_.Clone() : null;
      requestPaymentMessage_ = other.requestPaymentMessage_ != null ? other.requestPaymentMessage_.Clone() : null;
      declinePaymentRequestMessage_ = other.declinePaymentRequestMessage_ != null ? other.declinePaymentRequestMessage_.Clone() : null;
      cancelPaymentRequestMessage_ = other.cancelPaymentRequestMessage_ != null ? other.cancelPaymentRequestMessage_.Clone() : null;
      templateMessage_ = other.templateMessage_ != null ? other.templateMessage_.Clone() : null;
      stickerMessage_ = other.stickerMessage_ != null ? other.stickerMessage_.Clone() : null;
      groupInviteMessage_ = other.groupInviteMessage_ != null ? other.groupInviteMessage_.Clone() : null;
      templateButtonReplyMessage_ = other.templateButtonReplyMessage_ != null ? other.templateButtonReplyMessage_.Clone() : null;
      productMessage_ = other.productMessage_ != null ? other.productMessage_.Clone() : null;
      deviceSentMessage_ = other.deviceSentMessage_ != null ? other.deviceSentMessage_.Clone() : null;
      deviceSyncMessage_ = other.deviceSyncMessage_ != null ? other.deviceSyncMessage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "conversation" field.</summary>
    public const int ConversationFieldNumber = 1;
    private readonly static string ConversationDefaultValue = "";

    private string conversation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Conversation {
      get { return conversation_ ?? ConversationDefaultValue; }
      set {
        conversation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversation {
      get { return conversation_ != null; }
    }
    /// <summary>Clears the value of the "conversation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversation() {
      conversation_ = null;
    }

    /// <summary>Field number for the "senderKeyDistributionMessage" field.</summary>
    public const int SenderKeyDistributionMessageFieldNumber = 2;
    private global::waxnet.Internal.Proto.SenderKeyDistributionMessage senderKeyDistributionMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.SenderKeyDistributionMessage SenderKeyDistributionMessage {
      get { return senderKeyDistributionMessage_; }
      set {
        senderKeyDistributionMessage_ = value;
      }
    }

    /// <summary>Field number for the "imageMessage" field.</summary>
    public const int ImageMessageFieldNumber = 3;
    private global::waxnet.Internal.Proto.ImageMessage imageMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ImageMessage ImageMessage {
      get { return imageMessage_; }
      set {
        imageMessage_ = value;
      }
    }

    /// <summary>Field number for the "contactMessage" field.</summary>
    public const int ContactMessageFieldNumber = 4;
    private global::waxnet.Internal.Proto.ContactMessage contactMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContactMessage ContactMessage {
      get { return contactMessage_; }
      set {
        contactMessage_ = value;
      }
    }

    /// <summary>Field number for the "locationMessage" field.</summary>
    public const int LocationMessageFieldNumber = 5;
    private global::waxnet.Internal.Proto.LocationMessage locationMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.LocationMessage LocationMessage {
      get { return locationMessage_; }
      set {
        locationMessage_ = value;
      }
    }

    /// <summary>Field number for the "extendedTextMessage" field.</summary>
    public const int ExtendedTextMessageFieldNumber = 6;
    private global::waxnet.Internal.Proto.ExtendedTextMessage extendedTextMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ExtendedTextMessage ExtendedTextMessage {
      get { return extendedTextMessage_; }
      set {
        extendedTextMessage_ = value;
      }
    }

    /// <summary>Field number for the "documentMessage" field.</summary>
    public const int DocumentMessageFieldNumber = 7;
    private global::waxnet.Internal.Proto.DocumentMessage documentMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.DocumentMessage DocumentMessage {
      get { return documentMessage_; }
      set {
        documentMessage_ = value;
      }
    }

    /// <summary>Field number for the "audioMessage" field.</summary>
    public const int AudioMessageFieldNumber = 8;
    private global::waxnet.Internal.Proto.AudioMessage audioMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.AudioMessage AudioMessage {
      get { return audioMessage_; }
      set {
        audioMessage_ = value;
      }
    }

    /// <summary>Field number for the "videoMessage" field.</summary>
    public const int VideoMessageFieldNumber = 9;
    private global::waxnet.Internal.Proto.VideoMessage videoMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.VideoMessage VideoMessage {
      get { return videoMessage_; }
      set {
        videoMessage_ = value;
      }
    }

    /// <summary>Field number for the "call" field.</summary>
    public const int CallFieldNumber = 10;
    private global::waxnet.Internal.Proto.Call call_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Call Call {
      get { return call_; }
      set {
        call_ = value;
      }
    }

    /// <summary>Field number for the "chat" field.</summary>
    public const int ChatFieldNumber = 11;
    private global::waxnet.Internal.Proto.Chat chat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Chat Chat {
      get { return chat_; }
      set {
        chat_ = value;
      }
    }

    /// <summary>Field number for the "protocolMessage" field.</summary>
    public const int ProtocolMessageFieldNumber = 12;
    private global::waxnet.Internal.Proto.ProtocolMessage protocolMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ProtocolMessage ProtocolMessage {
      get { return protocolMessage_; }
      set {
        protocolMessage_ = value;
      }
    }

    /// <summary>Field number for the "contactsArrayMessage" field.</summary>
    public const int ContactsArrayMessageFieldNumber = 13;
    private global::waxnet.Internal.Proto.ContactsArrayMessage contactsArrayMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ContactsArrayMessage ContactsArrayMessage {
      get { return contactsArrayMessage_; }
      set {
        contactsArrayMessage_ = value;
      }
    }

    /// <summary>Field number for the "highlyStructuredMessage" field.</summary>
    public const int HighlyStructuredMessageFieldNumber = 14;
    private global::waxnet.Internal.Proto.HighlyStructuredMessage highlyStructuredMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.HighlyStructuredMessage HighlyStructuredMessage {
      get { return highlyStructuredMessage_; }
      set {
        highlyStructuredMessage_ = value;
      }
    }

    /// <summary>Field number for the "fastRatchetKeySenderKeyDistributionMessage" field.</summary>
    public const int FastRatchetKeySenderKeyDistributionMessageFieldNumber = 15;
    private global::waxnet.Internal.Proto.SenderKeyDistributionMessage fastRatchetKeySenderKeyDistributionMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.SenderKeyDistributionMessage FastRatchetKeySenderKeyDistributionMessage {
      get { return fastRatchetKeySenderKeyDistributionMessage_; }
      set {
        fastRatchetKeySenderKeyDistributionMessage_ = value;
      }
    }

    /// <summary>Field number for the "sendPaymentMessage" field.</summary>
    public const int SendPaymentMessageFieldNumber = 16;
    private global::waxnet.Internal.Proto.SendPaymentMessage sendPaymentMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.SendPaymentMessage SendPaymentMessage {
      get { return sendPaymentMessage_; }
      set {
        sendPaymentMessage_ = value;
      }
    }

    /// <summary>Field number for the "liveLocationMessage" field.</summary>
    public const int LiveLocationMessageFieldNumber = 18;
    private global::waxnet.Internal.Proto.LiveLocationMessage liveLocationMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.LiveLocationMessage LiveLocationMessage {
      get { return liveLocationMessage_; }
      set {
        liveLocationMessage_ = value;
      }
    }

    /// <summary>Field number for the "requestPaymentMessage" field.</summary>
    public const int RequestPaymentMessageFieldNumber = 22;
    private global::waxnet.Internal.Proto.RequestPaymentMessage requestPaymentMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.RequestPaymentMessage RequestPaymentMessage {
      get { return requestPaymentMessage_; }
      set {
        requestPaymentMessage_ = value;
      }
    }

    /// <summary>Field number for the "declinePaymentRequestMessage" field.</summary>
    public const int DeclinePaymentRequestMessageFieldNumber = 23;
    private global::waxnet.Internal.Proto.DeclinePaymentRequestMessage declinePaymentRequestMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.DeclinePaymentRequestMessage DeclinePaymentRequestMessage {
      get { return declinePaymentRequestMessage_; }
      set {
        declinePaymentRequestMessage_ = value;
      }
    }

    /// <summary>Field number for the "cancelPaymentRequestMessage" field.</summary>
    public const int CancelPaymentRequestMessageFieldNumber = 24;
    private global::waxnet.Internal.Proto.CancelPaymentRequestMessage cancelPaymentRequestMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.CancelPaymentRequestMessage CancelPaymentRequestMessage {
      get { return cancelPaymentRequestMessage_; }
      set {
        cancelPaymentRequestMessage_ = value;
      }
    }

    /// <summary>Field number for the "templateMessage" field.</summary>
    public const int TemplateMessageFieldNumber = 25;
    private global::waxnet.Internal.Proto.TemplateMessage templateMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.TemplateMessage TemplateMessage {
      get { return templateMessage_; }
      set {
        templateMessage_ = value;
      }
    }

    /// <summary>Field number for the "stickerMessage" field.</summary>
    public const int StickerMessageFieldNumber = 26;
    private global::waxnet.Internal.Proto.StickerMessage stickerMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.StickerMessage StickerMessage {
      get { return stickerMessage_; }
      set {
        stickerMessage_ = value;
      }
    }

    /// <summary>Field number for the "groupInviteMessage" field.</summary>
    public const int GroupInviteMessageFieldNumber = 28;
    private global::waxnet.Internal.Proto.GroupInviteMessage groupInviteMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.GroupInviteMessage GroupInviteMessage {
      get { return groupInviteMessage_; }
      set {
        groupInviteMessage_ = value;
      }
    }

    /// <summary>Field number for the "templateButtonReplyMessage" field.</summary>
    public const int TemplateButtonReplyMessageFieldNumber = 29;
    private global::waxnet.Internal.Proto.TemplateButtonReplyMessage templateButtonReplyMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.TemplateButtonReplyMessage TemplateButtonReplyMessage {
      get { return templateButtonReplyMessage_; }
      set {
        templateButtonReplyMessage_ = value;
      }
    }

    /// <summary>Field number for the "productMessage" field.</summary>
    public const int ProductMessageFieldNumber = 30;
    private global::waxnet.Internal.Proto.ProductMessage productMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.ProductMessage ProductMessage {
      get { return productMessage_; }
      set {
        productMessage_ = value;
      }
    }

    /// <summary>Field number for the "deviceSentMessage" field.</summary>
    public const int DeviceSentMessageFieldNumber = 31;
    private global::waxnet.Internal.Proto.DeviceSentMessage deviceSentMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.DeviceSentMessage DeviceSentMessage {
      get { return deviceSentMessage_; }
      set {
        deviceSentMessage_ = value;
      }
    }

    /// <summary>Field number for the "deviceSyncMessage" field.</summary>
    public const int DeviceSyncMessageFieldNumber = 32;
    private global::waxnet.Internal.Proto.DeviceSyncMessage deviceSyncMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.DeviceSyncMessage DeviceSyncMessage {
      get { return deviceSyncMessage_; }
      set {
        deviceSyncMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Conversation != other.Conversation) return false;
      if (!object.Equals(SenderKeyDistributionMessage, other.SenderKeyDistributionMessage)) return false;
      if (!object.Equals(ImageMessage, other.ImageMessage)) return false;
      if (!object.Equals(ContactMessage, other.ContactMessage)) return false;
      if (!object.Equals(LocationMessage, other.LocationMessage)) return false;
      if (!object.Equals(ExtendedTextMessage, other.ExtendedTextMessage)) return false;
      if (!object.Equals(DocumentMessage, other.DocumentMessage)) return false;
      if (!object.Equals(AudioMessage, other.AudioMessage)) return false;
      if (!object.Equals(VideoMessage, other.VideoMessage)) return false;
      if (!object.Equals(Call, other.Call)) return false;
      if (!object.Equals(Chat, other.Chat)) return false;
      if (!object.Equals(ProtocolMessage, other.ProtocolMessage)) return false;
      if (!object.Equals(ContactsArrayMessage, other.ContactsArrayMessage)) return false;
      if (!object.Equals(HighlyStructuredMessage, other.HighlyStructuredMessage)) return false;
      if (!object.Equals(FastRatchetKeySenderKeyDistributionMessage, other.FastRatchetKeySenderKeyDistributionMessage)) return false;
      if (!object.Equals(SendPaymentMessage, other.SendPaymentMessage)) return false;
      if (!object.Equals(LiveLocationMessage, other.LiveLocationMessage)) return false;
      if (!object.Equals(RequestPaymentMessage, other.RequestPaymentMessage)) return false;
      if (!object.Equals(DeclinePaymentRequestMessage, other.DeclinePaymentRequestMessage)) return false;
      if (!object.Equals(CancelPaymentRequestMessage, other.CancelPaymentRequestMessage)) return false;
      if (!object.Equals(TemplateMessage, other.TemplateMessage)) return false;
      if (!object.Equals(StickerMessage, other.StickerMessage)) return false;
      if (!object.Equals(GroupInviteMessage, other.GroupInviteMessage)) return false;
      if (!object.Equals(TemplateButtonReplyMessage, other.TemplateButtonReplyMessage)) return false;
      if (!object.Equals(ProductMessage, other.ProductMessage)) return false;
      if (!object.Equals(DeviceSentMessage, other.DeviceSentMessage)) return false;
      if (!object.Equals(DeviceSyncMessage, other.DeviceSyncMessage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConversation) hash ^= Conversation.GetHashCode();
      if (senderKeyDistributionMessage_ != null) hash ^= SenderKeyDistributionMessage.GetHashCode();
      if (imageMessage_ != null) hash ^= ImageMessage.GetHashCode();
      if (contactMessage_ != null) hash ^= ContactMessage.GetHashCode();
      if (locationMessage_ != null) hash ^= LocationMessage.GetHashCode();
      if (extendedTextMessage_ != null) hash ^= ExtendedTextMessage.GetHashCode();
      if (documentMessage_ != null) hash ^= DocumentMessage.GetHashCode();
      if (audioMessage_ != null) hash ^= AudioMessage.GetHashCode();
      if (videoMessage_ != null) hash ^= VideoMessage.GetHashCode();
      if (call_ != null) hash ^= Call.GetHashCode();
      if (chat_ != null) hash ^= Chat.GetHashCode();
      if (protocolMessage_ != null) hash ^= ProtocolMessage.GetHashCode();
      if (contactsArrayMessage_ != null) hash ^= ContactsArrayMessage.GetHashCode();
      if (highlyStructuredMessage_ != null) hash ^= HighlyStructuredMessage.GetHashCode();
      if (fastRatchetKeySenderKeyDistributionMessage_ != null) hash ^= FastRatchetKeySenderKeyDistributionMessage.GetHashCode();
      if (sendPaymentMessage_ != null) hash ^= SendPaymentMessage.GetHashCode();
      if (liveLocationMessage_ != null) hash ^= LiveLocationMessage.GetHashCode();
      if (requestPaymentMessage_ != null) hash ^= RequestPaymentMessage.GetHashCode();
      if (declinePaymentRequestMessage_ != null) hash ^= DeclinePaymentRequestMessage.GetHashCode();
      if (cancelPaymentRequestMessage_ != null) hash ^= CancelPaymentRequestMessage.GetHashCode();
      if (templateMessage_ != null) hash ^= TemplateMessage.GetHashCode();
      if (stickerMessage_ != null) hash ^= StickerMessage.GetHashCode();
      if (groupInviteMessage_ != null) hash ^= GroupInviteMessage.GetHashCode();
      if (templateButtonReplyMessage_ != null) hash ^= TemplateButtonReplyMessage.GetHashCode();
      if (productMessage_ != null) hash ^= ProductMessage.GetHashCode();
      if (deviceSentMessage_ != null) hash ^= DeviceSentMessage.GetHashCode();
      if (deviceSyncMessage_ != null) hash ^= DeviceSyncMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConversation) {
        output.WriteRawTag(10);
        output.WriteString(Conversation);
      }
      if (senderKeyDistributionMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderKeyDistributionMessage);
      }
      if (imageMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageMessage);
      }
      if (contactMessage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ContactMessage);
      }
      if (locationMessage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocationMessage);
      }
      if (extendedTextMessage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExtendedTextMessage);
      }
      if (documentMessage_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DocumentMessage);
      }
      if (audioMessage_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AudioMessage);
      }
      if (videoMessage_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(VideoMessage);
      }
      if (call_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Call);
      }
      if (chat_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Chat);
      }
      if (protocolMessage_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ProtocolMessage);
      }
      if (contactsArrayMessage_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ContactsArrayMessage);
      }
      if (highlyStructuredMessage_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(HighlyStructuredMessage);
      }
      if (fastRatchetKeySenderKeyDistributionMessage_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(FastRatchetKeySenderKeyDistributionMessage);
      }
      if (sendPaymentMessage_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SendPaymentMessage);
      }
      if (liveLocationMessage_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LiveLocationMessage);
      }
      if (requestPaymentMessage_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(RequestPaymentMessage);
      }
      if (declinePaymentRequestMessage_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(DeclinePaymentRequestMessage);
      }
      if (cancelPaymentRequestMessage_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CancelPaymentRequestMessage);
      }
      if (templateMessage_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TemplateMessage);
      }
      if (stickerMessage_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(StickerMessage);
      }
      if (groupInviteMessage_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(GroupInviteMessage);
      }
      if (templateButtonReplyMessage_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TemplateButtonReplyMessage);
      }
      if (productMessage_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ProductMessage);
      }
      if (deviceSentMessage_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DeviceSentMessage);
      }
      if (deviceSyncMessage_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(DeviceSyncMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConversation) {
        output.WriteRawTag(10);
        output.WriteString(Conversation);
      }
      if (senderKeyDistributionMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SenderKeyDistributionMessage);
      }
      if (imageMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageMessage);
      }
      if (contactMessage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ContactMessage);
      }
      if (locationMessage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocationMessage);
      }
      if (extendedTextMessage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExtendedTextMessage);
      }
      if (documentMessage_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DocumentMessage);
      }
      if (audioMessage_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AudioMessage);
      }
      if (videoMessage_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(VideoMessage);
      }
      if (call_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Call);
      }
      if (chat_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Chat);
      }
      if (protocolMessage_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ProtocolMessage);
      }
      if (contactsArrayMessage_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ContactsArrayMessage);
      }
      if (highlyStructuredMessage_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(HighlyStructuredMessage);
      }
      if (fastRatchetKeySenderKeyDistributionMessage_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(FastRatchetKeySenderKeyDistributionMessage);
      }
      if (sendPaymentMessage_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SendPaymentMessage);
      }
      if (liveLocationMessage_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LiveLocationMessage);
      }
      if (requestPaymentMessage_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(RequestPaymentMessage);
      }
      if (declinePaymentRequestMessage_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(DeclinePaymentRequestMessage);
      }
      if (cancelPaymentRequestMessage_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(CancelPaymentRequestMessage);
      }
      if (templateMessage_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TemplateMessage);
      }
      if (stickerMessage_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(StickerMessage);
      }
      if (groupInviteMessage_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(GroupInviteMessage);
      }
      if (templateButtonReplyMessage_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TemplateButtonReplyMessage);
      }
      if (productMessage_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ProductMessage);
      }
      if (deviceSentMessage_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DeviceSentMessage);
      }
      if (deviceSyncMessage_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(DeviceSyncMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConversation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Conversation);
      }
      if (senderKeyDistributionMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SenderKeyDistributionMessage);
      }
      if (imageMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageMessage);
      }
      if (contactMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactMessage);
      }
      if (locationMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationMessage);
      }
      if (extendedTextMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtendedTextMessage);
      }
      if (documentMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentMessage);
      }
      if (audioMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioMessage);
      }
      if (videoMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoMessage);
      }
      if (call_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Call);
      }
      if (chat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chat);
      }
      if (protocolMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtocolMessage);
      }
      if (contactsArrayMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactsArrayMessage);
      }
      if (highlyStructuredMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighlyStructuredMessage);
      }
      if (fastRatchetKeySenderKeyDistributionMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FastRatchetKeySenderKeyDistributionMessage);
      }
      if (sendPaymentMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SendPaymentMessage);
      }
      if (liveLocationMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LiveLocationMessage);
      }
      if (requestPaymentMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestPaymentMessage);
      }
      if (declinePaymentRequestMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeclinePaymentRequestMessage);
      }
      if (cancelPaymentRequestMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CancelPaymentRequestMessage);
      }
      if (templateMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TemplateMessage);
      }
      if (stickerMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StickerMessage);
      }
      if (groupInviteMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupInviteMessage);
      }
      if (templateButtonReplyMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TemplateButtonReplyMessage);
      }
      if (productMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProductMessage);
      }
      if (deviceSentMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceSentMessage);
      }
      if (deviceSyncMessage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceSyncMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.HasConversation) {
        Conversation = other.Conversation;
      }
      if (other.senderKeyDistributionMessage_ != null) {
        if (senderKeyDistributionMessage_ == null) {
          SenderKeyDistributionMessage = new global::waxnet.Internal.Proto.SenderKeyDistributionMessage();
        }
        SenderKeyDistributionMessage.MergeFrom(other.SenderKeyDistributionMessage);
      }
      if (other.imageMessage_ != null) {
        if (imageMessage_ == null) {
          ImageMessage = new global::waxnet.Internal.Proto.ImageMessage();
        }
        ImageMessage.MergeFrom(other.ImageMessage);
      }
      if (other.contactMessage_ != null) {
        if (contactMessage_ == null) {
          ContactMessage = new global::waxnet.Internal.Proto.ContactMessage();
        }
        ContactMessage.MergeFrom(other.ContactMessage);
      }
      if (other.locationMessage_ != null) {
        if (locationMessage_ == null) {
          LocationMessage = new global::waxnet.Internal.Proto.LocationMessage();
        }
        LocationMessage.MergeFrom(other.LocationMessage);
      }
      if (other.extendedTextMessage_ != null) {
        if (extendedTextMessage_ == null) {
          ExtendedTextMessage = new global::waxnet.Internal.Proto.ExtendedTextMessage();
        }
        ExtendedTextMessage.MergeFrom(other.ExtendedTextMessage);
      }
      if (other.documentMessage_ != null) {
        if (documentMessage_ == null) {
          DocumentMessage = new global::waxnet.Internal.Proto.DocumentMessage();
        }
        DocumentMessage.MergeFrom(other.DocumentMessage);
      }
      if (other.audioMessage_ != null) {
        if (audioMessage_ == null) {
          AudioMessage = new global::waxnet.Internal.Proto.AudioMessage();
        }
        AudioMessage.MergeFrom(other.AudioMessage);
      }
      if (other.videoMessage_ != null) {
        if (videoMessage_ == null) {
          VideoMessage = new global::waxnet.Internal.Proto.VideoMessage();
        }
        VideoMessage.MergeFrom(other.VideoMessage);
      }
      if (other.call_ != null) {
        if (call_ == null) {
          Call = new global::waxnet.Internal.Proto.Call();
        }
        Call.MergeFrom(other.Call);
      }
      if (other.chat_ != null) {
        if (chat_ == null) {
          Chat = new global::waxnet.Internal.Proto.Chat();
        }
        Chat.MergeFrom(other.Chat);
      }
      if (other.protocolMessage_ != null) {
        if (protocolMessage_ == null) {
          ProtocolMessage = new global::waxnet.Internal.Proto.ProtocolMessage();
        }
        ProtocolMessage.MergeFrom(other.ProtocolMessage);
      }
      if (other.contactsArrayMessage_ != null) {
        if (contactsArrayMessage_ == null) {
          ContactsArrayMessage = new global::waxnet.Internal.Proto.ContactsArrayMessage();
        }
        ContactsArrayMessage.MergeFrom(other.ContactsArrayMessage);
      }
      if (other.highlyStructuredMessage_ != null) {
        if (highlyStructuredMessage_ == null) {
          HighlyStructuredMessage = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
        }
        HighlyStructuredMessage.MergeFrom(other.HighlyStructuredMessage);
      }
      if (other.fastRatchetKeySenderKeyDistributionMessage_ != null) {
        if (fastRatchetKeySenderKeyDistributionMessage_ == null) {
          FastRatchetKeySenderKeyDistributionMessage = new global::waxnet.Internal.Proto.SenderKeyDistributionMessage();
        }
        FastRatchetKeySenderKeyDistributionMessage.MergeFrom(other.FastRatchetKeySenderKeyDistributionMessage);
      }
      if (other.sendPaymentMessage_ != null) {
        if (sendPaymentMessage_ == null) {
          SendPaymentMessage = new global::waxnet.Internal.Proto.SendPaymentMessage();
        }
        SendPaymentMessage.MergeFrom(other.SendPaymentMessage);
      }
      if (other.liveLocationMessage_ != null) {
        if (liveLocationMessage_ == null) {
          LiveLocationMessage = new global::waxnet.Internal.Proto.LiveLocationMessage();
        }
        LiveLocationMessage.MergeFrom(other.LiveLocationMessage);
      }
      if (other.requestPaymentMessage_ != null) {
        if (requestPaymentMessage_ == null) {
          RequestPaymentMessage = new global::waxnet.Internal.Proto.RequestPaymentMessage();
        }
        RequestPaymentMessage.MergeFrom(other.RequestPaymentMessage);
      }
      if (other.declinePaymentRequestMessage_ != null) {
        if (declinePaymentRequestMessage_ == null) {
          DeclinePaymentRequestMessage = new global::waxnet.Internal.Proto.DeclinePaymentRequestMessage();
        }
        DeclinePaymentRequestMessage.MergeFrom(other.DeclinePaymentRequestMessage);
      }
      if (other.cancelPaymentRequestMessage_ != null) {
        if (cancelPaymentRequestMessage_ == null) {
          CancelPaymentRequestMessage = new global::waxnet.Internal.Proto.CancelPaymentRequestMessage();
        }
        CancelPaymentRequestMessage.MergeFrom(other.CancelPaymentRequestMessage);
      }
      if (other.templateMessage_ != null) {
        if (templateMessage_ == null) {
          TemplateMessage = new global::waxnet.Internal.Proto.TemplateMessage();
        }
        TemplateMessage.MergeFrom(other.TemplateMessage);
      }
      if (other.stickerMessage_ != null) {
        if (stickerMessage_ == null) {
          StickerMessage = new global::waxnet.Internal.Proto.StickerMessage();
        }
        StickerMessage.MergeFrom(other.StickerMessage);
      }
      if (other.groupInviteMessage_ != null) {
        if (groupInviteMessage_ == null) {
          GroupInviteMessage = new global::waxnet.Internal.Proto.GroupInviteMessage();
        }
        GroupInviteMessage.MergeFrom(other.GroupInviteMessage);
      }
      if (other.templateButtonReplyMessage_ != null) {
        if (templateButtonReplyMessage_ == null) {
          TemplateButtonReplyMessage = new global::waxnet.Internal.Proto.TemplateButtonReplyMessage();
        }
        TemplateButtonReplyMessage.MergeFrom(other.TemplateButtonReplyMessage);
      }
      if (other.productMessage_ != null) {
        if (productMessage_ == null) {
          ProductMessage = new global::waxnet.Internal.Proto.ProductMessage();
        }
        ProductMessage.MergeFrom(other.ProductMessage);
      }
      if (other.deviceSentMessage_ != null) {
        if (deviceSentMessage_ == null) {
          DeviceSentMessage = new global::waxnet.Internal.Proto.DeviceSentMessage();
        }
        DeviceSentMessage.MergeFrom(other.DeviceSentMessage);
      }
      if (other.deviceSyncMessage_ != null) {
        if (deviceSyncMessage_ == null) {
          DeviceSyncMessage = new global::waxnet.Internal.Proto.DeviceSyncMessage();
        }
        DeviceSyncMessage.MergeFrom(other.DeviceSyncMessage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Conversation = input.ReadString();
            break;
          }
          case 18: {
            if (senderKeyDistributionMessage_ == null) {
              SenderKeyDistributionMessage = new global::waxnet.Internal.Proto.SenderKeyDistributionMessage();
            }
            input.ReadMessage(SenderKeyDistributionMessage);
            break;
          }
          case 26: {
            if (imageMessage_ == null) {
              ImageMessage = new global::waxnet.Internal.Proto.ImageMessage();
            }
            input.ReadMessage(ImageMessage);
            break;
          }
          case 34: {
            if (contactMessage_ == null) {
              ContactMessage = new global::waxnet.Internal.Proto.ContactMessage();
            }
            input.ReadMessage(ContactMessage);
            break;
          }
          case 42: {
            if (locationMessage_ == null) {
              LocationMessage = new global::waxnet.Internal.Proto.LocationMessage();
            }
            input.ReadMessage(LocationMessage);
            break;
          }
          case 50: {
            if (extendedTextMessage_ == null) {
              ExtendedTextMessage = new global::waxnet.Internal.Proto.ExtendedTextMessage();
            }
            input.ReadMessage(ExtendedTextMessage);
            break;
          }
          case 58: {
            if (documentMessage_ == null) {
              DocumentMessage = new global::waxnet.Internal.Proto.DocumentMessage();
            }
            input.ReadMessage(DocumentMessage);
            break;
          }
          case 66: {
            if (audioMessage_ == null) {
              AudioMessage = new global::waxnet.Internal.Proto.AudioMessage();
            }
            input.ReadMessage(AudioMessage);
            break;
          }
          case 74: {
            if (videoMessage_ == null) {
              VideoMessage = new global::waxnet.Internal.Proto.VideoMessage();
            }
            input.ReadMessage(VideoMessage);
            break;
          }
          case 82: {
            if (call_ == null) {
              Call = new global::waxnet.Internal.Proto.Call();
            }
            input.ReadMessage(Call);
            break;
          }
          case 90: {
            if (chat_ == null) {
              Chat = new global::waxnet.Internal.Proto.Chat();
            }
            input.ReadMessage(Chat);
            break;
          }
          case 98: {
            if (protocolMessage_ == null) {
              ProtocolMessage = new global::waxnet.Internal.Proto.ProtocolMessage();
            }
            input.ReadMessage(ProtocolMessage);
            break;
          }
          case 106: {
            if (contactsArrayMessage_ == null) {
              ContactsArrayMessage = new global::waxnet.Internal.Proto.ContactsArrayMessage();
            }
            input.ReadMessage(ContactsArrayMessage);
            break;
          }
          case 114: {
            if (highlyStructuredMessage_ == null) {
              HighlyStructuredMessage = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(HighlyStructuredMessage);
            break;
          }
          case 122: {
            if (fastRatchetKeySenderKeyDistributionMessage_ == null) {
              FastRatchetKeySenderKeyDistributionMessage = new global::waxnet.Internal.Proto.SenderKeyDistributionMessage();
            }
            input.ReadMessage(FastRatchetKeySenderKeyDistributionMessage);
            break;
          }
          case 130: {
            if (sendPaymentMessage_ == null) {
              SendPaymentMessage = new global::waxnet.Internal.Proto.SendPaymentMessage();
            }
            input.ReadMessage(SendPaymentMessage);
            break;
          }
          case 146: {
            if (liveLocationMessage_ == null) {
              LiveLocationMessage = new global::waxnet.Internal.Proto.LiveLocationMessage();
            }
            input.ReadMessage(LiveLocationMessage);
            break;
          }
          case 178: {
            if (requestPaymentMessage_ == null) {
              RequestPaymentMessage = new global::waxnet.Internal.Proto.RequestPaymentMessage();
            }
            input.ReadMessage(RequestPaymentMessage);
            break;
          }
          case 186: {
            if (declinePaymentRequestMessage_ == null) {
              DeclinePaymentRequestMessage = new global::waxnet.Internal.Proto.DeclinePaymentRequestMessage();
            }
            input.ReadMessage(DeclinePaymentRequestMessage);
            break;
          }
          case 194: {
            if (cancelPaymentRequestMessage_ == null) {
              CancelPaymentRequestMessage = new global::waxnet.Internal.Proto.CancelPaymentRequestMessage();
            }
            input.ReadMessage(CancelPaymentRequestMessage);
            break;
          }
          case 202: {
            if (templateMessage_ == null) {
              TemplateMessage = new global::waxnet.Internal.Proto.TemplateMessage();
            }
            input.ReadMessage(TemplateMessage);
            break;
          }
          case 210: {
            if (stickerMessage_ == null) {
              StickerMessage = new global::waxnet.Internal.Proto.StickerMessage();
            }
            input.ReadMessage(StickerMessage);
            break;
          }
          case 226: {
            if (groupInviteMessage_ == null) {
              GroupInviteMessage = new global::waxnet.Internal.Proto.GroupInviteMessage();
            }
            input.ReadMessage(GroupInviteMessage);
            break;
          }
          case 234: {
            if (templateButtonReplyMessage_ == null) {
              TemplateButtonReplyMessage = new global::waxnet.Internal.Proto.TemplateButtonReplyMessage();
            }
            input.ReadMessage(TemplateButtonReplyMessage);
            break;
          }
          case 242: {
            if (productMessage_ == null) {
              ProductMessage = new global::waxnet.Internal.Proto.ProductMessage();
            }
            input.ReadMessage(ProductMessage);
            break;
          }
          case 250: {
            if (deviceSentMessage_ == null) {
              DeviceSentMessage = new global::waxnet.Internal.Proto.DeviceSentMessage();
            }
            input.ReadMessage(DeviceSentMessage);
            break;
          }
          case 258: {
            if (deviceSyncMessage_ == null) {
              DeviceSyncMessage = new global::waxnet.Internal.Proto.DeviceSyncMessage();
            }
            input.ReadMessage(DeviceSyncMessage);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Conversation = input.ReadString();
            break;
          }
          case 18: {
            if (senderKeyDistributionMessage_ == null) {
              SenderKeyDistributionMessage = new global::waxnet.Internal.Proto.SenderKeyDistributionMessage();
            }
            input.ReadMessage(SenderKeyDistributionMessage);
            break;
          }
          case 26: {
            if (imageMessage_ == null) {
              ImageMessage = new global::waxnet.Internal.Proto.ImageMessage();
            }
            input.ReadMessage(ImageMessage);
            break;
          }
          case 34: {
            if (contactMessage_ == null) {
              ContactMessage = new global::waxnet.Internal.Proto.ContactMessage();
            }
            input.ReadMessage(ContactMessage);
            break;
          }
          case 42: {
            if (locationMessage_ == null) {
              LocationMessage = new global::waxnet.Internal.Proto.LocationMessage();
            }
            input.ReadMessage(LocationMessage);
            break;
          }
          case 50: {
            if (extendedTextMessage_ == null) {
              ExtendedTextMessage = new global::waxnet.Internal.Proto.ExtendedTextMessage();
            }
            input.ReadMessage(ExtendedTextMessage);
            break;
          }
          case 58: {
            if (documentMessage_ == null) {
              DocumentMessage = new global::waxnet.Internal.Proto.DocumentMessage();
            }
            input.ReadMessage(DocumentMessage);
            break;
          }
          case 66: {
            if (audioMessage_ == null) {
              AudioMessage = new global::waxnet.Internal.Proto.AudioMessage();
            }
            input.ReadMessage(AudioMessage);
            break;
          }
          case 74: {
            if (videoMessage_ == null) {
              VideoMessage = new global::waxnet.Internal.Proto.VideoMessage();
            }
            input.ReadMessage(VideoMessage);
            break;
          }
          case 82: {
            if (call_ == null) {
              Call = new global::waxnet.Internal.Proto.Call();
            }
            input.ReadMessage(Call);
            break;
          }
          case 90: {
            if (chat_ == null) {
              Chat = new global::waxnet.Internal.Proto.Chat();
            }
            input.ReadMessage(Chat);
            break;
          }
          case 98: {
            if (protocolMessage_ == null) {
              ProtocolMessage = new global::waxnet.Internal.Proto.ProtocolMessage();
            }
            input.ReadMessage(ProtocolMessage);
            break;
          }
          case 106: {
            if (contactsArrayMessage_ == null) {
              ContactsArrayMessage = new global::waxnet.Internal.Proto.ContactsArrayMessage();
            }
            input.ReadMessage(ContactsArrayMessage);
            break;
          }
          case 114: {
            if (highlyStructuredMessage_ == null) {
              HighlyStructuredMessage = new global::waxnet.Internal.Proto.HighlyStructuredMessage();
            }
            input.ReadMessage(HighlyStructuredMessage);
            break;
          }
          case 122: {
            if (fastRatchetKeySenderKeyDistributionMessage_ == null) {
              FastRatchetKeySenderKeyDistributionMessage = new global::waxnet.Internal.Proto.SenderKeyDistributionMessage();
            }
            input.ReadMessage(FastRatchetKeySenderKeyDistributionMessage);
            break;
          }
          case 130: {
            if (sendPaymentMessage_ == null) {
              SendPaymentMessage = new global::waxnet.Internal.Proto.SendPaymentMessage();
            }
            input.ReadMessage(SendPaymentMessage);
            break;
          }
          case 146: {
            if (liveLocationMessage_ == null) {
              LiveLocationMessage = new global::waxnet.Internal.Proto.LiveLocationMessage();
            }
            input.ReadMessage(LiveLocationMessage);
            break;
          }
          case 178: {
            if (requestPaymentMessage_ == null) {
              RequestPaymentMessage = new global::waxnet.Internal.Proto.RequestPaymentMessage();
            }
            input.ReadMessage(RequestPaymentMessage);
            break;
          }
          case 186: {
            if (declinePaymentRequestMessage_ == null) {
              DeclinePaymentRequestMessage = new global::waxnet.Internal.Proto.DeclinePaymentRequestMessage();
            }
            input.ReadMessage(DeclinePaymentRequestMessage);
            break;
          }
          case 194: {
            if (cancelPaymentRequestMessage_ == null) {
              CancelPaymentRequestMessage = new global::waxnet.Internal.Proto.CancelPaymentRequestMessage();
            }
            input.ReadMessage(CancelPaymentRequestMessage);
            break;
          }
          case 202: {
            if (templateMessage_ == null) {
              TemplateMessage = new global::waxnet.Internal.Proto.TemplateMessage();
            }
            input.ReadMessage(TemplateMessage);
            break;
          }
          case 210: {
            if (stickerMessage_ == null) {
              StickerMessage = new global::waxnet.Internal.Proto.StickerMessage();
            }
            input.ReadMessage(StickerMessage);
            break;
          }
          case 226: {
            if (groupInviteMessage_ == null) {
              GroupInviteMessage = new global::waxnet.Internal.Proto.GroupInviteMessage();
            }
            input.ReadMessage(GroupInviteMessage);
            break;
          }
          case 234: {
            if (templateButtonReplyMessage_ == null) {
              TemplateButtonReplyMessage = new global::waxnet.Internal.Proto.TemplateButtonReplyMessage();
            }
            input.ReadMessage(TemplateButtonReplyMessage);
            break;
          }
          case 242: {
            if (productMessage_ == null) {
              ProductMessage = new global::waxnet.Internal.Proto.ProductMessage();
            }
            input.ReadMessage(ProductMessage);
            break;
          }
          case 250: {
            if (deviceSentMessage_ == null) {
              DeviceSentMessage = new global::waxnet.Internal.Proto.DeviceSentMessage();
            }
            input.ReadMessage(DeviceSentMessage);
            break;
          }
          case 258: {
            if (deviceSyncMessage_ == null) {
              DeviceSyncMessage = new global::waxnet.Internal.Proto.DeviceSyncMessage();
            }
            input.ReadMessage(DeviceSyncMessage);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MessageKey : pb::IMessage<MessageKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MessageKey> _parser = new pb::MessageParser<MessageKey>(() => new MessageKey());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageKey(MessageKey other) : this() {
      _hasBits0 = other._hasBits0;
      remoteJid_ = other.remoteJid_;
      fromMe_ = other.fromMe_;
      id_ = other.id_;
      participant_ = other.participant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageKey Clone() {
      return new MessageKey(this);
    }

    /// <summary>Field number for the "remoteJid" field.</summary>
    public const int RemoteJidFieldNumber = 1;
    private readonly static string RemoteJidDefaultValue = "";

    private string remoteJid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemoteJid {
      get { return remoteJid_ ?? RemoteJidDefaultValue; }
      set {
        remoteJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "remoteJid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRemoteJid {
      get { return remoteJid_ != null; }
    }
    /// <summary>Clears the value of the "remoteJid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRemoteJid() {
      remoteJid_ = null;
    }

    /// <summary>Field number for the "fromMe" field.</summary>
    public const int FromMeFieldNumber = 2;
    private readonly static bool FromMeDefaultValue = false;

    private bool fromMe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FromMe {
      get { if ((_hasBits0 & 1) != 0) { return fromMe_; } else { return FromMeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fromMe_ = value;
      }
    }
    /// <summary>Gets whether the "fromMe" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFromMe {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fromMe" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFromMe() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 4;
    private readonly static string ParticipantDefaultValue = "";

    private string participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Participant {
      get { return participant_ ?? ParticipantDefaultValue; }
      set {
        participant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "participant" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParticipant {
      get { return participant_ != null; }
    }
    /// <summary>Clears the value of the "participant" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParticipant() {
      participant_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RemoteJid != other.RemoteJid) return false;
      if (FromMe != other.FromMe) return false;
      if (Id != other.Id) return false;
      if (Participant != other.Participant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRemoteJid) hash ^= RemoteJid.GetHashCode();
      if (HasFromMe) hash ^= FromMe.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasParticipant) hash ^= Participant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRemoteJid) {
        output.WriteRawTag(10);
        output.WriteString(RemoteJid);
      }
      if (HasFromMe) {
        output.WriteRawTag(16);
        output.WriteBool(FromMe);
      }
      if (HasId) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (HasParticipant) {
        output.WriteRawTag(34);
        output.WriteString(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRemoteJid) {
        output.WriteRawTag(10);
        output.WriteString(RemoteJid);
      }
      if (HasFromMe) {
        output.WriteRawTag(16);
        output.WriteBool(FromMe);
      }
      if (HasId) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (HasParticipant) {
        output.WriteRawTag(34);
        output.WriteString(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRemoteJid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteJid);
      }
      if (HasFromMe) {
        size += 1 + 1;
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasParticipant) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Participant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageKey other) {
      if (other == null) {
        return;
      }
      if (other.HasRemoteJid) {
        RemoteJid = other.RemoteJid;
      }
      if (other.HasFromMe) {
        FromMe = other.FromMe;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasParticipant) {
        Participant = other.Participant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RemoteJid = input.ReadString();
            break;
          }
          case 16: {
            FromMe = input.ReadBool();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Participant = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RemoteJid = input.ReadString();
            break;
          }
          case 16: {
            FromMe = input.ReadBool();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Participant = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class WebFeatures : pb::IMessage<WebFeatures>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebFeatures> _parser = new pb::MessageParser<WebFeatures>(() => new WebFeatures());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebFeatures> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebFeatures() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebFeatures(WebFeatures other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      labelsDisplay_ = other.labelsDisplay_;
      voipIndividualOutgoing_ = other.voipIndividualOutgoing_;
      groupsV3_ = other.groupsV3_;
      groupsV3Create_ = other.groupsV3Create_;
      changeNumberV2_ = other.changeNumberV2_;
      queryStatusV3Thumbnail_ = other.queryStatusV3Thumbnail_;
      liveLocations_ = other.liveLocations_;
      queryVname_ = other.queryVname_;
      voipIndividualIncoming_ = other.voipIndividualIncoming_;
      quickRepliesQuery_ = other.quickRepliesQuery_;
      payments_ = other.payments_;
      stickerPackQuery_ = other.stickerPackQuery_;
      liveLocationsFinal_ = other.liveLocationsFinal_;
      labelsEdit_ = other.labelsEdit_;
      mediaUpload_ = other.mediaUpload_;
      mediaUploadRichQuickReplies_ = other.mediaUploadRichQuickReplies_;
      vnameV2_ = other.vnameV2_;
      videoPlaybackUrl_ = other.videoPlaybackUrl_;
      statusRanking_ = other.statusRanking_;
      voipIndividualVideo_ = other.voipIndividualVideo_;
      thirdPartyStickers_ = other.thirdPartyStickers_;
      frequentlyForwardedSetting_ = other.frequentlyForwardedSetting_;
      groupsV4JoinPermission_ = other.groupsV4JoinPermission_;
      recentStickers_ = other.recentStickers_;
      catalog_ = other.catalog_;
      starredStickers_ = other.starredStickers_;
      voipGroupCall_ = other.voipGroupCall_;
      templateMessage_ = other.templateMessage_;
      templateMessageInteractivity_ = other.templateMessageInteractivity_;
      ephemeralMessages_ = other.ephemeralMessages_;
      e2ENotificationSync_ = other.e2ENotificationSync_;
      recentStickersV2_ = other.recentStickersV2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebFeatures Clone() {
      return new WebFeatures(this);
    }

    /// <summary>Field number for the "labelsDisplay" field.</summary>
    public const int LabelsDisplayFieldNumber = 1;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LabelsDisplayDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG labelsDisplay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LabelsDisplay {
      get { if ((_hasBits0 & 1) != 0) { return labelsDisplay_; } else { return LabelsDisplayDefaultValue; } }
      set {
        _hasBits0 |= 1;
        labelsDisplay_ = value;
      }
    }
    /// <summary>Gets whether the "labelsDisplay" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabelsDisplay {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "labelsDisplay" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabelsDisplay() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "voipIndividualOutgoing" field.</summary>
    public const int VoipIndividualOutgoingFieldNumber = 2;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipIndividualOutgoingDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG voipIndividualOutgoing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipIndividualOutgoing {
      get { if ((_hasBits0 & 2) != 0) { return voipIndividualOutgoing_; } else { return VoipIndividualOutgoingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        voipIndividualOutgoing_ = value;
      }
    }
    /// <summary>Gets whether the "voipIndividualOutgoing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVoipIndividualOutgoing {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "voipIndividualOutgoing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVoipIndividualOutgoing() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "groupsV3" field.</summary>
    public const int GroupsV3FieldNumber = 3;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG GroupsV3DefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG groupsV3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG GroupsV3 {
      get { if ((_hasBits0 & 4) != 0) { return groupsV3_; } else { return GroupsV3DefaultValue; } }
      set {
        _hasBits0 |= 4;
        groupsV3_ = value;
      }
    }
    /// <summary>Gets whether the "groupsV3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupsV3 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "groupsV3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupsV3() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "groupsV3Create" field.</summary>
    public const int GroupsV3CreateFieldNumber = 4;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG GroupsV3CreateDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG groupsV3Create_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG GroupsV3Create {
      get { if ((_hasBits0 & 8) != 0) { return groupsV3Create_; } else { return GroupsV3CreateDefaultValue; } }
      set {
        _hasBits0 |= 8;
        groupsV3Create_ = value;
      }
    }
    /// <summary>Gets whether the "groupsV3Create" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupsV3Create {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "groupsV3Create" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupsV3Create() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "changeNumberV2" field.</summary>
    public const int ChangeNumberV2FieldNumber = 5;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG ChangeNumberV2DefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG changeNumberV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG ChangeNumberV2 {
      get { if ((_hasBits0 & 16) != 0) { return changeNumberV2_; } else { return ChangeNumberV2DefaultValue; } }
      set {
        _hasBits0 |= 16;
        changeNumberV2_ = value;
      }
    }
    /// <summary>Gets whether the "changeNumberV2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChangeNumberV2 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "changeNumberV2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChangeNumberV2() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "queryStatusV3Thumbnail" field.</summary>
    public const int QueryStatusV3ThumbnailFieldNumber = 6;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG QueryStatusV3ThumbnailDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG queryStatusV3Thumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG QueryStatusV3Thumbnail {
      get { if ((_hasBits0 & 32) != 0) { return queryStatusV3Thumbnail_; } else { return QueryStatusV3ThumbnailDefaultValue; } }
      set {
        _hasBits0 |= 32;
        queryStatusV3Thumbnail_ = value;
      }
    }
    /// <summary>Gets whether the "queryStatusV3Thumbnail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQueryStatusV3Thumbnail {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "queryStatusV3Thumbnail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQueryStatusV3Thumbnail() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "liveLocations" field.</summary>
    public const int LiveLocationsFieldNumber = 7;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LiveLocationsDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG liveLocations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LiveLocations {
      get { if ((_hasBits0 & 64) != 0) { return liveLocations_; } else { return LiveLocationsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        liveLocations_ = value;
      }
    }
    /// <summary>Gets whether the "liveLocations" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLiveLocations {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "liveLocations" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLiveLocations() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "queryVname" field.</summary>
    public const int QueryVnameFieldNumber = 8;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG QueryVnameDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG queryVname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG QueryVname {
      get { if ((_hasBits0 & 128) != 0) { return queryVname_; } else { return QueryVnameDefaultValue; } }
      set {
        _hasBits0 |= 128;
        queryVname_ = value;
      }
    }
    /// <summary>Gets whether the "queryVname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQueryVname {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "queryVname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQueryVname() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "voipIndividualIncoming" field.</summary>
    public const int VoipIndividualIncomingFieldNumber = 9;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipIndividualIncomingDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG voipIndividualIncoming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipIndividualIncoming {
      get { if ((_hasBits0 & 256) != 0) { return voipIndividualIncoming_; } else { return VoipIndividualIncomingDefaultValue; } }
      set {
        _hasBits0 |= 256;
        voipIndividualIncoming_ = value;
      }
    }
    /// <summary>Gets whether the "voipIndividualIncoming" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVoipIndividualIncoming {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "voipIndividualIncoming" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVoipIndividualIncoming() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "quickRepliesQuery" field.</summary>
    public const int QuickRepliesQueryFieldNumber = 10;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG QuickRepliesQueryDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG quickRepliesQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG QuickRepliesQuery {
      get { if ((_hasBits0 & 512) != 0) { return quickRepliesQuery_; } else { return QuickRepliesQueryDefaultValue; } }
      set {
        _hasBits0 |= 512;
        quickRepliesQuery_ = value;
      }
    }
    /// <summary>Gets whether the "quickRepliesQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuickRepliesQuery {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "quickRepliesQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuickRepliesQuery() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "payments" field.</summary>
    public const int PaymentsFieldNumber = 11;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG PaymentsDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG payments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG Payments {
      get { if ((_hasBits0 & 1024) != 0) { return payments_; } else { return PaymentsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        payments_ = value;
      }
    }
    /// <summary>Gets whether the "payments" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPayments {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "payments" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayments() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "stickerPackQuery" field.</summary>
    public const int StickerPackQueryFieldNumber = 12;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG StickerPackQueryDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG stickerPackQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG StickerPackQuery {
      get { if ((_hasBits0 & 2048) != 0) { return stickerPackQuery_; } else { return StickerPackQueryDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        stickerPackQuery_ = value;
      }
    }
    /// <summary>Gets whether the "stickerPackQuery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStickerPackQuery {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "stickerPackQuery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStickerPackQuery() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "liveLocationsFinal" field.</summary>
    public const int LiveLocationsFinalFieldNumber = 13;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LiveLocationsFinalDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG liveLocationsFinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LiveLocationsFinal {
      get { if ((_hasBits0 & 4096) != 0) { return liveLocationsFinal_; } else { return LiveLocationsFinalDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        liveLocationsFinal_ = value;
      }
    }
    /// <summary>Gets whether the "liveLocationsFinal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLiveLocationsFinal {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "liveLocationsFinal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLiveLocationsFinal() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "labelsEdit" field.</summary>
    public const int LabelsEditFieldNumber = 14;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LabelsEditDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG labelsEdit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG LabelsEdit {
      get { if ((_hasBits0 & 8192) != 0) { return labelsEdit_; } else { return LabelsEditDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        labelsEdit_ = value;
      }
    }
    /// <summary>Gets whether the "labelsEdit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabelsEdit {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "labelsEdit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabelsEdit() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "mediaUpload" field.</summary>
    public const int MediaUploadFieldNumber = 15;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG MediaUploadDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG mediaUpload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG MediaUpload {
      get { if ((_hasBits0 & 16384) != 0) { return mediaUpload_; } else { return MediaUploadDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        mediaUpload_ = value;
      }
    }
    /// <summary>Gets whether the "mediaUpload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaUpload {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "mediaUpload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaUpload() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "mediaUploadRichQuickReplies" field.</summary>
    public const int MediaUploadRichQuickRepliesFieldNumber = 18;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG MediaUploadRichQuickRepliesDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG mediaUploadRichQuickReplies_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG MediaUploadRichQuickReplies {
      get { if ((_hasBits0 & 32768) != 0) { return mediaUploadRichQuickReplies_; } else { return MediaUploadRichQuickRepliesDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        mediaUploadRichQuickReplies_ = value;
      }
    }
    /// <summary>Gets whether the "mediaUploadRichQuickReplies" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaUploadRichQuickReplies {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "mediaUploadRichQuickReplies" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaUploadRichQuickReplies() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "vnameV2" field.</summary>
    public const int VnameV2FieldNumber = 19;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VnameV2DefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG vnameV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VnameV2 {
      get { if ((_hasBits0 & 65536) != 0) { return vnameV2_; } else { return VnameV2DefaultValue; } }
      set {
        _hasBits0 |= 65536;
        vnameV2_ = value;
      }
    }
    /// <summary>Gets whether the "vnameV2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVnameV2 {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "vnameV2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVnameV2() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "videoPlaybackUrl" field.</summary>
    public const int VideoPlaybackUrlFieldNumber = 20;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VideoPlaybackUrlDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG videoPlaybackUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VideoPlaybackUrl {
      get { if ((_hasBits0 & 131072) != 0) { return videoPlaybackUrl_; } else { return VideoPlaybackUrlDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        videoPlaybackUrl_ = value;
      }
    }
    /// <summary>Gets whether the "videoPlaybackUrl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVideoPlaybackUrl {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "videoPlaybackUrl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVideoPlaybackUrl() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "statusRanking" field.</summary>
    public const int StatusRankingFieldNumber = 21;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG StatusRankingDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG statusRanking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG StatusRanking {
      get { if ((_hasBits0 & 262144) != 0) { return statusRanking_; } else { return StatusRankingDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        statusRanking_ = value;
      }
    }
    /// <summary>Gets whether the "statusRanking" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatusRanking {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "statusRanking" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusRanking() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "voipIndividualVideo" field.</summary>
    public const int VoipIndividualVideoFieldNumber = 22;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipIndividualVideoDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG voipIndividualVideo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipIndividualVideo {
      get { if ((_hasBits0 & 524288) != 0) { return voipIndividualVideo_; } else { return VoipIndividualVideoDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        voipIndividualVideo_ = value;
      }
    }
    /// <summary>Gets whether the "voipIndividualVideo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVoipIndividualVideo {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "voipIndividualVideo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVoipIndividualVideo() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "thirdPartyStickers" field.</summary>
    public const int ThirdPartyStickersFieldNumber = 23;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG ThirdPartyStickersDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG thirdPartyStickers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG ThirdPartyStickers {
      get { if ((_hasBits0 & 1048576) != 0) { return thirdPartyStickers_; } else { return ThirdPartyStickersDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        thirdPartyStickers_ = value;
      }
    }
    /// <summary>Gets whether the "thirdPartyStickers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasThirdPartyStickers {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "thirdPartyStickers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearThirdPartyStickers() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "frequentlyForwardedSetting" field.</summary>
    public const int FrequentlyForwardedSettingFieldNumber = 24;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG FrequentlyForwardedSettingDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG frequentlyForwardedSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG FrequentlyForwardedSetting {
      get { if ((_hasBits0 & 2097152) != 0) { return frequentlyForwardedSetting_; } else { return FrequentlyForwardedSettingDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        frequentlyForwardedSetting_ = value;
      }
    }
    /// <summary>Gets whether the "frequentlyForwardedSetting" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFrequentlyForwardedSetting {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "frequentlyForwardedSetting" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFrequentlyForwardedSetting() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "groupsV4JoinPermission" field.</summary>
    public const int GroupsV4JoinPermissionFieldNumber = 25;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG GroupsV4JoinPermissionDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG groupsV4JoinPermission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG GroupsV4JoinPermission {
      get { if ((_hasBits0 & 4194304) != 0) { return groupsV4JoinPermission_; } else { return GroupsV4JoinPermissionDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        groupsV4JoinPermission_ = value;
      }
    }
    /// <summary>Gets whether the "groupsV4JoinPermission" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGroupsV4JoinPermission {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "groupsV4JoinPermission" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupsV4JoinPermission() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "recentStickers" field.</summary>
    public const int RecentStickersFieldNumber = 26;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG RecentStickersDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG recentStickers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG RecentStickers {
      get { if ((_hasBits0 & 8388608) != 0) { return recentStickers_; } else { return RecentStickersDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        recentStickers_ = value;
      }
    }
    /// <summary>Gets whether the "recentStickers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecentStickers {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "recentStickers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecentStickers() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "catalog" field.</summary>
    public const int CatalogFieldNumber = 27;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG CatalogDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG catalog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG Catalog {
      get { if ((_hasBits0 & 16777216) != 0) { return catalog_; } else { return CatalogDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        catalog_ = value;
      }
    }
    /// <summary>Gets whether the "catalog" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCatalog {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "catalog" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCatalog() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "starredStickers" field.</summary>
    public const int StarredStickersFieldNumber = 28;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG StarredStickersDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG starredStickers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG StarredStickers {
      get { if ((_hasBits0 & 33554432) != 0) { return starredStickers_; } else { return StarredStickersDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        starredStickers_ = value;
      }
    }
    /// <summary>Gets whether the "starredStickers" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStarredStickers {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "starredStickers" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStarredStickers() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "voipGroupCall" field.</summary>
    public const int VoipGroupCallFieldNumber = 29;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipGroupCallDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG voipGroupCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG VoipGroupCall {
      get { if ((_hasBits0 & 67108864) != 0) { return voipGroupCall_; } else { return VoipGroupCallDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        voipGroupCall_ = value;
      }
    }
    /// <summary>Gets whether the "voipGroupCall" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVoipGroupCall {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "voipGroupCall" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVoipGroupCall() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "templateMessage" field.</summary>
    public const int TemplateMessageFieldNumber = 30;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG TemplateMessageDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG templateMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG TemplateMessage {
      get { if ((_hasBits0 & 134217728) != 0) { return templateMessage_; } else { return TemplateMessageDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        templateMessage_ = value;
      }
    }
    /// <summary>Gets whether the "templateMessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTemplateMessage {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "templateMessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTemplateMessage() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "templateMessageInteractivity" field.</summary>
    public const int TemplateMessageInteractivityFieldNumber = 31;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG TemplateMessageInteractivityDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG templateMessageInteractivity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG TemplateMessageInteractivity {
      get { if ((_hasBits0 & 268435456) != 0) { return templateMessageInteractivity_; } else { return TemplateMessageInteractivityDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        templateMessageInteractivity_ = value;
      }
    }
    /// <summary>Gets whether the "templateMessageInteractivity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTemplateMessageInteractivity {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "templateMessageInteractivity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTemplateMessageInteractivity() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "ephemeralMessages" field.</summary>
    public const int EphemeralMessagesFieldNumber = 32;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG EphemeralMessagesDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG ephemeralMessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG EphemeralMessages {
      get { if ((_hasBits0 & 536870912) != 0) { return ephemeralMessages_; } else { return EphemeralMessagesDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        ephemeralMessages_ = value;
      }
    }
    /// <summary>Gets whether the "ephemeralMessages" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEphemeralMessages {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "ephemeralMessages" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEphemeralMessages() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "e2ENotificationSync" field.</summary>
    public const int E2ENotificationSyncFieldNumber = 33;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG E2ENotificationSyncDefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG e2ENotificationSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG E2ENotificationSync {
      get { if ((_hasBits0 & 1073741824) != 0) { return e2ENotificationSync_; } else { return E2ENotificationSyncDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        e2ENotificationSync_ = value;
      }
    }
    /// <summary>Gets whether the "e2ENotificationSync" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasE2ENotificationSync {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "e2ENotificationSync" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearE2ENotificationSync() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "recentStickersV2" field.</summary>
    public const int RecentStickersV2FieldNumber = 34;
    private readonly static global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG RecentStickersV2DefaultValue = global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG.NotStarted;

    private global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG recentStickersV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG RecentStickersV2 {
      get { if ((_hasBits0 & -2147483648) != 0) { return recentStickersV2_; } else { return RecentStickersV2DefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        recentStickersV2_ = value;
      }
    }
    /// <summary>Gets whether the "recentStickersV2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecentStickersV2 {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "recentStickersV2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecentStickersV2() {
      _hasBits0 &= ~-2147483648;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebFeatures);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebFeatures other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LabelsDisplay != other.LabelsDisplay) return false;
      if (VoipIndividualOutgoing != other.VoipIndividualOutgoing) return false;
      if (GroupsV3 != other.GroupsV3) return false;
      if (GroupsV3Create != other.GroupsV3Create) return false;
      if (ChangeNumberV2 != other.ChangeNumberV2) return false;
      if (QueryStatusV3Thumbnail != other.QueryStatusV3Thumbnail) return false;
      if (LiveLocations != other.LiveLocations) return false;
      if (QueryVname != other.QueryVname) return false;
      if (VoipIndividualIncoming != other.VoipIndividualIncoming) return false;
      if (QuickRepliesQuery != other.QuickRepliesQuery) return false;
      if (Payments != other.Payments) return false;
      if (StickerPackQuery != other.StickerPackQuery) return false;
      if (LiveLocationsFinal != other.LiveLocationsFinal) return false;
      if (LabelsEdit != other.LabelsEdit) return false;
      if (MediaUpload != other.MediaUpload) return false;
      if (MediaUploadRichQuickReplies != other.MediaUploadRichQuickReplies) return false;
      if (VnameV2 != other.VnameV2) return false;
      if (VideoPlaybackUrl != other.VideoPlaybackUrl) return false;
      if (StatusRanking != other.StatusRanking) return false;
      if (VoipIndividualVideo != other.VoipIndividualVideo) return false;
      if (ThirdPartyStickers != other.ThirdPartyStickers) return false;
      if (FrequentlyForwardedSetting != other.FrequentlyForwardedSetting) return false;
      if (GroupsV4JoinPermission != other.GroupsV4JoinPermission) return false;
      if (RecentStickers != other.RecentStickers) return false;
      if (Catalog != other.Catalog) return false;
      if (StarredStickers != other.StarredStickers) return false;
      if (VoipGroupCall != other.VoipGroupCall) return false;
      if (TemplateMessage != other.TemplateMessage) return false;
      if (TemplateMessageInteractivity != other.TemplateMessageInteractivity) return false;
      if (EphemeralMessages != other.EphemeralMessages) return false;
      if (E2ENotificationSync != other.E2ENotificationSync) return false;
      if (RecentStickersV2 != other.RecentStickersV2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLabelsDisplay) hash ^= LabelsDisplay.GetHashCode();
      if (HasVoipIndividualOutgoing) hash ^= VoipIndividualOutgoing.GetHashCode();
      if (HasGroupsV3) hash ^= GroupsV3.GetHashCode();
      if (HasGroupsV3Create) hash ^= GroupsV3Create.GetHashCode();
      if (HasChangeNumberV2) hash ^= ChangeNumberV2.GetHashCode();
      if (HasQueryStatusV3Thumbnail) hash ^= QueryStatusV3Thumbnail.GetHashCode();
      if (HasLiveLocations) hash ^= LiveLocations.GetHashCode();
      if (HasQueryVname) hash ^= QueryVname.GetHashCode();
      if (HasVoipIndividualIncoming) hash ^= VoipIndividualIncoming.GetHashCode();
      if (HasQuickRepliesQuery) hash ^= QuickRepliesQuery.GetHashCode();
      if (HasPayments) hash ^= Payments.GetHashCode();
      if (HasStickerPackQuery) hash ^= StickerPackQuery.GetHashCode();
      if (HasLiveLocationsFinal) hash ^= LiveLocationsFinal.GetHashCode();
      if (HasLabelsEdit) hash ^= LabelsEdit.GetHashCode();
      if (HasMediaUpload) hash ^= MediaUpload.GetHashCode();
      if (HasMediaUploadRichQuickReplies) hash ^= MediaUploadRichQuickReplies.GetHashCode();
      if (HasVnameV2) hash ^= VnameV2.GetHashCode();
      if (HasVideoPlaybackUrl) hash ^= VideoPlaybackUrl.GetHashCode();
      if (HasStatusRanking) hash ^= StatusRanking.GetHashCode();
      if (HasVoipIndividualVideo) hash ^= VoipIndividualVideo.GetHashCode();
      if (HasThirdPartyStickers) hash ^= ThirdPartyStickers.GetHashCode();
      if (HasFrequentlyForwardedSetting) hash ^= FrequentlyForwardedSetting.GetHashCode();
      if (HasGroupsV4JoinPermission) hash ^= GroupsV4JoinPermission.GetHashCode();
      if (HasRecentStickers) hash ^= RecentStickers.GetHashCode();
      if (HasCatalog) hash ^= Catalog.GetHashCode();
      if (HasStarredStickers) hash ^= StarredStickers.GetHashCode();
      if (HasVoipGroupCall) hash ^= VoipGroupCall.GetHashCode();
      if (HasTemplateMessage) hash ^= TemplateMessage.GetHashCode();
      if (HasTemplateMessageInteractivity) hash ^= TemplateMessageInteractivity.GetHashCode();
      if (HasEphemeralMessages) hash ^= EphemeralMessages.GetHashCode();
      if (HasE2ENotificationSync) hash ^= E2ENotificationSync.GetHashCode();
      if (HasRecentStickersV2) hash ^= RecentStickersV2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLabelsDisplay) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LabelsDisplay);
      }
      if (HasVoipIndividualOutgoing) {
        output.WriteRawTag(16);
        output.WriteEnum((int) VoipIndividualOutgoing);
      }
      if (HasGroupsV3) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GroupsV3);
      }
      if (HasGroupsV3Create) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GroupsV3Create);
      }
      if (HasChangeNumberV2) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ChangeNumberV2);
      }
      if (HasQueryStatusV3Thumbnail) {
        output.WriteRawTag(48);
        output.WriteEnum((int) QueryStatusV3Thumbnail);
      }
      if (HasLiveLocations) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LiveLocations);
      }
      if (HasQueryVname) {
        output.WriteRawTag(64);
        output.WriteEnum((int) QueryVname);
      }
      if (HasVoipIndividualIncoming) {
        output.WriteRawTag(72);
        output.WriteEnum((int) VoipIndividualIncoming);
      }
      if (HasQuickRepliesQuery) {
        output.WriteRawTag(80);
        output.WriteEnum((int) QuickRepliesQuery);
      }
      if (HasPayments) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Payments);
      }
      if (HasStickerPackQuery) {
        output.WriteRawTag(96);
        output.WriteEnum((int) StickerPackQuery);
      }
      if (HasLiveLocationsFinal) {
        output.WriteRawTag(104);
        output.WriteEnum((int) LiveLocationsFinal);
      }
      if (HasLabelsEdit) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LabelsEdit);
      }
      if (HasMediaUpload) {
        output.WriteRawTag(120);
        output.WriteEnum((int) MediaUpload);
      }
      if (HasMediaUploadRichQuickReplies) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) MediaUploadRichQuickReplies);
      }
      if (HasVnameV2) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) VnameV2);
      }
      if (HasVideoPlaybackUrl) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) VideoPlaybackUrl);
      }
      if (HasStatusRanking) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) StatusRanking);
      }
      if (HasVoipIndividualVideo) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) VoipIndividualVideo);
      }
      if (HasThirdPartyStickers) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) ThirdPartyStickers);
      }
      if (HasFrequentlyForwardedSetting) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) FrequentlyForwardedSetting);
      }
      if (HasGroupsV4JoinPermission) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) GroupsV4JoinPermission);
      }
      if (HasRecentStickers) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RecentStickers);
      }
      if (HasCatalog) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) Catalog);
      }
      if (HasStarredStickers) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) StarredStickers);
      }
      if (HasVoipGroupCall) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) VoipGroupCall);
      }
      if (HasTemplateMessage) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) TemplateMessage);
      }
      if (HasTemplateMessageInteractivity) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) TemplateMessageInteractivity);
      }
      if (HasEphemeralMessages) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) EphemeralMessages);
      }
      if (HasE2ENotificationSync) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) E2ENotificationSync);
      }
      if (HasRecentStickersV2) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) RecentStickersV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLabelsDisplay) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LabelsDisplay);
      }
      if (HasVoipIndividualOutgoing) {
        output.WriteRawTag(16);
        output.WriteEnum((int) VoipIndividualOutgoing);
      }
      if (HasGroupsV3) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GroupsV3);
      }
      if (HasGroupsV3Create) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GroupsV3Create);
      }
      if (HasChangeNumberV2) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ChangeNumberV2);
      }
      if (HasQueryStatusV3Thumbnail) {
        output.WriteRawTag(48);
        output.WriteEnum((int) QueryStatusV3Thumbnail);
      }
      if (HasLiveLocations) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LiveLocations);
      }
      if (HasQueryVname) {
        output.WriteRawTag(64);
        output.WriteEnum((int) QueryVname);
      }
      if (HasVoipIndividualIncoming) {
        output.WriteRawTag(72);
        output.WriteEnum((int) VoipIndividualIncoming);
      }
      if (HasQuickRepliesQuery) {
        output.WriteRawTag(80);
        output.WriteEnum((int) QuickRepliesQuery);
      }
      if (HasPayments) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Payments);
      }
      if (HasStickerPackQuery) {
        output.WriteRawTag(96);
        output.WriteEnum((int) StickerPackQuery);
      }
      if (HasLiveLocationsFinal) {
        output.WriteRawTag(104);
        output.WriteEnum((int) LiveLocationsFinal);
      }
      if (HasLabelsEdit) {
        output.WriteRawTag(112);
        output.WriteEnum((int) LabelsEdit);
      }
      if (HasMediaUpload) {
        output.WriteRawTag(120);
        output.WriteEnum((int) MediaUpload);
      }
      if (HasMediaUploadRichQuickReplies) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) MediaUploadRichQuickReplies);
      }
      if (HasVnameV2) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) VnameV2);
      }
      if (HasVideoPlaybackUrl) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) VideoPlaybackUrl);
      }
      if (HasStatusRanking) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) StatusRanking);
      }
      if (HasVoipIndividualVideo) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) VoipIndividualVideo);
      }
      if (HasThirdPartyStickers) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) ThirdPartyStickers);
      }
      if (HasFrequentlyForwardedSetting) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) FrequentlyForwardedSetting);
      }
      if (HasGroupsV4JoinPermission) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) GroupsV4JoinPermission);
      }
      if (HasRecentStickers) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RecentStickers);
      }
      if (HasCatalog) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) Catalog);
      }
      if (HasStarredStickers) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) StarredStickers);
      }
      if (HasVoipGroupCall) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) VoipGroupCall);
      }
      if (HasTemplateMessage) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) TemplateMessage);
      }
      if (HasTemplateMessageInteractivity) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) TemplateMessageInteractivity);
      }
      if (HasEphemeralMessages) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) EphemeralMessages);
      }
      if (HasE2ENotificationSync) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) E2ENotificationSync);
      }
      if (HasRecentStickersV2) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) RecentStickersV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLabelsDisplay) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LabelsDisplay);
      }
      if (HasVoipIndividualOutgoing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VoipIndividualOutgoing);
      }
      if (HasGroupsV3) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupsV3);
      }
      if (HasGroupsV3Create) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupsV3Create);
      }
      if (HasChangeNumberV2) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChangeNumberV2);
      }
      if (HasQueryStatusV3Thumbnail) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QueryStatusV3Thumbnail);
      }
      if (HasLiveLocations) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LiveLocations);
      }
      if (HasQueryVname) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QueryVname);
      }
      if (HasVoipIndividualIncoming) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VoipIndividualIncoming);
      }
      if (HasQuickRepliesQuery) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuickRepliesQuery);
      }
      if (HasPayments) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Payments);
      }
      if (HasStickerPackQuery) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StickerPackQuery);
      }
      if (HasLiveLocationsFinal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LiveLocationsFinal);
      }
      if (HasLabelsEdit) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LabelsEdit);
      }
      if (HasMediaUpload) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MediaUpload);
      }
      if (HasMediaUploadRichQuickReplies) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MediaUploadRichQuickReplies);
      }
      if (HasVnameV2) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VnameV2);
      }
      if (HasVideoPlaybackUrl) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VideoPlaybackUrl);
      }
      if (HasStatusRanking) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StatusRanking);
      }
      if (HasVoipIndividualVideo) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VoipIndividualVideo);
      }
      if (HasThirdPartyStickers) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ThirdPartyStickers);
      }
      if (HasFrequentlyForwardedSetting) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FrequentlyForwardedSetting);
      }
      if (HasGroupsV4JoinPermission) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GroupsV4JoinPermission);
      }
      if (HasRecentStickers) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RecentStickers);
      }
      if (HasCatalog) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Catalog);
      }
      if (HasStarredStickers) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) StarredStickers);
      }
      if (HasVoipGroupCall) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VoipGroupCall);
      }
      if (HasTemplateMessage) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TemplateMessage);
      }
      if (HasTemplateMessageInteractivity) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TemplateMessageInteractivity);
      }
      if (HasEphemeralMessages) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EphemeralMessages);
      }
      if (HasE2ENotificationSync) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) E2ENotificationSync);
      }
      if (HasRecentStickersV2) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RecentStickersV2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebFeatures other) {
      if (other == null) {
        return;
      }
      if (other.HasLabelsDisplay) {
        LabelsDisplay = other.LabelsDisplay;
      }
      if (other.HasVoipIndividualOutgoing) {
        VoipIndividualOutgoing = other.VoipIndividualOutgoing;
      }
      if (other.HasGroupsV3) {
        GroupsV3 = other.GroupsV3;
      }
      if (other.HasGroupsV3Create) {
        GroupsV3Create = other.GroupsV3Create;
      }
      if (other.HasChangeNumberV2) {
        ChangeNumberV2 = other.ChangeNumberV2;
      }
      if (other.HasQueryStatusV3Thumbnail) {
        QueryStatusV3Thumbnail = other.QueryStatusV3Thumbnail;
      }
      if (other.HasLiveLocations) {
        LiveLocations = other.LiveLocations;
      }
      if (other.HasQueryVname) {
        QueryVname = other.QueryVname;
      }
      if (other.HasVoipIndividualIncoming) {
        VoipIndividualIncoming = other.VoipIndividualIncoming;
      }
      if (other.HasQuickRepliesQuery) {
        QuickRepliesQuery = other.QuickRepliesQuery;
      }
      if (other.HasPayments) {
        Payments = other.Payments;
      }
      if (other.HasStickerPackQuery) {
        StickerPackQuery = other.StickerPackQuery;
      }
      if (other.HasLiveLocationsFinal) {
        LiveLocationsFinal = other.LiveLocationsFinal;
      }
      if (other.HasLabelsEdit) {
        LabelsEdit = other.LabelsEdit;
      }
      if (other.HasMediaUpload) {
        MediaUpload = other.MediaUpload;
      }
      if (other.HasMediaUploadRichQuickReplies) {
        MediaUploadRichQuickReplies = other.MediaUploadRichQuickReplies;
      }
      if (other.HasVnameV2) {
        VnameV2 = other.VnameV2;
      }
      if (other.HasVideoPlaybackUrl) {
        VideoPlaybackUrl = other.VideoPlaybackUrl;
      }
      if (other.HasStatusRanking) {
        StatusRanking = other.StatusRanking;
      }
      if (other.HasVoipIndividualVideo) {
        VoipIndividualVideo = other.VoipIndividualVideo;
      }
      if (other.HasThirdPartyStickers) {
        ThirdPartyStickers = other.ThirdPartyStickers;
      }
      if (other.HasFrequentlyForwardedSetting) {
        FrequentlyForwardedSetting = other.FrequentlyForwardedSetting;
      }
      if (other.HasGroupsV4JoinPermission) {
        GroupsV4JoinPermission = other.GroupsV4JoinPermission;
      }
      if (other.HasRecentStickers) {
        RecentStickers = other.RecentStickers;
      }
      if (other.HasCatalog) {
        Catalog = other.Catalog;
      }
      if (other.HasStarredStickers) {
        StarredStickers = other.StarredStickers;
      }
      if (other.HasVoipGroupCall) {
        VoipGroupCall = other.VoipGroupCall;
      }
      if (other.HasTemplateMessage) {
        TemplateMessage = other.TemplateMessage;
      }
      if (other.HasTemplateMessageInteractivity) {
        TemplateMessageInteractivity = other.TemplateMessageInteractivity;
      }
      if (other.HasEphemeralMessages) {
        EphemeralMessages = other.EphemeralMessages;
      }
      if (other.HasE2ENotificationSync) {
        E2ENotificationSync = other.E2ENotificationSync;
      }
      if (other.HasRecentStickersV2) {
        RecentStickersV2 = other.RecentStickersV2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LabelsDisplay = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 16: {
            VoipIndividualOutgoing = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 24: {
            GroupsV3 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 32: {
            GroupsV3Create = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 40: {
            ChangeNumberV2 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 48: {
            QueryStatusV3Thumbnail = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 56: {
            LiveLocations = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 64: {
            QueryVname = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 72: {
            VoipIndividualIncoming = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 80: {
            QuickRepliesQuery = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 88: {
            Payments = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 96: {
            StickerPackQuery = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 104: {
            LiveLocationsFinal = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 112: {
            LabelsEdit = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 120: {
            MediaUpload = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 144: {
            MediaUploadRichQuickReplies = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 152: {
            VnameV2 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 160: {
            VideoPlaybackUrl = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 168: {
            StatusRanking = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 176: {
            VoipIndividualVideo = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 184: {
            ThirdPartyStickers = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 192: {
            FrequentlyForwardedSetting = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 200: {
            GroupsV4JoinPermission = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 208: {
            RecentStickers = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 216: {
            Catalog = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 224: {
            StarredStickers = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 232: {
            VoipGroupCall = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 240: {
            TemplateMessage = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 248: {
            TemplateMessageInteractivity = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 256: {
            EphemeralMessages = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 264: {
            E2ENotificationSync = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 272: {
            RecentStickersV2 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LabelsDisplay = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 16: {
            VoipIndividualOutgoing = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 24: {
            GroupsV3 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 32: {
            GroupsV3Create = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 40: {
            ChangeNumberV2 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 48: {
            QueryStatusV3Thumbnail = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 56: {
            LiveLocations = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 64: {
            QueryVname = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 72: {
            VoipIndividualIncoming = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 80: {
            QuickRepliesQuery = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 88: {
            Payments = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 96: {
            StickerPackQuery = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 104: {
            LiveLocationsFinal = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 112: {
            LabelsEdit = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 120: {
            MediaUpload = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 144: {
            MediaUploadRichQuickReplies = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 152: {
            VnameV2 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 160: {
            VideoPlaybackUrl = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 168: {
            StatusRanking = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 176: {
            VoipIndividualVideo = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 184: {
            ThirdPartyStickers = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 192: {
            FrequentlyForwardedSetting = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 200: {
            GroupsV4JoinPermission = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 208: {
            RecentStickers = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 216: {
            Catalog = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 224: {
            StarredStickers = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 232: {
            VoipGroupCall = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 240: {
            TemplateMessage = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 248: {
            TemplateMessageInteractivity = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 256: {
            EphemeralMessages = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 264: {
            E2ENotificationSync = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
          case 272: {
            RecentStickersV2 = (global::waxnet.Internal.Proto.WebFeatures.Types.WEB_FEATURES_FLAG) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the WebFeatures message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum WEB_FEATURES_FLAG {
        [pbr::OriginalName("NOT_STARTED")] NotStarted = 0,
        [pbr::OriginalName("FORCE_UPGRADE")] ForceUpgrade = 1,
        [pbr::OriginalName("DEVELOPMENT")] Development = 2,
        [pbr::OriginalName("PRODUCTION")] Production = 3,
      }

    }
    #endregion

  }

  internal sealed partial class TabletNotificationsInfo : pb::IMessage<TabletNotificationsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TabletNotificationsInfo> _parser = new pb::MessageParser<TabletNotificationsInfo>(() => new TabletNotificationsInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TabletNotificationsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TabletNotificationsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TabletNotificationsInfo(TabletNotificationsInfo other) : this() {
      _hasBits0 = other._hasBits0;
      timestamp_ = other.timestamp_;
      unreadChats_ = other.unreadChats_;
      notifyMessageCount_ = other.notifyMessageCount_;
      notifyMessage_ = other.notifyMessage_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TabletNotificationsInfo Clone() {
      return new TabletNotificationsInfo(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private readonly static ulong TimestampDefaultValue = 0UL;

    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unreadChats" field.</summary>
    public const int UnreadChatsFieldNumber = 3;
    private readonly static uint UnreadChatsDefaultValue = 0;

    private uint unreadChats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnreadChats {
      get { if ((_hasBits0 & 2) != 0) { return unreadChats_; } else { return UnreadChatsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        unreadChats_ = value;
      }
    }
    /// <summary>Gets whether the "unreadChats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnreadChats {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "unreadChats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnreadChats() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "notifyMessageCount" field.</summary>
    public const int NotifyMessageCountFieldNumber = 4;
    private readonly static uint NotifyMessageCountDefaultValue = 0;

    private uint notifyMessageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NotifyMessageCount {
      get { if ((_hasBits0 & 4) != 0) { return notifyMessageCount_; } else { return NotifyMessageCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        notifyMessageCount_ = value;
      }
    }
    /// <summary>Gets whether the "notifyMessageCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotifyMessageCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "notifyMessageCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotifyMessageCount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "notifyMessage" field.</summary>
    public const int NotifyMessageFieldNumber = 5;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.NotificationMessageInfo> _repeated_notifyMessage_codec
        = pb::FieldCodec.ForMessage(42, global::waxnet.Internal.Proto.NotificationMessageInfo.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.NotificationMessageInfo> notifyMessage_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.NotificationMessageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.NotificationMessageInfo> NotifyMessage {
      get { return notifyMessage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TabletNotificationsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TabletNotificationsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (UnreadChats != other.UnreadChats) return false;
      if (NotifyMessageCount != other.NotifyMessageCount) return false;
      if(!notifyMessage_.Equals(other.notifyMessage_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasUnreadChats) hash ^= UnreadChats.GetHashCode();
      if (HasNotifyMessageCount) hash ^= NotifyMessageCount.GetHashCode();
      hash ^= notifyMessage_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (HasUnreadChats) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnreadChats);
      }
      if (HasNotifyMessageCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(NotifyMessageCount);
      }
      notifyMessage_.WriteTo(output, _repeated_notifyMessage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (HasUnreadChats) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnreadChats);
      }
      if (HasNotifyMessageCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(NotifyMessageCount);
      }
      notifyMessage_.WriteTo(ref output, _repeated_notifyMessage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (HasUnreadChats) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnreadChats);
      }
      if (HasNotifyMessageCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotifyMessageCount);
      }
      size += notifyMessage_.CalculateSize(_repeated_notifyMessage_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TabletNotificationsInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasUnreadChats) {
        UnreadChats = other.UnreadChats;
      }
      if (other.HasNotifyMessageCount) {
        NotifyMessageCount = other.NotifyMessageCount;
      }
      notifyMessage_.Add(other.notifyMessage_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 24: {
            UnreadChats = input.ReadUInt32();
            break;
          }
          case 32: {
            NotifyMessageCount = input.ReadUInt32();
            break;
          }
          case 42: {
            notifyMessage_.AddEntriesFrom(input, _repeated_notifyMessage_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 24: {
            UnreadChats = input.ReadUInt32();
            break;
          }
          case 32: {
            NotifyMessageCount = input.ReadUInt32();
            break;
          }
          case 42: {
            notifyMessage_.AddEntriesFrom(ref input, _repeated_notifyMessage_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class NotificationMessageInfo : pb::IMessage<NotificationMessageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationMessageInfo> _parser = new pb::MessageParser<NotificationMessageInfo>(() => new NotificationMessageInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationMessageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationMessageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationMessageInfo(NotificationMessageInfo other) : this() {
      _hasBits0 = other._hasBits0;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      messageTimestamp_ = other.messageTimestamp_;
      participant_ = other.participant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationMessageInfo Clone() {
      return new NotificationMessageInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::waxnet.Internal.Proto.MessageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::waxnet.Internal.Proto.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "messageTimestamp" field.</summary>
    public const int MessageTimestampFieldNumber = 3;
    private readonly static ulong MessageTimestampDefaultValue = 0UL;

    private ulong messageTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return messageTimestamp_; } else { return MessageTimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        messageTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "messageTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "messageTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 4;
    private readonly static string ParticipantDefaultValue = "";

    private string participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Participant {
      get { return participant_ ?? ParticipantDefaultValue; }
      set {
        participant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "participant" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParticipant {
      get { return participant_ != null; }
    }
    /// <summary>Clears the value of the "participant" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParticipant() {
      participant_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationMessageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationMessageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (MessageTimestamp != other.MessageTimestamp) return false;
      if (Participant != other.Participant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (HasMessageTimestamp) hash ^= MessageTimestamp.GetHashCode();
      if (HasParticipant) hash ^= Participant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (HasMessageTimestamp) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageTimestamp);
      }
      if (HasParticipant) {
        output.WriteRawTag(34);
        output.WriteString(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (HasMessageTimestamp) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageTimestamp);
      }
      if (HasParticipant) {
        output.WriteRawTag(34);
        output.WriteString(Participant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (HasMessageTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageTimestamp);
      }
      if (HasParticipant) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Participant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationMessageInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::waxnet.Internal.Proto.MessageKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::waxnet.Internal.Proto.Message();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.HasMessageTimestamp) {
        MessageTimestamp = other.MessageTimestamp;
      }
      if (other.HasParticipant) {
        Participant = other.Participant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(Message);
            break;
          }
          case 24: {
            MessageTimestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            Participant = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(Message);
            break;
          }
          case 24: {
            MessageTimestamp = input.ReadUInt64();
            break;
          }
          case 34: {
            Participant = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class WebNotificationsInfo : pb::IMessage<WebNotificationsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebNotificationsInfo> _parser = new pb::MessageParser<WebNotificationsInfo>(() => new WebNotificationsInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebNotificationsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebNotificationsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebNotificationsInfo(WebNotificationsInfo other) : this() {
      _hasBits0 = other._hasBits0;
      timestamp_ = other.timestamp_;
      unreadChats_ = other.unreadChats_;
      notifyMessageCount_ = other.notifyMessageCount_;
      notifyMessages_ = other.notifyMessages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebNotificationsInfo Clone() {
      return new WebNotificationsInfo(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private readonly static ulong TimestampDefaultValue = 0UL;

    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unreadChats" field.</summary>
    public const int UnreadChatsFieldNumber = 3;
    private readonly static uint UnreadChatsDefaultValue = 0;

    private uint unreadChats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UnreadChats {
      get { if ((_hasBits0 & 2) != 0) { return unreadChats_; } else { return UnreadChatsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        unreadChats_ = value;
      }
    }
    /// <summary>Gets whether the "unreadChats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnreadChats {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "unreadChats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnreadChats() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "notifyMessageCount" field.</summary>
    public const int NotifyMessageCountFieldNumber = 4;
    private readonly static uint NotifyMessageCountDefaultValue = 0;

    private uint notifyMessageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NotifyMessageCount {
      get { if ((_hasBits0 & 4) != 0) { return notifyMessageCount_; } else { return NotifyMessageCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        notifyMessageCount_ = value;
      }
    }
    /// <summary>Gets whether the "notifyMessageCount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotifyMessageCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "notifyMessageCount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotifyMessageCount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "notifyMessages" field.</summary>
    public const int NotifyMessagesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::waxnet.Internal.Proto.WebMessageInfo> _repeated_notifyMessages_codec
        = pb::FieldCodec.ForMessage(42, global::waxnet.Internal.Proto.WebMessageInfo.Parser);
    private readonly pbc::RepeatedField<global::waxnet.Internal.Proto.WebMessageInfo> notifyMessages_ = new pbc::RepeatedField<global::waxnet.Internal.Proto.WebMessageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::waxnet.Internal.Proto.WebMessageInfo> NotifyMessages {
      get { return notifyMessages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebNotificationsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebNotificationsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (UnreadChats != other.UnreadChats) return false;
      if (NotifyMessageCount != other.NotifyMessageCount) return false;
      if(!notifyMessages_.Equals(other.notifyMessages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasUnreadChats) hash ^= UnreadChats.GetHashCode();
      if (HasNotifyMessageCount) hash ^= NotifyMessageCount.GetHashCode();
      hash ^= notifyMessages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (HasUnreadChats) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnreadChats);
      }
      if (HasNotifyMessageCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(NotifyMessageCount);
      }
      notifyMessages_.WriteTo(output, _repeated_notifyMessages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (HasUnreadChats) {
        output.WriteRawTag(24);
        output.WriteUInt32(UnreadChats);
      }
      if (HasNotifyMessageCount) {
        output.WriteRawTag(32);
        output.WriteUInt32(NotifyMessageCount);
      }
      notifyMessages_.WriteTo(ref output, _repeated_notifyMessages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (HasUnreadChats) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnreadChats);
      }
      if (HasNotifyMessageCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotifyMessageCount);
      }
      size += notifyMessages_.CalculateSize(_repeated_notifyMessages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebNotificationsInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasUnreadChats) {
        UnreadChats = other.UnreadChats;
      }
      if (other.HasNotifyMessageCount) {
        NotifyMessageCount = other.NotifyMessageCount;
      }
      notifyMessages_.Add(other.notifyMessages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 24: {
            UnreadChats = input.ReadUInt32();
            break;
          }
          case 32: {
            NotifyMessageCount = input.ReadUInt32();
            break;
          }
          case 42: {
            notifyMessages_.AddEntriesFrom(input, _repeated_notifyMessages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 24: {
            UnreadChats = input.ReadUInt32();
            break;
          }
          case 32: {
            NotifyMessageCount = input.ReadUInt32();
            break;
          }
          case 42: {
            notifyMessages_.AddEntriesFrom(ref input, _repeated_notifyMessages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PaymentInfo : pb::IMessage<PaymentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PaymentInfo> _parser = new pb::MessageParser<PaymentInfo>(() => new PaymentInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentInfo(PaymentInfo other) : this() {
      _hasBits0 = other._hasBits0;
      currencyDeprecated_ = other.currencyDeprecated_;
      amount1000_ = other.amount1000_;
      receiverJid_ = other.receiverJid_;
      status_ = other.status_;
      transactionTimestamp_ = other.transactionTimestamp_;
      requestMessageKey_ = other.requestMessageKey_ != null ? other.requestMessageKey_.Clone() : null;
      expiryTimestamp_ = other.expiryTimestamp_;
      futureproofed_ = other.futureproofed_;
      currency_ = other.currency_;
      txnStatus_ = other.txnStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentInfo Clone() {
      return new PaymentInfo(this);
    }

    /// <summary>Field number for the "currencyDeprecated" field.</summary>
    public const int CurrencyDeprecatedFieldNumber = 1;
    private readonly static global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY CurrencyDeprecatedDefaultValue = global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY.UnknownCurrency;

    private global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY currencyDeprecated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY CurrencyDeprecated {
      get { if ((_hasBits0 & 1) != 0) { return currencyDeprecated_; } else { return CurrencyDeprecatedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        currencyDeprecated_ = value;
      }
    }
    /// <summary>Gets whether the "currencyDeprecated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyDeprecated {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "currencyDeprecated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyDeprecated() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "amount1000" field.</summary>
    public const int Amount1000FieldNumber = 2;
    private readonly static ulong Amount1000DefaultValue = 0UL;

    private ulong amount1000_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount1000 {
      get { if ((_hasBits0 & 2) != 0) { return amount1000_; } else { return Amount1000DefaultValue; } }
      set {
        _hasBits0 |= 2;
        amount1000_ = value;
      }
    }
    /// <summary>Gets whether the "amount1000" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAmount1000 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "amount1000" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAmount1000() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "receiverJid" field.</summary>
    public const int ReceiverJidFieldNumber = 3;
    private readonly static string ReceiverJidDefaultValue = "";

    private string receiverJid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverJid {
      get { return receiverJid_ ?? ReceiverJidDefaultValue; }
      set {
        receiverJid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "receiverJid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReceiverJid {
      get { return receiverJid_ != null; }
    }
    /// <summary>Clears the value of the "receiverJid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReceiverJid() {
      receiverJid_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private readonly static global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS StatusDefaultValue = global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS.UnknownStatus;

    private global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS Status {
      get { if ((_hasBits0 & 4) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "transactionTimestamp" field.</summary>
    public const int TransactionTimestampFieldNumber = 5;
    private readonly static ulong TransactionTimestampDefaultValue = 0UL;

    private ulong transactionTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TransactionTimestamp {
      get { if ((_hasBits0 & 8) != 0) { return transactionTimestamp_; } else { return TransactionTimestampDefaultValue; } }
      set {
        _hasBits0 |= 8;
        transactionTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "transactionTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionTimestamp {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "transactionTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionTimestamp() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "requestMessageKey" field.</summary>
    public const int RequestMessageKeyFieldNumber = 6;
    private global::waxnet.Internal.Proto.MessageKey requestMessageKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey RequestMessageKey {
      get { return requestMessageKey_; }
      set {
        requestMessageKey_ = value;
      }
    }

    /// <summary>Field number for the "expiryTimestamp" field.</summary>
    public const int ExpiryTimestampFieldNumber = 7;
    private readonly static ulong ExpiryTimestampDefaultValue = 0UL;

    private ulong expiryTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExpiryTimestamp {
      get { if ((_hasBits0 & 16) != 0) { return expiryTimestamp_; } else { return ExpiryTimestampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        expiryTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "expiryTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpiryTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "expiryTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpiryTimestamp() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "futureproofed" field.</summary>
    public const int FutureproofedFieldNumber = 8;
    private readonly static bool FutureproofedDefaultValue = false;

    private bool futureproofed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Futureproofed {
      get { if ((_hasBits0 & 32) != 0) { return futureproofed_; } else { return FutureproofedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        futureproofed_ = value;
      }
    }
    /// <summary>Gets whether the "futureproofed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFutureproofed {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "futureproofed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFutureproofed() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 9;
    private readonly static string CurrencyDefaultValue = "";

    private string currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_ ?? CurrencyDefaultValue; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrency {
      get { return currency_ != null; }
    }
    /// <summary>Clears the value of the "currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrency() {
      currency_ = null;
    }

    /// <summary>Field number for the "txnStatus" field.</summary>
    public const int TxnStatusFieldNumber = 10;
    private readonly static global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS TxnStatusDefaultValue = global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS.Unknown;

    private global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS txnStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS TxnStatus {
      get { if ((_hasBits0 & 64) != 0) { return txnStatus_; } else { return TxnStatusDefaultValue; } }
      set {
        _hasBits0 |= 64;
        txnStatus_ = value;
      }
    }
    /// <summary>Gets whether the "txnStatus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTxnStatus {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "txnStatus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTxnStatus() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyDeprecated != other.CurrencyDeprecated) return false;
      if (Amount1000 != other.Amount1000) return false;
      if (ReceiverJid != other.ReceiverJid) return false;
      if (Status != other.Status) return false;
      if (TransactionTimestamp != other.TransactionTimestamp) return false;
      if (!object.Equals(RequestMessageKey, other.RequestMessageKey)) return false;
      if (ExpiryTimestamp != other.ExpiryTimestamp) return false;
      if (Futureproofed != other.Futureproofed) return false;
      if (Currency != other.Currency) return false;
      if (TxnStatus != other.TxnStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCurrencyDeprecated) hash ^= CurrencyDeprecated.GetHashCode();
      if (HasAmount1000) hash ^= Amount1000.GetHashCode();
      if (HasReceiverJid) hash ^= ReceiverJid.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasTransactionTimestamp) hash ^= TransactionTimestamp.GetHashCode();
      if (requestMessageKey_ != null) hash ^= RequestMessageKey.GetHashCode();
      if (HasExpiryTimestamp) hash ^= ExpiryTimestamp.GetHashCode();
      if (HasFutureproofed) hash ^= Futureproofed.GetHashCode();
      if (HasCurrency) hash ^= Currency.GetHashCode();
      if (HasTxnStatus) hash ^= TxnStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCurrencyDeprecated) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrencyDeprecated);
      }
      if (HasAmount1000) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount1000);
      }
      if (HasReceiverJid) {
        output.WriteRawTag(26);
        output.WriteString(ReceiverJid);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (HasTransactionTimestamp) {
        output.WriteRawTag(40);
        output.WriteUInt64(TransactionTimestamp);
      }
      if (requestMessageKey_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RequestMessageKey);
      }
      if (HasExpiryTimestamp) {
        output.WriteRawTag(56);
        output.WriteUInt64(ExpiryTimestamp);
      }
      if (HasFutureproofed) {
        output.WriteRawTag(64);
        output.WriteBool(Futureproofed);
      }
      if (HasCurrency) {
        output.WriteRawTag(74);
        output.WriteString(Currency);
      }
      if (HasTxnStatus) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TxnStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCurrencyDeprecated) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrencyDeprecated);
      }
      if (HasAmount1000) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount1000);
      }
      if (HasReceiverJid) {
        output.WriteRawTag(26);
        output.WriteString(ReceiverJid);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (HasTransactionTimestamp) {
        output.WriteRawTag(40);
        output.WriteUInt64(TransactionTimestamp);
      }
      if (requestMessageKey_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RequestMessageKey);
      }
      if (HasExpiryTimestamp) {
        output.WriteRawTag(56);
        output.WriteUInt64(ExpiryTimestamp);
      }
      if (HasFutureproofed) {
        output.WriteRawTag(64);
        output.WriteBool(Futureproofed);
      }
      if (HasCurrency) {
        output.WriteRawTag(74);
        output.WriteString(Currency);
      }
      if (HasTxnStatus) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TxnStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCurrencyDeprecated) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CurrencyDeprecated);
      }
      if (HasAmount1000) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount1000);
      }
      if (HasReceiverJid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceiverJid);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (HasTransactionTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TransactionTimestamp);
      }
      if (requestMessageKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestMessageKey);
      }
      if (HasExpiryTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpiryTimestamp);
      }
      if (HasFutureproofed) {
        size += 1 + 1;
      }
      if (HasCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (HasTxnStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TxnStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasCurrencyDeprecated) {
        CurrencyDeprecated = other.CurrencyDeprecated;
      }
      if (other.HasAmount1000) {
        Amount1000 = other.Amount1000;
      }
      if (other.HasReceiverJid) {
        ReceiverJid = other.ReceiverJid;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasTransactionTimestamp) {
        TransactionTimestamp = other.TransactionTimestamp;
      }
      if (other.requestMessageKey_ != null) {
        if (requestMessageKey_ == null) {
          RequestMessageKey = new global::waxnet.Internal.Proto.MessageKey();
        }
        RequestMessageKey.MergeFrom(other.RequestMessageKey);
      }
      if (other.HasExpiryTimestamp) {
        ExpiryTimestamp = other.ExpiryTimestamp;
      }
      if (other.HasFutureproofed) {
        Futureproofed = other.Futureproofed;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      if (other.HasTxnStatus) {
        TxnStatus = other.TxnStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrencyDeprecated = (global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY) input.ReadEnum();
            break;
          }
          case 16: {
            Amount1000 = input.ReadUInt64();
            break;
          }
          case 26: {
            ReceiverJid = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS) input.ReadEnum();
            break;
          }
          case 40: {
            TransactionTimestamp = input.ReadUInt64();
            break;
          }
          case 50: {
            if (requestMessageKey_ == null) {
              RequestMessageKey = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(RequestMessageKey);
            break;
          }
          case 56: {
            ExpiryTimestamp = input.ReadUInt64();
            break;
          }
          case 64: {
            Futureproofed = input.ReadBool();
            break;
          }
          case 74: {
            Currency = input.ReadString();
            break;
          }
          case 80: {
            TxnStatus = (global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrencyDeprecated = (global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_CURRENCY) input.ReadEnum();
            break;
          }
          case 16: {
            Amount1000 = input.ReadUInt64();
            break;
          }
          case 26: {
            ReceiverJid = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_STATUS) input.ReadEnum();
            break;
          }
          case 40: {
            TransactionTimestamp = input.ReadUInt64();
            break;
          }
          case 50: {
            if (requestMessageKey_ == null) {
              RequestMessageKey = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(RequestMessageKey);
            break;
          }
          case 56: {
            ExpiryTimestamp = input.ReadUInt64();
            break;
          }
          case 64: {
            Futureproofed = input.ReadBool();
            break;
          }
          case 74: {
            Currency = input.ReadString();
            break;
          }
          case 80: {
            TxnStatus = (global::waxnet.Internal.Proto.PaymentInfo.Types.PAYMENT_INFO_TXNSTATUS) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PaymentInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum PAYMENT_INFO_CURRENCY {
        [pbr::OriginalName("UNKNOWN_CURRENCY")] UnknownCurrency = 0,
        [pbr::OriginalName("INR")] Inr = 1,
      }

      public enum PAYMENT_INFO_STATUS {
        [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
        [pbr::OriginalName("PROCESSING")] Processing = 1,
        [pbr::OriginalName("SENT")] Sent = 2,
        [pbr::OriginalName("NEED_TO_ACCEPT")] NeedToAccept = 3,
        [pbr::OriginalName("COMPLETE")] Complete = 4,
        [pbr::OriginalName("COULD_NOT_COMPLETE")] CouldNotComplete = 5,
        [pbr::OriginalName("REFUNDED")] Refunded = 6,
        [pbr::OriginalName("EXPIRED")] Expired = 7,
        [pbr::OriginalName("REJECTED")] Rejected = 8,
        [pbr::OriginalName("CANCELLED")] Cancelled = 9,
        [pbr::OriginalName("WAITING_FOR_PAYER")] WaitingForPayer = 10,
        [pbr::OriginalName("WAITING")] Waiting = 11,
      }

      public enum PAYMENT_INFO_TXNSTATUS {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("PENDING_SETUP")] PendingSetup = 1,
        [pbr::OriginalName("PENDING_RECEIVER_SETUP")] PendingReceiverSetup = 2,
        [pbr::OriginalName("INIT")] Init = 3,
        [pbr::OriginalName("SUCCESS")] Success = 4,
        [pbr::OriginalName("COMPLETED")] Completed = 5,
        [pbr::OriginalName("FAILED")] Failed = 6,
        [pbr::OriginalName("FAILED_RISK")] FailedRisk = 7,
        [pbr::OriginalName("FAILED_PROCESSING")] FailedProcessing = 8,
        [pbr::OriginalName("FAILED_RECEIVER_PROCESSING")] FailedReceiverProcessing = 9,
        [pbr::OriginalName("FAILED_DA")] FailedDa = 10,
        [pbr::OriginalName("FAILED_DA_FINAL")] FailedDaFinal = 11,
        [pbr::OriginalName("REFUNDED_TXN")] RefundedTxn = 12,
        [pbr::OriginalName("REFUND_FAILED")] RefundFailed = 13,
        [pbr::OriginalName("REFUND_FAILED_PROCESSING")] RefundFailedProcessing = 14,
        [pbr::OriginalName("REFUND_FAILED_DA")] RefundFailedDa = 15,
        [pbr::OriginalName("EXPIRED_TXN")] ExpiredTxn = 16,
        [pbr::OriginalName("AUTH_CANCELED")] AuthCanceled = 17,
        [pbr::OriginalName("AUTH_CANCEL_FAILED_PROCESSING")] AuthCancelFailedProcessing = 18,
        [pbr::OriginalName("AUTH_CANCEL_FAILED")] AuthCancelFailed = 19,
        [pbr::OriginalName("COLLECT_INIT")] CollectInit = 20,
        [pbr::OriginalName("COLLECT_SUCCESS")] CollectSuccess = 21,
        [pbr::OriginalName("COLLECT_FAILED")] CollectFailed = 22,
        [pbr::OriginalName("COLLECT_FAILED_RISK")] CollectFailedRisk = 23,
        [pbr::OriginalName("COLLECT_REJECTED")] CollectRejected = 24,
        [pbr::OriginalName("COLLECT_EXPIRED")] CollectExpired = 25,
        [pbr::OriginalName("COLLECT_CANCELED")] CollectCanceled = 26,
        [pbr::OriginalName("COLLECT_CANCELLING")] CollectCancelling = 27,
      }

    }
    #endregion

  }

  internal sealed partial class WebMessageInfo : pb::IMessage<WebMessageInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebMessageInfo> _parser = new pb::MessageParser<WebMessageInfo>(() => new WebMessageInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebMessageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::waxnet.Internal.Proto.DefReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebMessageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebMessageInfo(WebMessageInfo other) : this() {
      _hasBits0 = other._hasBits0;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      messageTimestamp_ = other.messageTimestamp_;
      status_ = other.status_;
      participant_ = other.participant_;
      ignore_ = other.ignore_;
      starred_ = other.starred_;
      broadcast_ = other.broadcast_;
      pushName_ = other.pushName_;
      mediaCiphertextSha256_ = other.mediaCiphertextSha256_;
      multicast_ = other.multicast_;
      urlText_ = other.urlText_;
      urlNumber_ = other.urlNumber_;
      messageStubType_ = other.messageStubType_;
      clearMedia_ = other.clearMedia_;
      messageStubParameters_ = other.messageStubParameters_.Clone();
      duration_ = other.duration_;
      labels_ = other.labels_.Clone();
      paymentInfo_ = other.paymentInfo_ != null ? other.paymentInfo_.Clone() : null;
      finalLiveLocation_ = other.finalLiveLocation_ != null ? other.finalLiveLocation_.Clone() : null;
      quotedPaymentInfo_ = other.quotedPaymentInfo_ != null ? other.quotedPaymentInfo_.Clone() : null;
      ephemeralStartTimestamp_ = other.ephemeralStartTimestamp_;
      ephemeralDuration_ = other.ephemeralDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebMessageInfo Clone() {
      return new WebMessageInfo(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::waxnet.Internal.Proto.MessageKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.MessageKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::waxnet.Internal.Proto.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "messageTimestamp" field.</summary>
    public const int MessageTimestampFieldNumber = 3;
    private readonly static ulong MessageTimestampDefaultValue = 0UL;

    private ulong messageTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MessageTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return messageTimestamp_; } else { return MessageTimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        messageTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "messageTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "messageTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private readonly static global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS StatusDefaultValue = global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS.Error;

    private global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 5;
    private readonly static string ParticipantDefaultValue = "";

    private string participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Participant {
      get { return participant_ ?? ParticipantDefaultValue; }
      set {
        participant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "participant" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParticipant {
      get { return participant_ != null; }
    }
    /// <summary>Clears the value of the "participant" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParticipant() {
      participant_ = null;
    }

    /// <summary>Field number for the "ignore" field.</summary>
    public const int IgnoreFieldNumber = 16;
    private readonly static bool IgnoreDefaultValue = false;

    private bool ignore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ignore {
      get { if ((_hasBits0 & 4) != 0) { return ignore_; } else { return IgnoreDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ignore_ = value;
      }
    }
    /// <summary>Gets whether the "ignore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIgnore {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ignore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIgnore() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "starred" field.</summary>
    public const int StarredFieldNumber = 17;
    private readonly static bool StarredDefaultValue = false;

    private bool starred_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Starred {
      get { if ((_hasBits0 & 8) != 0) { return starred_; } else { return StarredDefaultValue; } }
      set {
        _hasBits0 |= 8;
        starred_ = value;
      }
    }
    /// <summary>Gets whether the "starred" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStarred {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "starred" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStarred() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "broadcast" field.</summary>
    public const int BroadcastFieldNumber = 18;
    private readonly static bool BroadcastDefaultValue = false;

    private bool broadcast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Broadcast {
      get { if ((_hasBits0 & 16) != 0) { return broadcast_; } else { return BroadcastDefaultValue; } }
      set {
        _hasBits0 |= 16;
        broadcast_ = value;
      }
    }
    /// <summary>Gets whether the "broadcast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBroadcast {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "broadcast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBroadcast() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "pushName" field.</summary>
    public const int PushNameFieldNumber = 19;
    private readonly static string PushNameDefaultValue = "";

    private string pushName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PushName {
      get { return pushName_ ?? PushNameDefaultValue; }
      set {
        pushName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pushName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPushName {
      get { return pushName_ != null; }
    }
    /// <summary>Clears the value of the "pushName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPushName() {
      pushName_ = null;
    }

    /// <summary>Field number for the "mediaCiphertextSha256" field.</summary>
    public const int MediaCiphertextSha256FieldNumber = 20;
    private readonly static pb::ByteString MediaCiphertextSha256DefaultValue = pb::ByteString.Empty;

    private pb::ByteString mediaCiphertextSha256_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MediaCiphertextSha256 {
      get { return mediaCiphertextSha256_ ?? MediaCiphertextSha256DefaultValue; }
      set {
        mediaCiphertextSha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mediaCiphertextSha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMediaCiphertextSha256 {
      get { return mediaCiphertextSha256_ != null; }
    }
    /// <summary>Clears the value of the "mediaCiphertextSha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaCiphertextSha256() {
      mediaCiphertextSha256_ = null;
    }

    /// <summary>Field number for the "multicast" field.</summary>
    public const int MulticastFieldNumber = 21;
    private readonly static bool MulticastDefaultValue = false;

    private bool multicast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Multicast {
      get { if ((_hasBits0 & 32) != 0) { return multicast_; } else { return MulticastDefaultValue; } }
      set {
        _hasBits0 |= 32;
        multicast_ = value;
      }
    }
    /// <summary>Gets whether the "multicast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMulticast {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "multicast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMulticast() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "urlText" field.</summary>
    public const int UrlTextFieldNumber = 22;
    private readonly static bool UrlTextDefaultValue = false;

    private bool urlText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UrlText {
      get { if ((_hasBits0 & 64) != 0) { return urlText_; } else { return UrlTextDefaultValue; } }
      set {
        _hasBits0 |= 64;
        urlText_ = value;
      }
    }
    /// <summary>Gets whether the "urlText" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrlText {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "urlText" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrlText() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "urlNumber" field.</summary>
    public const int UrlNumberFieldNumber = 23;
    private readonly static bool UrlNumberDefaultValue = false;

    private bool urlNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UrlNumber {
      get { if ((_hasBits0 & 128) != 0) { return urlNumber_; } else { return UrlNumberDefaultValue; } }
      set {
        _hasBits0 |= 128;
        urlNumber_ = value;
      }
    }
    /// <summary>Gets whether the "urlNumber" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrlNumber {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "urlNumber" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrlNumber() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "messageStubType" field.</summary>
    public const int MessageStubTypeFieldNumber = 24;
    private readonly static global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE MessageStubTypeDefaultValue = global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE.Unknown;

    private global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE messageStubType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE MessageStubType {
      get { if ((_hasBits0 & 256) != 0) { return messageStubType_; } else { return MessageStubTypeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        messageStubType_ = value;
      }
    }
    /// <summary>Gets whether the "messageStubType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageStubType {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "messageStubType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageStubType() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "clearMedia" field.</summary>
    public const int ClearMediaFieldNumber = 25;
    private readonly static bool ClearMediaDefaultValue = false;

    private bool clearMedia_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearMedia {
      get { if ((_hasBits0 & 512) != 0) { return clearMedia_; } else { return ClearMediaDefaultValue; } }
      set {
        _hasBits0 |= 512;
        clearMedia_ = value;
      }
    }
    /// <summary>Gets whether the "clearMedia" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClearMedia {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "clearMedia" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClearMedia() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "messageStubParameters" field.</summary>
    public const int MessageStubParametersFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _repeated_messageStubParameters_codec
        = pb::FieldCodec.ForString(210);
    private readonly pbc::RepeatedField<string> messageStubParameters_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MessageStubParameters {
      get { return messageStubParameters_; }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 27;
    private readonly static uint DurationDefaultValue = 0;

    private uint duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Duration {
      get { if ((_hasBits0 & 1024) != 0) { return duration_; } else { return DurationDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        duration_ = value;
      }
    }
    /// <summary>Gets whether the "duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDuration {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDuration() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 28;
    private static readonly pb::FieldCodec<string> _repeated_labels_codec
        = pb::FieldCodec.ForString(226);
    private readonly pbc::RepeatedField<string> labels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "paymentInfo" field.</summary>
    public const int PaymentInfoFieldNumber = 29;
    private global::waxnet.Internal.Proto.PaymentInfo paymentInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.PaymentInfo PaymentInfo {
      get { return paymentInfo_; }
      set {
        paymentInfo_ = value;
      }
    }

    /// <summary>Field number for the "finalLiveLocation" field.</summary>
    public const int FinalLiveLocationFieldNumber = 30;
    private global::waxnet.Internal.Proto.LiveLocationMessage finalLiveLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.LiveLocationMessage FinalLiveLocation {
      get { return finalLiveLocation_; }
      set {
        finalLiveLocation_ = value;
      }
    }

    /// <summary>Field number for the "quotedPaymentInfo" field.</summary>
    public const int QuotedPaymentInfoFieldNumber = 31;
    private global::waxnet.Internal.Proto.PaymentInfo quotedPaymentInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::waxnet.Internal.Proto.PaymentInfo QuotedPaymentInfo {
      get { return quotedPaymentInfo_; }
      set {
        quotedPaymentInfo_ = value;
      }
    }

    /// <summary>Field number for the "ephemeralStartTimestamp" field.</summary>
    public const int EphemeralStartTimestampFieldNumber = 32;
    private readonly static ulong EphemeralStartTimestampDefaultValue = 0UL;

    private ulong ephemeralStartTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EphemeralStartTimestamp {
      get { if ((_hasBits0 & 2048) != 0) { return ephemeralStartTimestamp_; } else { return EphemeralStartTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        ephemeralStartTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "ephemeralStartTimestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEphemeralStartTimestamp {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "ephemeralStartTimestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEphemeralStartTimestamp() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "ephemeralDuration" field.</summary>
    public const int EphemeralDurationFieldNumber = 33;
    private readonly static uint EphemeralDurationDefaultValue = 0;

    private uint ephemeralDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EphemeralDuration {
      get { if ((_hasBits0 & 4096) != 0) { return ephemeralDuration_; } else { return EphemeralDurationDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        ephemeralDuration_ = value;
      }
    }
    /// <summary>Gets whether the "ephemeralDuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEphemeralDuration {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "ephemeralDuration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEphemeralDuration() {
      _hasBits0 &= ~4096;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebMessageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebMessageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (MessageTimestamp != other.MessageTimestamp) return false;
      if (Status != other.Status) return false;
      if (Participant != other.Participant) return false;
      if (Ignore != other.Ignore) return false;
      if (Starred != other.Starred) return false;
      if (Broadcast != other.Broadcast) return false;
      if (PushName != other.PushName) return false;
      if (MediaCiphertextSha256 != other.MediaCiphertextSha256) return false;
      if (Multicast != other.Multicast) return false;
      if (UrlText != other.UrlText) return false;
      if (UrlNumber != other.UrlNumber) return false;
      if (MessageStubType != other.MessageStubType) return false;
      if (ClearMedia != other.ClearMedia) return false;
      if(!messageStubParameters_.Equals(other.messageStubParameters_)) return false;
      if (Duration != other.Duration) return false;
      if(!labels_.Equals(other.labels_)) return false;
      if (!object.Equals(PaymentInfo, other.PaymentInfo)) return false;
      if (!object.Equals(FinalLiveLocation, other.FinalLiveLocation)) return false;
      if (!object.Equals(QuotedPaymentInfo, other.QuotedPaymentInfo)) return false;
      if (EphemeralStartTimestamp != other.EphemeralStartTimestamp) return false;
      if (EphemeralDuration != other.EphemeralDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (HasMessageTimestamp) hash ^= MessageTimestamp.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasParticipant) hash ^= Participant.GetHashCode();
      if (HasIgnore) hash ^= Ignore.GetHashCode();
      if (HasStarred) hash ^= Starred.GetHashCode();
      if (HasBroadcast) hash ^= Broadcast.GetHashCode();
      if (HasPushName) hash ^= PushName.GetHashCode();
      if (HasMediaCiphertextSha256) hash ^= MediaCiphertextSha256.GetHashCode();
      if (HasMulticast) hash ^= Multicast.GetHashCode();
      if (HasUrlText) hash ^= UrlText.GetHashCode();
      if (HasUrlNumber) hash ^= UrlNumber.GetHashCode();
      if (HasMessageStubType) hash ^= MessageStubType.GetHashCode();
      if (HasClearMedia) hash ^= ClearMedia.GetHashCode();
      hash ^= messageStubParameters_.GetHashCode();
      if (HasDuration) hash ^= Duration.GetHashCode();
      hash ^= labels_.GetHashCode();
      if (paymentInfo_ != null) hash ^= PaymentInfo.GetHashCode();
      if (finalLiveLocation_ != null) hash ^= FinalLiveLocation.GetHashCode();
      if (quotedPaymentInfo_ != null) hash ^= QuotedPaymentInfo.GetHashCode();
      if (HasEphemeralStartTimestamp) hash ^= EphemeralStartTimestamp.GetHashCode();
      if (HasEphemeralDuration) hash ^= EphemeralDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (HasMessageTimestamp) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageTimestamp);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (HasParticipant) {
        output.WriteRawTag(42);
        output.WriteString(Participant);
      }
      if (HasIgnore) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Ignore);
      }
      if (HasStarred) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Starred);
      }
      if (HasBroadcast) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Broadcast);
      }
      if (HasPushName) {
        output.WriteRawTag(154, 1);
        output.WriteString(PushName);
      }
      if (HasMediaCiphertextSha256) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(MediaCiphertextSha256);
      }
      if (HasMulticast) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Multicast);
      }
      if (HasUrlText) {
        output.WriteRawTag(176, 1);
        output.WriteBool(UrlText);
      }
      if (HasUrlNumber) {
        output.WriteRawTag(184, 1);
        output.WriteBool(UrlNumber);
      }
      if (HasMessageStubType) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) MessageStubType);
      }
      if (HasClearMedia) {
        output.WriteRawTag(200, 1);
        output.WriteBool(ClearMedia);
      }
      messageStubParameters_.WriteTo(output, _repeated_messageStubParameters_codec);
      if (HasDuration) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(Duration);
      }
      labels_.WriteTo(output, _repeated_labels_codec);
      if (paymentInfo_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(PaymentInfo);
      }
      if (finalLiveLocation_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(FinalLiveLocation);
      }
      if (quotedPaymentInfo_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(QuotedPaymentInfo);
      }
      if (HasEphemeralStartTimestamp) {
        output.WriteRawTag(128, 2);
        output.WriteUInt64(EphemeralStartTimestamp);
      }
      if (HasEphemeralDuration) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(EphemeralDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (HasMessageTimestamp) {
        output.WriteRawTag(24);
        output.WriteUInt64(MessageTimestamp);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (HasParticipant) {
        output.WriteRawTag(42);
        output.WriteString(Participant);
      }
      if (HasIgnore) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Ignore);
      }
      if (HasStarred) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Starred);
      }
      if (HasBroadcast) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Broadcast);
      }
      if (HasPushName) {
        output.WriteRawTag(154, 1);
        output.WriteString(PushName);
      }
      if (HasMediaCiphertextSha256) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(MediaCiphertextSha256);
      }
      if (HasMulticast) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Multicast);
      }
      if (HasUrlText) {
        output.WriteRawTag(176, 1);
        output.WriteBool(UrlText);
      }
      if (HasUrlNumber) {
        output.WriteRawTag(184, 1);
        output.WriteBool(UrlNumber);
      }
      if (HasMessageStubType) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) MessageStubType);
      }
      if (HasClearMedia) {
        output.WriteRawTag(200, 1);
        output.WriteBool(ClearMedia);
      }
      messageStubParameters_.WriteTo(ref output, _repeated_messageStubParameters_codec);
      if (HasDuration) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(Duration);
      }
      labels_.WriteTo(ref output, _repeated_labels_codec);
      if (paymentInfo_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(PaymentInfo);
      }
      if (finalLiveLocation_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(FinalLiveLocation);
      }
      if (quotedPaymentInfo_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(QuotedPaymentInfo);
      }
      if (HasEphemeralStartTimestamp) {
        output.WriteRawTag(128, 2);
        output.WriteUInt64(EphemeralStartTimestamp);
      }
      if (HasEphemeralDuration) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(EphemeralDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (HasMessageTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MessageTimestamp);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (HasParticipant) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Participant);
      }
      if (HasIgnore) {
        size += 2 + 1;
      }
      if (HasStarred) {
        size += 2 + 1;
      }
      if (HasBroadcast) {
        size += 2 + 1;
      }
      if (HasPushName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PushName);
      }
      if (HasMediaCiphertextSha256) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(MediaCiphertextSha256);
      }
      if (HasMulticast) {
        size += 2 + 1;
      }
      if (HasUrlText) {
        size += 2 + 1;
      }
      if (HasUrlNumber) {
        size += 2 + 1;
      }
      if (HasMessageStubType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) MessageStubType);
      }
      if (HasClearMedia) {
        size += 2 + 1;
      }
      size += messageStubParameters_.CalculateSize(_repeated_messageStubParameters_codec);
      if (HasDuration) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
      }
      size += labels_.CalculateSize(_repeated_labels_codec);
      if (paymentInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PaymentInfo);
      }
      if (finalLiveLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FinalLiveLocation);
      }
      if (quotedPaymentInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuotedPaymentInfo);
      }
      if (HasEphemeralStartTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(EphemeralStartTimestamp);
      }
      if (HasEphemeralDuration) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(EphemeralDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    //[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebMessageInfo other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::waxnet.Internal.Proto.MessageKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::waxnet.Internal.Proto.Message();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.HasMessageTimestamp) {
        MessageTimestamp = other.MessageTimestamp;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasParticipant) {
        Participant = other.Participant;
      }
      if (other.HasIgnore) {
        Ignore = other.Ignore;
      }
      if (other.HasStarred) {
        Starred = other.Starred;
      }
      if (other.HasBroadcast) {
        Broadcast = other.Broadcast;
      }
      if (other.HasPushName) {
        PushName = other.PushName;
      }
      if (other.HasMediaCiphertextSha256) {
        MediaCiphertextSha256 = other.MediaCiphertextSha256;
      }
      if (other.HasMulticast) {
        Multicast = other.Multicast;
      }
      if (other.HasUrlText) {
        UrlText = other.UrlText;
      }
      if (other.HasUrlNumber) {
        UrlNumber = other.UrlNumber;
      }
      if (other.HasMessageStubType) {
        MessageStubType = other.MessageStubType;
      }
      if (other.HasClearMedia) {
        ClearMedia = other.ClearMedia;
      }
      messageStubParameters_.Add(other.messageStubParameters_);
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      labels_.Add(other.labels_);
      if (other.paymentInfo_ != null) {
        if (paymentInfo_ == null) {
          PaymentInfo = new global::waxnet.Internal.Proto.PaymentInfo();
        }
        PaymentInfo.MergeFrom(other.PaymentInfo);
      }
      if (other.finalLiveLocation_ != null) {
        if (finalLiveLocation_ == null) {
          FinalLiveLocation = new global::waxnet.Internal.Proto.LiveLocationMessage();
        }
        FinalLiveLocation.MergeFrom(other.FinalLiveLocation);
      }
      if (other.quotedPaymentInfo_ != null) {
        if (quotedPaymentInfo_ == null) {
          QuotedPaymentInfo = new global::waxnet.Internal.Proto.PaymentInfo();
        }
        QuotedPaymentInfo.MergeFrom(other.QuotedPaymentInfo);
      }
      if (other.HasEphemeralStartTimestamp) {
        EphemeralStartTimestamp = other.EphemeralStartTimestamp;
      }
      if (other.HasEphemeralDuration) {
        EphemeralDuration = other.EphemeralDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(Message);
            break;
          }
          case 24: {
            MessageTimestamp = input.ReadUInt64();
            break;
          }
          case 32: {
            Status = (global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS) input.ReadEnum();
            break;
          }
          case 42: {
            Participant = input.ReadString();
            break;
          }
          case 128: {
            Ignore = input.ReadBool();
            break;
          }
          case 136: {
            Starred = input.ReadBool();
            break;
          }
          case 144: {
            Broadcast = input.ReadBool();
            break;
          }
          case 154: {
            PushName = input.ReadString();
            break;
          }
          case 162: {
            MediaCiphertextSha256 = input.ReadBytes();
            break;
          }
          case 168: {
            Multicast = input.ReadBool();
            break;
          }
          case 176: {
            UrlText = input.ReadBool();
            break;
          }
          case 184: {
            UrlNumber = input.ReadBool();
            break;
          }
          case 192: {
            MessageStubType = (global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE) input.ReadEnum();
            break;
          }
          case 200: {
            ClearMedia = input.ReadBool();
            break;
          }
          case 210: {
            messageStubParameters_.AddEntriesFrom(input, _repeated_messageStubParameters_codec);
            break;
          }
          case 216: {
            Duration = input.ReadUInt32();
            break;
          }
          case 226: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
          case 234: {
            if (paymentInfo_ == null) {
              PaymentInfo = new global::waxnet.Internal.Proto.PaymentInfo();
            }
            input.ReadMessage(PaymentInfo);
            break;
          }
          case 242: {
            if (finalLiveLocation_ == null) {
              FinalLiveLocation = new global::waxnet.Internal.Proto.LiveLocationMessage();
            }
            input.ReadMessage(FinalLiveLocation);
            break;
          }
          case 250: {
            if (quotedPaymentInfo_ == null) {
              QuotedPaymentInfo = new global::waxnet.Internal.Proto.PaymentInfo();
            }
            input.ReadMessage(QuotedPaymentInfo);
            break;
          }
          case 256: {
            EphemeralStartTimestamp = input.ReadUInt64();
            break;
          }
          case 264: {
            EphemeralDuration = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    //[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::waxnet.Internal.Proto.MessageKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::waxnet.Internal.Proto.Message();
            }
            input.ReadMessage(Message);
            break;
          }
          case 24: {
            MessageTimestamp = input.ReadUInt64();
            break;
          }
          case 32: {
            Status = (global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STATUS) input.ReadEnum();
            break;
          }
          case 42: {
            Participant = input.ReadString();
            break;
          }
          case 128: {
            Ignore = input.ReadBool();
            break;
          }
          case 136: {
            Starred = input.ReadBool();
            break;
          }
          case 144: {
            Broadcast = input.ReadBool();
            break;
          }
          case 154: {
            PushName = input.ReadString();
            break;
          }
          case 162: {
            MediaCiphertextSha256 = input.ReadBytes();
            break;
          }
          case 168: {
            Multicast = input.ReadBool();
            break;
          }
          case 176: {
            UrlText = input.ReadBool();
            break;
          }
          case 184: {
            UrlNumber = input.ReadBool();
            break;
          }
          case 192: {
            MessageStubType = (global::waxnet.Internal.Proto.WebMessageInfo.Types.WEB_MESSAGE_INFO_STUBTYPE) input.ReadEnum();
            break;
          }
          case 200: {
            ClearMedia = input.ReadBool();
            break;
          }
          case 210: {
            messageStubParameters_.AddEntriesFrom(ref input, _repeated_messageStubParameters_codec);
            break;
          }
          case 216: {
            Duration = input.ReadUInt32();
            break;
          }
          case 226: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
          case 234: {
            if (paymentInfo_ == null) {
              PaymentInfo = new global::waxnet.Internal.Proto.PaymentInfo();
            }
            input.ReadMessage(PaymentInfo);
            break;
          }
          case 242: {
            if (finalLiveLocation_ == null) {
              FinalLiveLocation = new global::waxnet.Internal.Proto.LiveLocationMessage();
            }
            input.ReadMessage(FinalLiveLocation);
            break;
          }
          case 250: {
            if (quotedPaymentInfo_ == null) {
              QuotedPaymentInfo = new global::waxnet.Internal.Proto.PaymentInfo();
            }
            input.ReadMessage(QuotedPaymentInfo);
            break;
          }
          case 256: {
            EphemeralStartTimestamp = input.ReadUInt64();
            break;
          }
          case 264: {
            EphemeralDuration = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the WebMessageInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum WEB_MESSAGE_INFO_STATUS {
        [pbr::OriginalName("ERROR")] Error = 0,
        [pbr::OriginalName("PENDING")] Pending = 1,
        [pbr::OriginalName("SERVER_ACK")] ServerAck = 2,
        [pbr::OriginalName("DELIVERY_ACK")] DeliveryAck = 3,
        [pbr::OriginalName("READ")] Read = 4,
        [pbr::OriginalName("PLAYED")] Played = 5,
      }

      public enum WEB_MESSAGE_INFO_STUBTYPE {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("REVOKE")] Revoke = 1,
        [pbr::OriginalName("CIPHERTEXT")] Ciphertext = 2,
        [pbr::OriginalName("FUTUREPROOF")] Futureproof = 3,
        [pbr::OriginalName("NON_VERIFIED_TRANSITION")] NonVerifiedTransition = 4,
        [pbr::OriginalName("UNVERIFIED_TRANSITION")] UnverifiedTransition = 5,
        [pbr::OriginalName("VERIFIED_TRANSITION")] VerifiedTransition = 6,
        [pbr::OriginalName("VERIFIED_LOW_UNKNOWN")] VerifiedLowUnknown = 7,
        [pbr::OriginalName("VERIFIED_HIGH")] VerifiedHigh = 8,
        [pbr::OriginalName("VERIFIED_INITIAL_UNKNOWN")] VerifiedInitialUnknown = 9,
        [pbr::OriginalName("VERIFIED_INITIAL_LOW")] VerifiedInitialLow = 10,
        [pbr::OriginalName("VERIFIED_INITIAL_HIGH")] VerifiedInitialHigh = 11,
        [pbr::OriginalName("VERIFIED_TRANSITION_ANY_TO_NONE")] VerifiedTransitionAnyToNone = 12,
        [pbr::OriginalName("VERIFIED_TRANSITION_ANY_TO_HIGH")] VerifiedTransitionAnyToHigh = 13,
        [pbr::OriginalName("VERIFIED_TRANSITION_HIGH_TO_LOW")] VerifiedTransitionHighToLow = 14,
        [pbr::OriginalName("VERIFIED_TRANSITION_HIGH_TO_UNKNOWN")] VerifiedTransitionHighToUnknown = 15,
        [pbr::OriginalName("VERIFIED_TRANSITION_UNKNOWN_TO_LOW")] VerifiedTransitionUnknownToLow = 16,
        [pbr::OriginalName("VERIFIED_TRANSITION_LOW_TO_UNKNOWN")] VerifiedTransitionLowToUnknown = 17,
        [pbr::OriginalName("VERIFIED_TRANSITION_NONE_TO_LOW")] VerifiedTransitionNoneToLow = 18,
        [pbr::OriginalName("VERIFIED_TRANSITION_NONE_TO_UNKNOWN")] VerifiedTransitionNoneToUnknown = 19,
        [pbr::OriginalName("GROUP_CREATE")] GroupCreate = 20,
        [pbr::OriginalName("GROUP_CHANGE_SUBJECT")] GroupChangeSubject = 21,
        [pbr::OriginalName("GROUP_CHANGE_ICON")] GroupChangeIcon = 22,
        [pbr::OriginalName("GROUP_CHANGE_INVITE_LINK")] GroupChangeInviteLink = 23,
        [pbr::OriginalName("GROUP_CHANGE_DESCRIPTION")] GroupChangeDescription = 24,
        [pbr::OriginalName("GROUP_CHANGE_RESTRICT")] GroupChangeRestrict = 25,
        [pbr::OriginalName("GROUP_CHANGE_ANNOUNCE")] GroupChangeAnnounce = 26,
        [pbr::OriginalName("GROUP_PARTICIPANT_ADD")] GroupParticipantAdd = 27,
        [pbr::OriginalName("GROUP_PARTICIPANT_REMOVE")] GroupParticipantRemove = 28,
        [pbr::OriginalName("GROUP_PARTICIPANT_PROMOTE")] GroupParticipantPromote = 29,
        [pbr::OriginalName("GROUP_PARTICIPANT_DEMOTE")] GroupParticipantDemote = 30,
        [pbr::OriginalName("GROUP_PARTICIPANT_INVITE")] GroupParticipantInvite = 31,
        [pbr::OriginalName("GROUP_PARTICIPANT_LEAVE")] GroupParticipantLeave = 32,
        [pbr::OriginalName("GROUP_PARTICIPANT_CHANGE_NUMBER")] GroupParticipantChangeNumber = 33,
        [pbr::OriginalName("BROADCAST_CREATE")] BroadcastCreate = 34,
        [pbr::OriginalName("BROADCAST_ADD")] BroadcastAdd = 35,
        [pbr::OriginalName("BROADCAST_REMOVE")] BroadcastRemove = 36,
        [pbr::OriginalName("GENERIC_NOTIFICATION")] GenericNotification = 37,
        [pbr::OriginalName("E2E_IDENTITY_CHANGED")] E2EIdentityChanged = 38,
        [pbr::OriginalName("E2E_ENCRYPTED")] E2EEncrypted = 39,
        [pbr::OriginalName("CALL_MISSED_VOICE")] CallMissedVoice = 40,
        [pbr::OriginalName("CALL_MISSED_VIDEO")] CallMissedVideo = 41,
        [pbr::OriginalName("INDIVIDUAL_CHANGE_NUMBER")] IndividualChangeNumber = 42,
        [pbr::OriginalName("GROUP_DELETE")] GroupDelete = 43,
        [pbr::OriginalName("GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE")] GroupAnnounceModeMessageBounce = 44,
        [pbr::OriginalName("CALL_MISSED_GROUP_VOICE")] CallMissedGroupVoice = 45,
        [pbr::OriginalName("CALL_MISSED_GROUP_VIDEO")] CallMissedGroupVideo = 46,
        [pbr::OriginalName("PAYMENT_CIPHERTEXT")] PaymentCiphertext = 47,
        [pbr::OriginalName("PAYMENT_FUTUREPROOF")] PaymentFutureproof = 48,
        [pbr::OriginalName("PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED")] PaymentTransactionStatusUpdateFailed = 49,
        [pbr::OriginalName("PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED")] PaymentTransactionStatusUpdateRefunded = 50,
        [pbr::OriginalName("PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED")] PaymentTransactionStatusUpdateRefundFailed = 51,
        [pbr::OriginalName("PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP")] PaymentTransactionStatusReceiverPendingSetup = 52,
        [pbr::OriginalName("PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP")] PaymentTransactionStatusReceiverSuccessAfterHiccup = 53,
        [pbr::OriginalName("PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER")] PaymentActionAccountSetupReminder = 54,
        [pbr::OriginalName("PAYMENT_ACTION_SEND_PAYMENT_REMINDER")] PaymentActionSendPaymentReminder = 55,
        [pbr::OriginalName("PAYMENT_ACTION_SEND_PAYMENT_INVITATION")] PaymentActionSendPaymentInvitation = 56,
        [pbr::OriginalName("PAYMENT_ACTION_REQUEST_DECLINED")] PaymentActionRequestDeclined = 57,
        [pbr::OriginalName("PAYMENT_ACTION_REQUEST_EXPIRED")] PaymentActionRequestExpired = 58,
        [pbr::OriginalName("PAYMENT_ACTION_REQUEST_CANCELLED")] PaymentActionRequestCancelled = 59,
        [pbr::OriginalName("BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM")] BizVerifiedTransitionTopToBottom = 60,
        [pbr::OriginalName("BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP")] BizVerifiedTransitionBottomToTop = 61,
        [pbr::OriginalName("BIZ_INTRO_TOP")] BizIntroTop = 62,
        [pbr::OriginalName("BIZ_INTRO_BOTTOM")] BizIntroBottom = 63,
        [pbr::OriginalName("BIZ_NAME_CHANGE")] BizNameChange = 64,
        [pbr::OriginalName("BIZ_MOVE_TO_CONSUMER_APP")] BizMoveToConsumerApp = 65,
        [pbr::OriginalName("BIZ_TWO_TIER_MIGRATION_TOP")] BizTwoTierMigrationTop = 66,
        [pbr::OriginalName("BIZ_TWO_TIER_MIGRATION_BOTTOM")] BizTwoTierMigrationBottom = 67,
        [pbr::OriginalName("OVERSIZED")] Oversized = 68,
        [pbr::OriginalName("GROUP_CHANGE_NO_FREQUENTLY_FORWARDED")] GroupChangeNoFrequentlyForwarded = 69,
        [pbr::OriginalName("GROUP_V4_ADD_INVITE_SENT")] GroupV4AddInviteSent = 70,
        [pbr::OriginalName("GROUP_PARTICIPANT_ADD_REQUEST_JOIN")] GroupParticipantAddRequestJoin = 71,
        [pbr::OriginalName("CHANGE_EPHEMERAL_SETTING")] ChangeEphemeralSetting = 72,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
